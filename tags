!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABORT	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	558;"	d
ABORT_ON_ASSERT_FAILURE	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	561;"	d
ACQUIRE_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	414;"	d	file:
ACQUIRE_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	474;"	d	file:
ACQUIRE_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	537;"	d	file:
ACQUIRE_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	552;"	d	file:
ACQUIRE_MAGIC_INIT_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	601;"	d	file:
ACQUIRE_MAGIC_INIT_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	604;"	d	file:
ACQUIRE_MORECORE_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	593;"	d	file:
ACQUIRE_MORECORE_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	596;"	d	file:
AND	src/graphlab/extern/metis/libmetis/macros.h	19;"	d
ANY_INEDGE_SET_HPP	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	2;"	d
ARCHITECTURE_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	193;"	d	file:
ARCHITECTURE_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	196;"	d	file:
ARCHITECTURE_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	199;"	d	file:
ARCHITECTURE_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
ARCHITECTURE_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	206;"	d	file:
ARCHITECTURE_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	181;"	d	file:
ARCHITECTURE_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
ARCHITECTURE_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	187;"	d	file:
ARCHITECTURE_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
ARCHITECTURE_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
ARCHITECTURE_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	193;"	d	file:
ARCHITECTURE_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	196;"	d	file:
ARCHITECTURE_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	199;"	d	file:
ARCHITECTURE_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
ARCHITECTURE_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	206;"	d	file:
ARCHITECTURE_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	181;"	d	file:
ARCHITECTURE_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
ARCHITECTURE_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	187;"	d	file:
ARCHITECTURE_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
ARCHITECTURE_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
ARCHITECTURE_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	193;"	d	file:
ARCHITECTURE_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	196;"	d	file:
ARCHITECTURE_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	199;"	d	file:
ARCHITECTURE_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
ARCHITECTURE_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	206;"	d	file:
ARCHITECTURE_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	181;"	d	file:
ARCHITECTURE_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
ARCHITECTURE_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	187;"	d	file:
ARCHITECTURE_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
ARCHITECTURE_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
ASSERT	src/graphlab/extern/metis/GKlib/gk_macros.h	102;"	d
ASSERT	src/graphlab/extern/metis/GKlib/gk_macros.h	95;"	d
ASSERTP	src/graphlab/extern/metis/GKlib/gk_macros.h	106;"	d
ASSERTP	src/graphlab/extern/metis/GKlib/gk_macros.h	115;"	d
ASSERT_EQ	src/graphlab/logger/assertions.hpp	121;"	d
ASSERT_FALSE	src/graphlab/logger/assertions.hpp	132;"	d
ASSERT_GE	src/graphlab/logger/assertions.hpp	125;"	d
ASSERT_GT	src/graphlab/logger/assertions.hpp	126;"	d
ASSERT_LE	src/graphlab/logger/assertions.hpp	123;"	d
ASSERT_LT	src/graphlab/logger/assertions.hpp	124;"	d
ASSERT_MSG	src/graphlab/logger/assertions.hpp	140;"	d
ASSERT_NE	src/graphlab/logger/assertions.hpp	122;"	d
ASSERT_STREQ	src/graphlab/logger/assertions.hpp	133;"	d
ASSERT_TRUE	src/graphlab/logger/assertions.hpp	131;"	d
AllocGraphFields	src/graphlab/extern/metis/libmetis/memory.c	/^void AllocGraphFields(GraphType *graph, char *fields)$/;"	f
Allocate2WayNodePartitionMemory	src/graphlab/extern/metis/libmetis/rename.h	355;"	d
Allocate2WayNodePartitionMemory	src/graphlab/extern/metis/libmetis/srefine.c	/^void Allocate2WayNodePartitionMemory(CtrlType *ctrl, GraphType *graph)$/;"	f
Allocate2WayPartitionMemory	src/graphlab/extern/metis/libmetis/refine.c	/^void Allocate2WayPartitionMemory(CtrlType *ctrl, GraphType *graph)$/;"	f
Allocate2WayPartitionMemory	src/graphlab/extern/metis/libmetis/rename.h	334;"	d
AllocateKWayPartitionMemory	src/graphlab/extern/metis/libmetis/kwayrefine.c	/^void AllocateKWayPartitionMemory(CtrlType *ctrl, GraphType *graph, idxtype nparts)$/;"	f
AllocateKWayPartitionMemory	src/graphlab/extern/metis/libmetis/rename.h	111;"	d
AllocateVolKWayPartitionMemory	src/graphlab/extern/metis/libmetis/kwayvolrefine.c	/^void AllocateVolKWayPartitionMemory(CtrlType *ctrl, GraphType *graph, idxtype nparts)$/;"	f
AllocateVolKWayPartitionMemory	src/graphlab/extern/metis/libmetis/rename.h	134;"	d
AllocateWorkSpace	src/graphlab/extern/metis/libmetis/memory.c	/^void AllocateWorkSpace(CtrlType *ctrl, GraphType *graph, idxtype nparts)$/;"	f
AllocateWorkSpace	src/graphlab/extern/metis/libmetis/rename.h	165;"	d
AreAllBelow	src/graphlab/extern/metis/libmetis/mutil.c	/^idxtype AreAllBelow(idxtype ncon, float *v1, float *v2)$/;"	f
AreAllBelow	src/graphlab/extern/metis/libmetis/rename.h	288;"	d
AreAllHVwgtsAbove	src/graphlab/extern/metis/libmetis/mkwayfmh.c	/^idxtype AreAllHVwgtsAbove(idxtype ncon, float alpha, float *vwgt1, float beta, float *vwgt2, float *limit)$/;"	f
AreAllHVwgtsAbove	src/graphlab/extern/metis/libmetis/rename.h	232;"	d
AreAllHVwgtsBelow	src/graphlab/extern/metis/libmetis/mkwayfmh.c	/^idxtype AreAllHVwgtsBelow(idxtype ncon, float alpha, float *vwgt1, float beta, float *vwgt2, float *limit)$/;"	f
AreAllHVwgtsBelow	src/graphlab/extern/metis/libmetis/rename.h	231;"	d
AreAllVwgtsAbove	src/graphlab/extern/metis/libmetis/mutil.c	/^idxtype AreAllVwgtsAbove(idxtype ncon, float alpha, float *vwgt1, float beta, float *vwgt2, float limit)$/;"	f
AreAllVwgtsAbove	src/graphlab/extern/metis/libmetis/rename.h	286;"	d
AreAllVwgtsBelow	src/graphlab/extern/metis/libmetis/mutil.c	/^idxtype AreAllVwgtsBelow(idxtype ncon, float alpha, float *vwgt1, float beta, float *vwgt2, float limit)$/;"	f
AreAllVwgtsBelow	src/graphlab/extern/metis/libmetis/rename.h	284;"	d
AreAllVwgtsBelowFast	src/graphlab/extern/metis/libmetis/mmatch.c	/^idxtype AreAllVwgtsBelowFast(idxtype ncon, float *vwgt1, float *vwgt2, float limit)$/;"	f
AreAllVwgtsBelowFast	src/graphlab/extern/metis/libmetis/rename.h	254;"	d
AreAnyVwgtsBelow	src/graphlab/extern/metis/libmetis/mutil.c	/^idxtype AreAnyVwgtsBelow(idxtype ncon, float alpha, float *vwgt1, float beta, float *vwgt2, float limit)$/;"	f
AreAnyVwgtsBelow	src/graphlab/extern/metis/libmetis/rename.h	285;"	d
AuxTmr1	src/graphlab/extern/metis/libmetis/struct.h	/^         SepTmr, RefTmr, ProjectTmr, SplitTmr, AuxTmr1, AuxTmr2, AuxTmr3, AuxTmr4, AuxTmr5, AuxTmr6;$/;"	m	struct:controldef
AuxTmr2	src/graphlab/extern/metis/libmetis/struct.h	/^         SepTmr, RefTmr, ProjectTmr, SplitTmr, AuxTmr1, AuxTmr2, AuxTmr3, AuxTmr4, AuxTmr5, AuxTmr6;$/;"	m	struct:controldef
AuxTmr3	src/graphlab/extern/metis/libmetis/struct.h	/^         SepTmr, RefTmr, ProjectTmr, SplitTmr, AuxTmr1, AuxTmr2, AuxTmr3, AuxTmr4, AuxTmr5, AuxTmr6;$/;"	m	struct:controldef
AuxTmr4	src/graphlab/extern/metis/libmetis/struct.h	/^         SepTmr, RefTmr, ProjectTmr, SplitTmr, AuxTmr1, AuxTmr2, AuxTmr3, AuxTmr4, AuxTmr5, AuxTmr6;$/;"	m	struct:controldef
AuxTmr5	src/graphlab/extern/metis/libmetis/struct.h	/^         SepTmr, RefTmr, ProjectTmr, SplitTmr, AuxTmr1, AuxTmr2, AuxTmr3, AuxTmr4, AuxTmr5, AuxTmr6;$/;"	m	struct:controldef
AuxTmr6	src/graphlab/extern/metis/libmetis/struct.h	/^         SepTmr, RefTmr, ProjectTmr, SplitTmr, AuxTmr1, AuxTmr2, AuxTmr3, AuxTmr4, AuxTmr5, AuxTmr6;$/;"	m	struct:controldef
B64OFFSET	src/graphlab/extern/metis/GKlib/b64.c	16;"	d	file:
BARRIER	src/graphlab/schedulers/ischeduler.hpp	/^      BARRIER,$/;"	e	enum:graphlab::scheduler_options::options_enum
BINARY_SCHEDULER_CALLBACK_HPP	src/graphlab/schedulers/support/binary_scheduler_callback.hpp	2;"	d
BINARY_VERTEX_TASK_SET	src/graphlab/schedulers/support/binary_vertex_task_set.hpp	2;"	d
BLACK	src/graphlab/logger/logger.cpp	58;"	d	file:
BLANK	src/graphlab/util/mutable_queue.hpp	/^    static const index_type BLANK = -1;$/;"	m	class:graphlab::mutable_queue
BLINK	src/graphlab/logger/logger.cpp	54;"	d	file:
BLOCKING_QUEUE_HPP	src/graphlab/util/blocking_queue.hpp	2;"	d
BLUE	src/graphlab/logger/logger.cpp	62;"	d	file:
BM64OPT	src/graphlab/extern/bitmagic/bm.h	43;"	d
BM64OPT	src/graphlab/extern/bitmagic/bm.h	60;"	d
BM64_SSE4	src/graphlab/extern/bitmagic/bm.h	44;"	d
BMALGO_IMPL__H__INCLUDED__	src/graphlab/extern/bitmagic/bmalgo_impl.h	2;"	d
BMALGO__H__INCLUDED__	src/graphlab/extern/bitmagic/bmalgo.h	2;"	d
BMALLOC__H__INCLUDED__	src/graphlab/extern/bitmagic/bmalloc.h	2;"	d
BMCONST__H__INCLUDED__	src/graphlab/extern/bitmagic/bmconst.h	2;"	d
BMCOUNT_ADJ	src/graphlab/extern/bitmagic/bm.h	83;"	d
BMCOUNT_ADJ	src/graphlab/extern/bitmagic/bmundef.h	13;"	d
BMCOUNT_ADJ	src/graphlab/extern/bitmagic/bmundef.h	18;"	d
BMCOUNT_DEC	src/graphlab/extern/bitmagic/bm.h	80;"	d
BMCOUNT_DEC	src/graphlab/extern/bitmagic/bmundef.h	10;"	d
BMCOUNT_DEC	src/graphlab/extern/bitmagic/bmundef.h	15;"	d
BMCOUNT_INC	src/graphlab/extern/bitmagic/bm.h	79;"	d
BMCOUNT_INC	src/graphlab/extern/bitmagic/bmundef.h	14;"	d
BMCOUNT_INC	src/graphlab/extern/bitmagic/bmundef.h	9;"	d
BMCOUNT_SET	src/graphlab/extern/bitmagic/bm.h	82;"	d
BMCOUNT_SET	src/graphlab/extern/bitmagic/bmundef.h	12;"	d
BMCOUNT_SET	src/graphlab/extern/bitmagic/bmundef.h	17;"	d
BMCOUNT_VALID	src/graphlab/extern/bitmagic/bm.h	81;"	d
BMCOUNT_VALID	src/graphlab/extern/bitmagic/bmundef.h	11;"	d
BMCOUNT_VALID	src/graphlab/extern/bitmagic/bmundef.h	16;"	d
BMDBG__H__INCLUDED__	src/graphlab/extern/bitmagic/bmdbg.h	2;"	d
BMENCODING_H__INCLUDED__	src/graphlab/extern/bitmagic/encoding.h	2;"	d
BMFORCEINLINE	src/graphlab/extern/bitmagic/bmdef.h	116;"	d
BMFORCEINLINE	src/graphlab/extern/bitmagic/bmdef.h	119;"	d
BMFORCEINLINE	src/graphlab/extern/bitmagic/bmundef.h	20;"	d
BMFUNC__H__INCLUDED__	src/graphlab/extern/bitmagic/bmfunc.h	2;"	d
BMFWD__H__INCLUDED__	src/graphlab/extern/bitmagic/bmfwd.h	2;"	d
BMGAMMAENC__H__INCLUDED__	src/graphlab/extern/bitmagic/bmgamma.h	28;"	d
BMGAP_PTR	src/graphlab/extern/bitmagic/bmdef.h	75;"	d
BMGAP_PTR	src/graphlab/extern/bitmagic/bmdef.h	95;"	d
BMGAP_PTR	src/graphlab/extern/bitmagic/bmundef.h	21;"	d
BMPTR_CLEARBIT0	src/graphlab/extern/bitmagic/bmdef.h	84;"	d
BMPTR_CLEARBIT0	src/graphlab/extern/bitmagic/bmdef.h	90;"	d
BMPTR_CLEARBIT0	src/graphlab/extern/bitmagic/bmundef.h	25;"	d
BMPTR_SETBIT0	src/graphlab/extern/bitmagic/bmdef.h	83;"	d
BMPTR_SETBIT0	src/graphlab/extern/bitmagic/bmdef.h	89;"	d
BMPTR_SETBIT0	src/graphlab/extern/bitmagic/bmundef.h	24;"	d
BMPTR_TESTBIT0	src/graphlab/extern/bitmagic/bmdef.h	85;"	d
BMPTR_TESTBIT0	src/graphlab/extern/bitmagic/bmdef.h	91;"	d
BMPTR_TESTBIT0	src/graphlab/extern/bitmagic/bmundef.h	26;"	d
BMRANDOM__H__INCLUDED__	src/graphlab/extern/bitmagic/bmrandom.h	2;"	d
BMRESTRICT	src/graphlab/extern/bitmagic/bmdef.h	105;"	d
BMRESTRICT	src/graphlab/extern/bitmagic/bmdef.h	109;"	d
BMRESTRICT	src/graphlab/extern/bitmagic/bmdef.h	31;"	d
BMRESTRICT	src/graphlab/extern/bitmagic/bmdef.h	38;"	d
BMRESTRICT	src/graphlab/extern/bitmagic/bmundef.h	19;"	d
BMSERIAL__H__INCLUDED__	src/graphlab/extern/bitmagic/bmserial.h	2;"	d
BMSET_PTRGAP	src/graphlab/extern/bitmagic/bmdef.h	76;"	d
BMSET_PTRGAP	src/graphlab/extern/bitmagic/bmdef.h	96;"	d
BMSET_PTRGAP	src/graphlab/extern/bitmagic/bmundef.h	22;"	d
BMSSE2OPT	src/graphlab/extern/bitmagic/bm.h	46;"	d
BMSSE2__H__INCLUDED__	src/graphlab/extern/bitmagic/bmsse2.h	2;"	d
BMSSE4__H__INCLUDED__	src/graphlab/extern/bitmagic/bmsse4.h	2;"	d
BMSSE_UTIL__H__INCLUDED__	src/graphlab/extern/bitmagic/bmsse_util.h	2;"	d
BMTRANS__H__INCLUDED__	src/graphlab/extern/bitmagic/bmtrans.h	2;"	d
BMUTIL__H__INCLUDED__	src/graphlab/extern/bitmagic/bmutil.h	2;"	d
BMVECTOPT	src/graphlab/extern/bitmagic/bm.h	55;"	d
BMVECTOPT	src/graphlab/extern/bitmagic/bm.h	61;"	d
BMVECTOPT	src/graphlab/extern/bitmagic/bmundef.h	41;"	d
BMVMIN__H__INCLUDED__	src/graphlab/extern/bitmagic/bmvmin.h	2;"	d
BM_ALIGN16	src/graphlab/extern/bitmagic/bmdef.h	133;"	d
BM_ALIGN16	src/graphlab/extern/bitmagic/bmdef.h	145;"	d
BM_ALIGN16	src/graphlab/extern/bitmagic/bmdef.h	152;"	d
BM_ALIGN16	src/graphlab/extern/bitmagic/bmundef.h	54;"	d
BM_ALIGN16ATTR	src/graphlab/extern/bitmagic/bmdef.h	134;"	d
BM_ALIGN16ATTR	src/graphlab/extern/bitmagic/bmdef.h	146;"	d
BM_ALIGN16ATTR	src/graphlab/extern/bitmagic/bmdef.h	153;"	d
BM_ALIGN16ATTR	src/graphlab/extern/bitmagic/bmfunc.h	/^        bm::word_t _p[bm::set_block_size] BM_ALIGN16ATTR;$/;"	m	struct:bm::all_set::all_set_block
BM_ALIGN16ATTR	src/graphlab/extern/bitmagic/bmtrans.h	/^    T BM_ALIGN16 value[ROWS][COLS] BM_ALIGN16ATTR;$/;"	m	struct:bm::tmatrix
BM_ALIGN16ATTR	src/graphlab/extern/bitmagic/bmundef.h	55;"	d
BM_AND	src/graphlab/extern/bitmagic/bmfunc.h	/^    BM_AND = set_AND,$/;"	e	enum:bm::operation
BM_ASSERT	src/graphlab/extern/bitmagic/bmdef.h	50;"	d
BM_ASSERT	src/graphlab/extern/bitmagic/bmdef.h	53;"	d
BM_ASSERT	src/graphlab/extern/bitmagic/bmundef.h	32;"	d
BM_BIT	src/graphlab/extern/bitmagic/bmconst.h	/^    BM_BIT = 0, \/\/!< No GAP compression strategy. All new blocks are bit blocks.$/;"	e	enum:bm::strategy
BM_BLOCKS__H__INCLUDED__	src/graphlab/extern/bitmagic/bmblocks.h	2;"	d
BM_GAP	src/graphlab/extern/bitmagic/bmconst.h	/^    BM_GAP = 1  \/\/!< GAP compression is ON.$/;"	e	enum:bm::strategy
BM_HASFORCEINLINE	src/graphlab/extern/bitmagic/bmdef.h	29;"	d
BM_HM_DEFAULT	src/graphlab/extern/bitmagic/bmserial.h	/^    BM_HM_DEFAULT = 1,$/;"	e	enum:bm::serialization_header_mask
BM_HM_ID_LIST	src/graphlab/extern/bitmagic/bmserial.h	/^    BM_HM_ID_LIST = (1 << 2), \/\/\/< id list stored$/;"	e	enum:bm::serialization_header_mask
BM_HM_NO_BO	src/graphlab/extern/bitmagic/bmserial.h	/^    BM_HM_NO_BO   = (1 << 3), \/\/\/< no byte-order$/;"	e	enum:bm::serialization_header_mask
BM_HM_NO_GAPL	src/graphlab/extern/bitmagic/bmserial.h	/^    BM_HM_NO_GAPL = (1 << 4)  \/\/\/< no GAP levels$/;"	e	enum:bm::serialization_header_mask
BM_HM_RESIZE	src/graphlab/extern/bitmagic/bmserial.h	/^    BM_HM_RESIZE  = (1 << 1), \/\/\/< resized vector$/;"	e	enum:bm::serialization_header_mask
BM_INCWORD_BITCOUNT	src/graphlab/extern/bitmagic/bmdef.h	168;"	d
BM_INCWORD_BITCOUNT	src/graphlab/extern/bitmagic/bmdef.h	172;"	d
BM_INCWORD_BITCOUNT	src/graphlab/extern/bitmagic/bmundef.h	37;"	d
BM_IS_GAP	src/graphlab/extern/bitmagic/bmdef.h	77;"	d
BM_IS_GAP	src/graphlab/extern/bitmagic/bmdef.h	97;"	d
BM_IS_GAP	src/graphlab/extern/bitmagic/bmundef.h	23;"	d
BM_MINISET_ARRSIZE	src/graphlab/extern/bitmagic/bmundef.h	39;"	d
BM_MINISET_ARRSIZE	src/graphlab/extern/bitmagic/bmvmin.h	34;"	d
BM_MINISET_GAPLEN	src/graphlab/extern/bitmagic/bmundef.h	38;"	d
BM_MINISET_GAPLEN	src/graphlab/extern/bitmagic/bmvmin.h	33;"	d
BM_MM_EMPTY	src/graphlab/extern/bitmagic/bmundef.h	31;"	d
BM_NOASSERT	src/graphlab/extern/bitmagic/bmdef.h	42;"	d
BM_NO_BYTE_ORDER	src/graphlab/extern/bitmagic/bmserial.h	/^    BM_NO_BYTE_ORDER = 1,       \/\/\/< save no byte-order info (save some space)$/;"	e	enum:bm::serialization_flags
BM_NO_GAP_LENGTH	src/graphlab/extern/bitmagic/bmserial.h	/^    BM_NO_GAP_LENGTH = (1 << 1) \/\/\/< save no GAP info (save some space)$/;"	e	enum:bm::serialization_flags
BM_OR	src/graphlab/extern/bitmagic/bmfunc.h	/^    BM_OR  = set_OR,$/;"	e	enum:bm::operation
BM_SET_MMX_GUARD	src/graphlab/extern/bitmagic/bmdef.h	130;"	d
BM_SET_MMX_GUARD	src/graphlab/extern/bitmagic/bmdef.h	139;"	d
BM_SET_MMX_GUARD	src/graphlab/extern/bitmagic/bmundef.h	27;"	d
BM_SET_ONE_BLOCKS	src/graphlab/extern/bitmagic/bmserial.h	125;"	d
BM_SET_ONE_BLOCKS	src/graphlab/extern/bitmagic/bmundef.h	29;"	d
BM_SUB	src/graphlab/extern/bitmagic/bmfunc.h	/^    BM_SUB = set_SUB,$/;"	e	enum:bm::operation
BM_UNALIGNED_ACCESS_OK	src/graphlab/extern/bitmagic/bmdef.h	15;"	d
BM_UNALIGNED_ACCESS_OK	src/graphlab/extern/bitmagic/bmundef.h	53;"	d
BM_XOR	src/graphlab/extern/bitmagic/bmfunc.h	/^    BM_XOR = set_XOR$/;"	e	enum:bm::operation
BM__H__INCLUDED__	src/graphlab/extern/bitmagic/bm.h	2;"	d
BM__H__INCLUDED__	src/graphlab/extern/bitmagic/bmserial.h	37;"	d
BM_x86	src/graphlab/extern/bitmagic/bmdef.h	21;"	d
BM_x86	src/graphlab/extern/bitmagic/bmundef.h	56;"	d
BNDDelete	src/graphlab/extern/metis/libmetis/macros.h	47;"	d
BNDInsert	src/graphlab/extern/metis/libmetis/macros.h	40;"	d
BOUND	apps/svm/svm.cpp	/^const double BOUND = 1E-5;$/;"	v
BOUND_ID	apps/factor_graph_inference/factor_bp.hpp	/^enum constants {BOUND_ID, DAMPING_ID};$/;"	e	enum:constants
BOUND_ID	apps/image_denoise/loopybp_denoise.cpp	/^enum constants {EDGE_FACTOR_ID, BOUND_ID, DAMPING_ID};$/;"	e	enum:constants	file:
BRIGHT	src/graphlab/logger/logger.cpp	51;"	d	file:
BUFSIZE	apps/gabp/gabp.cpp	84;"	d	file:
BVERTEX	apps/svm/svm.cpp	/^const size_t BVERTEX = 7;       \/\/ size_t. vertexid of the B vertex$/;"	v
Balance2Way	src/graphlab/extern/metis/libmetis/balance.c	/^void Balance2Way(CtrlType *ctrl, GraphType *graph, idxtype *tpwgts, float ubfactor)$/;"	f
Balance2Way	src/graphlab/extern/metis/libmetis/rename.h	21;"	d
BalanceFillIn	src/graphlab/extern/metis/libmetis/kfmetis.c	/^void BalanceFillIn(CtrlType *ctrl, GraphType *graph, idxtype nparts, idxtype *part)$/;"	f
BetterBalance	src/graphlab/extern/metis/libmetis/mfm.c	/^idxtype BetterBalance(idxtype ncon, float *npwgts, float *tpwgts, float *diff)$/;"	f
BetterBalance	src/graphlab/extern/metis/libmetis/rename.h	189;"	d
BetterVBalance	src/graphlab/extern/metis/libmetis/mmatch.c	/^float BetterVBalance(idxtype ncon, idxtype norm, float *vwgt, float *u1wgt, float *u2wgt)$/;"	f
BetterVBalance	src/graphlab/extern/metis/libmetis/rename.h	253;"	d
BigEndian	src/graphlab/extern/bitmagic/bmfunc.h	/^	BigEndian    = 0,$/;"	e	enum:bm::ByteOrder
BinStrLR	src/graphlab/extern/bitmagic/bmdbg.h	/^unsigned BinStrLR(const char* str)$/;"	f
BitScanForward	src/graphlab/extern/metis/GKlib/dlmalloc.c	129;"	d	file:
BitScanReverse	src/graphlab/extern/metis/GKlib/dlmalloc.c	130;"	d	file:
Bnd2WayBalance	src/graphlab/extern/metis/libmetis/balance.c	/^void Bnd2WayBalance(CtrlType *ctrl, GraphType *graph, idxtype *tpwgts)$/;"	f
Bnd2WayBalance	src/graphlab/extern/metis/libmetis/rename.h	22;"	d
BucketSortKeysInc	src/graphlab/extern/metis/libmetis/bucketsort.c	/^void BucketSortKeysInc(idxtype n, idxtype max, idxtype *keys, idxtype *tperm, idxtype *perm)$/;"	f
BucketSortKeysInc	src/graphlab/extern/metis/libmetis/rename.h	27;"	d
BuildDTLeafContents	src/graphlab/extern/metis/libmetis/cmetis.c	/^void BuildDTLeafContents(ContactInfoType *cinfo, idxtype *sflag)$/;"	f
ByteOrder	src/graphlab/extern/bitmagic/bmfunc.h	/^enum ByteOrder$/;"	g	namespace:bm
C	apps/svm/svm.cpp	/^double C = 1.0;$/;"	v
CALL_MMAP	src/graphlab/extern/metis/GKlib/dlmalloc.c	229;"	d	file:
CALL_MMAP	src/graphlab/extern/metis/GKlib/dlmalloc.c	245;"	d	file:
CALL_MMAP	src/graphlab/extern/metis/GKlib/dlmalloc.c	253;"	d	file:
CALL_MMAP	src/graphlab/extern/metis/GKlib/dlmalloc.c	293;"	d	file:
CALL_MORECORE	src/graphlab/extern/metis/GKlib/dlmalloc.c	307;"	d	file:
CALL_MORECORE	src/graphlab/extern/metis/GKlib/dlmalloc.c	309;"	d	file:
CALL_MREMAP	src/graphlab/extern/metis/GKlib/dlmalloc.c	300;"	d	file:
CALL_MREMAP	src/graphlab/extern/metis/GKlib/dlmalloc.c	302;"	d	file:
CALL_MUNMAP	src/graphlab/extern/metis/GKlib/dlmalloc.c	230;"	d	file:
CALL_MUNMAP	src/graphlab/extern/metis/GKlib/dlmalloc.c	238;"	d	file:
CALL_MUNMAP	src/graphlab/extern/metis/GKlib/dlmalloc.c	294;"	d	file:
CHECK	src/graphlab/logger/assertions.hpp	65;"	d
CHECK_EQ	src/graphlab/logger/assertions.hpp	107;"	d
CHECK_ERR	src/graphlab/logger/assertions.hpp	150;"	d
CHECK_GE	src/graphlab/logger/assertions.hpp	111;"	d
CHECK_GT	src/graphlab/logger/assertions.hpp	112;"	d
CHECK_LE	src/graphlab/logger/assertions.hpp	109;"	d
CHECK_LT	src/graphlab/logger/assertions.hpp	110;"	d
CHECK_NE	src/graphlab/logger/assertions.hpp	108;"	d
CHECK_OP	src/graphlab/logger/assertions.hpp	96;"	d
CHUNK_ALIGN_MASK	src/graphlab/extern/metis/GKlib/dlmalloc.c	203;"	d	file:
CHUNK_OVERHEAD	src/graphlab/extern/metis/GKlib/dlmalloc.c	765;"	d	file:
CHUNK_OVERHEAD	src/graphlab/extern/metis/GKlib/dlmalloc.c	767;"	d	file:
CINUSE_BIT	src/graphlab/extern/metis/GKlib/dlmalloc.c	811;"	d	file:
CMAKE_BINARY_DIR	apps/CMakeFiles/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	apps/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	apps/demo/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	apps/factor_graph_inference/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	apps/gabp/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	apps/image_denoise/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	apps/pagerank/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	apps/shooting/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	apps/svm/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	src/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	src/graphlab/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	src/graphlab/engine/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	src/graphlab/extern/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	src/graphlab/extern/bitmagic/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	src/graphlab/extern/metis/GKlib/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	src/graphlab/extern/metis/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	src/graphlab/extern/metis/libmetis/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	src/graphlab/graph/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	src/graphlab/logger/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	src/graphlab/monitoring/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	src/graphlab/parallel/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	src/graphlab/schedulers/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	src/graphlab/schedulers/set_scheduler/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	src/graphlab/scope/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	src/graphlab/serialization/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	src/graphlab/shared_data/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	src/graphlab/tasks/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	src/graphlab/util/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_BINARY_DIR	src/graphlab/util/generics/Makefile	/^CMAKE_BINARY_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_COMMAND	apps/CMakeFiles/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	apps/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	apps/demo/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	apps/factor_graph_inference/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	apps/gabp/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	apps/image_denoise/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	apps/pagerank/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	apps/shooting/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	apps/svm/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/graphlab/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/graphlab/engine/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/graphlab/extern/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/graphlab/extern/bitmagic/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/graphlab/extern/metis/GKlib/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/graphlab/extern/metis/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/graphlab/extern/metis/libmetis/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/graphlab/graph/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/graphlab/logger/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/graphlab/monitoring/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/graphlab/parallel/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/graphlab/schedulers/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/graphlab/schedulers/set_scheduler/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/graphlab/scope/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/graphlab/serialization/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/graphlab/shared_data/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/graphlab/tasks/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/graphlab/util/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	src/graphlab/util/generics/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_EDIT_COMMAND	apps/CMakeFiles/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	apps/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	apps/demo/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	apps/factor_graph_inference/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	apps/gabp/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	apps/image_denoise/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	apps/pagerank/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	apps/shooting/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	apps/svm/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/graphlab/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/graphlab/engine/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/graphlab/extern/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/graphlab/extern/bitmagic/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/graphlab/extern/metis/GKlib/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/graphlab/extern/metis/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/graphlab/extern/metis/libmetis/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/graphlab/graph/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/graphlab/logger/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/graphlab/monitoring/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/graphlab/parallel/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/graphlab/schedulers/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/graphlab/schedulers/set_scheduler/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/graphlab/scope/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/graphlab/serialization/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/graphlab/shared_data/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/graphlab/tasks/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/graphlab/util/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	src/graphlab/util/generics/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_SOURCE_DIR	apps/CMakeFiles/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	apps/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	apps/demo/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	apps/factor_graph_inference/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	apps/gabp/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	apps/image_denoise/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	apps/pagerank/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	apps/shooting/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	apps/svm/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	src/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	src/graphlab/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	src/graphlab/engine/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	src/graphlab/extern/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	src/graphlab/extern/bitmagic/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	src/graphlab/extern/metis/GKlib/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	src/graphlab/extern/metis/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	src/graphlab/extern/metis/libmetis/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	src/graphlab/graph/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	src/graphlab/logger/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	src/graphlab/monitoring/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	src/graphlab/parallel/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	src/graphlab/schedulers/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	src/graphlab/schedulers/set_scheduler/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	src/graphlab/scope/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	src/graphlab/serialization/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	src/graphlab/shared_data/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	src/graphlab/tasks/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	src/graphlab/util/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMAKE_SOURCE_DIR	src/graphlab/util/generics/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mzj\/mzj_graphlab\/graphlab-1$/;"	m
CMFAIL	src/graphlab/extern/metis/GKlib/dlmalloc.c	224;"	d	file:
COARSEN_FRACTION	src/graphlab/extern/metis/libmetis/defs.h	107;"	d
COARSEN_FRACTION2	src/graphlab/extern/metis/libmetis/defs.h	108;"	d
COLOROUTPUT	src/graphlab/logger/logger.hpp	51;"	d
COMPILER_GCC	src/graphlab/extern/metis/metis.h	65;"	d
COMPILER_ICC	src/graphlab/extern/metis/metis.h	62;"	d
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	13;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	16;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	22;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	28;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	31;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	34;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	37;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	42;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	62;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	68;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	12;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	18;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	30;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	36;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	39;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	47;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	53;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	9;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	13;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	16;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	22;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	28;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	34;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	36;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	40;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	43;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	49;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	55;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	58;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	61;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	66;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	77;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	86;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	92;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	12;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	18;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	30;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	34;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	36;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	42;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	45;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	48;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	54;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	57;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	60;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	68;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	74;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	77;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	9;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	13;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	16;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	22;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	28;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	34;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	36;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	40;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	43;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	49;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	55;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	58;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	61;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	66;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	77;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	86;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	92;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	12;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	18;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	30;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	34;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	36;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	42;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	45;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	48;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	54;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	57;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	60;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	68;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	74;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	77;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	9;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	13;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	16;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	22;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	28;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	34;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	36;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	40;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	43;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	49;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	55;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	58;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	61;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	66;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	77;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	86;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	92;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	12;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	18;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	30;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	34;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	36;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	42;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	45;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	48;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	54;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	57;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	60;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	68;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	74;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	77;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	9;"	d	file:
COMPILER_MSC	src/graphlab/extern/metis/metis.h	59;"	d
COMPLETE	src/graphlab/schedulers/ischeduler.hpp	/^      COMPLETE      \/\/\/ The get_next_tasks function did not return a new$/;"	e	enum:graphlab::sched_status::status_enum
COMPRESSION_FRACTION	src/graphlab/extern/metis/libmetis/defs.h	111;"	d
CORRUPTION_ERROR_ACTION	src/graphlab/extern/metis/GKlib/dlmalloc.c	1320;"	d	file:
CORRUPTION_ERROR_ACTION	src/graphlab/extern/metis/GKlib/dlmalloc.c	1326;"	d	file:
COUNT_A	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^    COUNT_A      = set_COUNT_A,         \/\/!< A.count()$/;"	e	enum:bm::distance_metric
COUNT_AND	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^    COUNT_AND = set_COUNT_AND,          \/\/!< (A & B).count()$/;"	e	enum:bm::distance_metric
COUNT_B	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^    COUNT_B      = set_COUNT_B          \/\/!< B.count()$/;"	e	enum:bm::distance_metric
COUNT_OR	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^    COUNT_OR  = set_COUNT_OR,           \/\/!< (A | B).count()$/;"	e	enum:bm::distance_metric
COUNT_SUB_AB	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^    COUNT_SUB_AB = set_COUNT_SUB_AB,    \/\/!< (A - B).count()$/;"	e	enum:bm::distance_metric
COUNT_SUB_BA	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^    COUNT_SUB_BA = set_COUNT_SUB_BA,    \/\/!< (B - A).count()$/;"	e	enum:bm::distance_metric
COUNT_XOR	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^    COUNT_XOR = set_COUNT_XOR,          \/\/!< (A ^ B).count()$/;"	e	enum:bm::distance_metric
CRP_ALTLOCS	src/graphlab/extern/metis/GKlib/gk_defs.h	22;"	d
CRP_MISSINGBB	src/graphlab/extern/metis/GKlib/gk_defs.h	24;"	d
CRP_MISSINGCA	src/graphlab/extern/metis/GKlib/gk_defs.h	23;"	d
CRP_MULTIBB	src/graphlab/extern/metis/GKlib/gk_defs.h	27;"	d
CRP_MULTICA	src/graphlab/extern/metis/GKlib/gk_defs.h	26;"	d
CRP_MULTICHAIN	src/graphlab/extern/metis/GKlib/gk_defs.h	25;"	d
CType	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype CType;			\/* The type of coarsening *\/$/;"	m	struct:controldef
CURRENT_THREAD	src/graphlab/extern/metis/GKlib/dlmalloc.c	359;"	d	file:
CURRENT_THREAD	src/graphlab/extern/metis/GKlib/dlmalloc.c	433;"	d	file:
CURRENT_THREAD	src/graphlab/extern/metis/GKlib/dlmalloc.c	495;"	d	file:
CURRENT_THREAD	src/graphlab/extern/metis/GKlib/dlmalloc.c	550;"	d	file:
CYAN	src/graphlab/logger/logger.cpp	64;"	d	file:
Change2CNumbering	src/graphlab/extern/metis/libmetis/fortran.c	/^void Change2CNumbering(idxtype nvtxs, idxtype *xadj, idxtype *adjncy)$/;"	f
Change2CNumbering	src/graphlab/extern/metis/libmetis/rename.h	67;"	d
Change2FNumbering	src/graphlab/extern/metis/libmetis/fortran.c	/^void Change2FNumbering(idxtype nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vector)$/;"	f
Change2FNumbering	src/graphlab/extern/metis/libmetis/rename.h	68;"	d
Change2FNumbering2	src/graphlab/extern/metis/libmetis/fortran.c	/^void Change2FNumbering2(idxtype nvtxs, idxtype *xadj, idxtype *adjncy)$/;"	f
Change2FNumbering2	src/graphlab/extern/metis/libmetis/rename.h	69;"	d
Change2FNumberingOrder	src/graphlab/extern/metis/libmetis/fortran.c	/^void Change2FNumberingOrder(idxtype nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *v1, idxtype *v2)$/;"	f
Change2FNumberingOrder	src/graphlab/extern/metis/libmetis/rename.h	70;"	d
ChangeMesh2CNumbering	src/graphlab/extern/metis/libmetis/fortran.c	/^void ChangeMesh2CNumbering(idxtype n, idxtype *mesh)$/;"	f
ChangeMesh2CNumbering	src/graphlab/extern/metis/libmetis/rename.h	71;"	d
ChangeMesh2FNumbering	src/graphlab/extern/metis/libmetis/fortran.c	/^void ChangeMesh2FNumbering(idxtype n, idxtype *mesh, idxtype nvtxs, idxtype *xadj, idxtype *adjncy)$/;"	f
ChangeMesh2FNumbering	src/graphlab/extern/metis/libmetis/rename.h	72;"	d
ChangeMesh2FNumbering2	src/graphlab/extern/metis/libmetis/fortran.c	/^void ChangeMesh2FNumbering2(idxtype n, idxtype *mesh, idxtype ne, idxtype nn, idxtype *epart, idxtype *npart)$/;"	f
ChangeMesh2FNumbering2	src/graphlab/extern/metis/libmetis/rename.h	73;"	d
ChangeMesh2FNumbering3	src/graphlab/extern/metis/libmetis/fortran.c	/^void ChangeMesh2FNumbering3(idxtype n, idxtype *mesh)$/;"	f
CheckBnd	src/graphlab/extern/metis/libmetis/debug.c	/^idxtype CheckBnd(GraphType *graph) $/;"	f
CheckBnd	src/graphlab/extern/metis/libmetis/rename.h	49;"	d
CheckBnd2	src/graphlab/extern/metis/libmetis/debug.c	/^idxtype CheckBnd2(GraphType *graph) $/;"	f
CheckBnd2	src/graphlab/extern/metis/libmetis/rename.h	50;"	d
CheckDTree	src/graphlab/extern/metis/libmetis/cmetis.c	/^void CheckDTree(idxtype nvtxs, double *xyzcoords, idxtype *part, ContactInfoType *cinfo)$/;"	f
CheckDTreeSurface	src/graphlab/extern/metis/libmetis/cmetis.c	/^void CheckDTreeSurface(idxtype nvtxs, double *xyzcoords, idxtype *part, ContactInfoType *cinfo, idxtype *sflag)$/;"	f
CheckGraph	src/graphlab/extern/metis/libmetis/checkgraph.c	/^idxtype CheckGraph(GraphType *graph)$/;"	f
CheckHeap	src/graphlab/extern/metis/libmetis/pqueue.c	/^idxtype CheckHeap(PQueueType *queue)$/;"	f
CheckHeap	src/graphlab/extern/metis/libmetis/rename.h	329;"	d
CheckNodeBnd	src/graphlab/extern/metis/libmetis/debug.c	/^idxtype CheckNodeBnd(GraphType *graph, idxtype onbnd) $/;"	f
CheckNodeBnd	src/graphlab/extern/metis/libmetis/rename.h	51;"	d
CheckNodePartitionParams	src/graphlab/extern/metis/libmetis/debug.c	/^idxtype CheckNodePartitionParams(GraphType *graph)$/;"	f
CheckNodePartitionParams	src/graphlab/extern/metis/libmetis/rename.h	53;"	d
CheckRInfo	src/graphlab/extern/metis/libmetis/debug.c	/^idxtype CheckRInfo(RInfoType *rinfo)$/;"	f
CheckRInfo	src/graphlab/extern/metis/libmetis/rename.h	52;"	d
CheckVolKWayPartitionParams	src/graphlab/extern/metis/libmetis/kwayvolfm.c	/^void CheckVolKWayPartitionParams(CtrlType *ctrl, GraphType *graph, idxtype nparts)$/;"	f
CheckVolKWayPartitionParams	src/graphlab/extern/metis/libmetis/rename.h	127;"	d
Coarsen2Way	src/graphlab/extern/metis/libmetis/coarsen.c	/^GraphType *Coarsen2Way(CtrlType *ctrl, GraphType *graph)$/;"	f
Coarsen2Way	src/graphlab/extern/metis/libmetis/rename.h	39;"	d
CoarsenTmr	src/graphlab/extern/metis/libmetis/struct.h	/^  double TotalTmr, InitPartTmr, MatchTmr, ContractTmr, CoarsenTmr, UncoarsenTmr, $/;"	m	struct:controldef
CoarsenTo	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype CoarsenTo;		\/* The # of vertices in the coarsest graph *\/$/;"	m	struct:controldef
CompressGraph	src/graphlab/extern/metis/libmetis/compress.c	/^void CompressGraph(CtrlType *ctrl, GraphType *graph, idxtype nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *cptr, idxtype *cind)$/;"	f
CompressGraph	src/graphlab/extern/metis/libmetis/rename.h	43;"	d
Compute2WayHLoadImbalance	src/graphlab/extern/metis/libmetis/mfm.c	/^float Compute2WayHLoadImbalance(idxtype ncon, float *npwgts, float *tpwgts)$/;"	f
Compute2WayHLoadImbalance	src/graphlab/extern/metis/libmetis/rename.h	190;"	d
Compute2WayHLoadImbalanceVec	src/graphlab/extern/metis/libmetis/mfm.c	/^void Compute2WayHLoadImbalanceVec(idxtype ncon, float *npwgts, float *tpwgts, float *lbvec)$/;"	f
Compute2WayHLoadImbalanceVec	src/graphlab/extern/metis/libmetis/rename.h	191;"	d
Compute2WayNodePartitionParams	src/graphlab/extern/metis/libmetis/rename.h	356;"	d
Compute2WayNodePartitionParams	src/graphlab/extern/metis/libmetis/srefine.c	/^void Compute2WayNodePartitionParams(CtrlType *ctrl, GraphType *graph)$/;"	f
Compute2WayPartitionParams	src/graphlab/extern/metis/libmetis/refine.c	/^void Compute2WayPartitionParams(CtrlType *ctrl, GraphType *graph)$/;"	f
Compute2WayPartitionParams	src/graphlab/extern/metis/libmetis/rename.h	335;"	d
ComputeCoarseGraphSize	src/graphlab/extern/metis/libmetis/estmem.c	/^idxtype ComputeCoarseGraphSize(idxtype nvtxs, idxtype *xadj, idxtype *adjncy, idxtype cnvtxs, idxtype *cmap, idxtype *match, idxtype *perm)$/;"	f
ComputeCoarseGraphSize	src/graphlab/extern/metis/libmetis/rename.h	59;"	d
ComputeCut	src/graphlab/extern/metis/libmetis/debug.c	/^idxtype ComputeCut(GraphType *graph, idxtype *where)$/;"	f
ComputeCut	src/graphlab/extern/metis/libmetis/rename.h	48;"	d
ComputeElementBalance	src/graphlab/extern/metis/libmetis/rename.h	363;"	d
ComputeElementBalance	src/graphlab/extern/metis/libmetis/stat.c	/^float ComputeElementBalance(idxtype ne, idxtype nparts, idxtype *where)$/;"	f
ComputeHKWayLoadImbalance	src/graphlab/extern/metis/libmetis/mkwayfmh.c	/^void ComputeHKWayLoadImbalance(idxtype ncon, idxtype nparts, float *npwgts, float *lbvec)$/;"	f
ComputeHKWayLoadImbalance	src/graphlab/extern/metis/libmetis/rename.h	233;"	d
ComputeKWayBalanceBoundary	src/graphlab/extern/metis/libmetis/kwayrefine.c	/^void ComputeKWayBalanceBoundary(CtrlType *ctrl, GraphType *graph, idxtype nparts)$/;"	f
ComputeKWayBalanceBoundary	src/graphlab/extern/metis/libmetis/rename.h	116;"	d
ComputeKWayBoundary	src/graphlab/extern/metis/libmetis/kwayrefine.c	/^void ComputeKWayBoundary(CtrlType *ctrl, GraphType *graph, idxtype nparts)$/;"	f
ComputeKWayBoundary	src/graphlab/extern/metis/libmetis/rename.h	115;"	d
ComputeKWayPartitionParams	src/graphlab/extern/metis/libmetis/kwayrefine.c	/^void ComputeKWayPartitionParams(CtrlType *ctrl, GraphType *graph, idxtype nparts)$/;"	f
ComputeKWayPartitionParams	src/graphlab/extern/metis/libmetis/rename.h	112;"	d
ComputeKWayVolGains	src/graphlab/extern/metis/libmetis/kwayvolrefine.c	/^void ComputeKWayVolGains(CtrlType *ctrl, GraphType *graph, idxtype nparts)$/;"	f
ComputeKWayVolGains	src/graphlab/extern/metis/libmetis/rename.h	136;"	d
ComputeKWayVolume	src/graphlab/extern/metis/libmetis/kwayvolfm.c	/^void ComputeKWayVolume(GraphType *graph, idxtype nupd, idxtype *updind, idxtype *marker, idxtype *phtable)$/;"	f
ComputeKWayVolume	src/graphlab/extern/metis/libmetis/rename.h	125;"	d
ComputeLoadImbalance	src/graphlab/extern/metis/libmetis/mutil.c	/^float ComputeLoadImbalance(idxtype ncon, idxtype nparts, float *npwgts, float *tpwgts)$/;"	f
ComputeLoadImbalance	src/graphlab/extern/metis/libmetis/rename.h	287;"	d
ComputeMaxCut	src/graphlab/extern/metis/libmetis/debug.c	/^idxtype ComputeMaxCut(GraphType *graph, idxtype nparts, idxtype *where)$/;"	f
ComputeMaxNodeGain	src/graphlab/extern/metis/libmetis/rename.h	350;"	d
ComputeMaxNodeGain	src/graphlab/extern/metis/libmetis/sfm.c	/^idxtype ComputeMaxNodeGain(idxtype nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt)$/;"	f
ComputePartitionBalance	src/graphlab/extern/metis/libmetis/rename.h	362;"	d
ComputePartitionBalance	src/graphlab/extern/metis/libmetis/stat.c	/^void ComputePartitionBalance(GraphType *graph, idxtype nparts, idxtype *where, float *ubvec)$/;"	f
ComputePartitionFillIn	src/graphlab/extern/metis/libmetis/kfmetis.c	/^void ComputePartitionFillIn(CtrlType *ctrl, GraphType *graph, idxtype nparts, $/;"	f
ComputePartitionInfo	src/graphlab/extern/metis/libmetis/rename.h	361;"	d
ComputePartitionInfo	src/graphlab/extern/metis/libmetis/stat.c	/^void ComputePartitionInfo(GraphType *graph, idxtype nparts, idxtype *where)$/;"	f
ComputePartitionInfoBipartite	src/graphlab/extern/metis/libmetis/stat.c	/^void ComputePartitionInfoBipartite(GraphType *graph, idxtype nparts, idxtype *where)$/;"	f
ComputeSubDomainGraph	src/graphlab/extern/metis/libmetis/rename.h	370;"	d
ComputeSubDomainGraph	src/graphlab/extern/metis/libmetis/subdomains.c	/^void ComputeSubDomainGraph(GraphType *graph, idxtype nparts, idxtype *pmat, idxtype *ndoms)$/;"	f
ComputeVolKWayBalanceBoundary	src/graphlab/extern/metis/libmetis/kwayvolrefine.c	/^void ComputeVolKWayBalanceBoundary(CtrlType *ctrl, GraphType *graph, idxtype nparts)$/;"	f
ComputeVolKWayBalanceBoundary	src/graphlab/extern/metis/libmetis/rename.h	139;"	d
ComputeVolKWayBoundary	src/graphlab/extern/metis/libmetis/kwayvolrefine.c	/^void ComputeVolKWayBoundary(CtrlType *ctrl, GraphType *graph, idxtype nparts)$/;"	f
ComputeVolKWayBoundary	src/graphlab/extern/metis/libmetis/rename.h	138;"	d
ComputeVolKWayPartitionParams	src/graphlab/extern/metis/libmetis/kwayvolrefine.c	/^void ComputeVolKWayPartitionParams(CtrlType *ctrl, GraphType *graph, idxtype nparts)$/;"	f
ComputeVolKWayPartitionParams	src/graphlab/extern/metis/libmetis/rename.h	135;"	d
ComputeVolSubDomainGraph	src/graphlab/extern/metis/libmetis/kwayvolfm.c	/^void ComputeVolSubDomainGraph(GraphType *graph, idxtype nparts, idxtype *pmat, idxtype *ndoms)$/;"	f
ComputeVolSubDomainGraph	src/graphlab/extern/metis/libmetis/rename.h	128;"	d
ComputeVolume	src/graphlab/extern/metis/libmetis/kwayvolfm.c	/^idxtype ComputeVolume(GraphType *graph, idxtype *where)$/;"	f
ComputeVolume	src/graphlab/extern/metis/libmetis/rename.h	126;"	d
ConstructMinCoverSeparator	src/graphlab/extern/metis/libmetis/rename.h	342;"	d
ConstructMinCoverSeparator	src/graphlab/extern/metis/libmetis/separator.c	/^void ConstructMinCoverSeparator(CtrlType *ctrl, GraphType *graph, float ubfactor)$/;"	f
ConstructMinCoverSeparator0	src/graphlab/extern/metis/libmetis/rename.h	341;"	d
ConstructMinCoverSeparator0	src/graphlab/extern/metis/libmetis/separator.c	/^void ConstructMinCoverSeparator0(CtrlType *ctrl, GraphType *graph, float ubfactor)$/;"	f
ConstructSeparator	src/graphlab/extern/metis/libmetis/rename.h	340;"	d
ConstructSeparator	src/graphlab/extern/metis/libmetis/separator.c	/^void ConstructSeparator(CtrlType *ctrl, GraphType *graph, float ubfactor)$/;"	f
ContactInfoType	src/graphlab/extern/metis/libmetis/struct.h	/^} ContactInfoType;$/;"	t	typeref:struct:__anon4
ContractTmr	src/graphlab/extern/metis/libmetis/struct.h	/^  double TotalTmr, InitPartTmr, MatchTmr, ContractTmr, CoarsenTmr, UncoarsenTmr, $/;"	m	struct:controldef
CreateCoarseGraph	src/graphlab/extern/metis/libmetis/ccgraph.c	/^void CreateCoarseGraph(CtrlType *ctrl, GraphType *graph, idxtype cnvtxs, idxtype *match, idxtype *perm)$/;"	f
CreateCoarseGraph	src/graphlab/extern/metis/libmetis/rename.h	31;"	d
CreateCoarseGraphNoMask	src/graphlab/extern/metis/libmetis/ccgraph.c	/^void CreateCoarseGraphNoMask(CtrlType *ctrl, GraphType *graph, idxtype cnvtxs, idxtype *match, idxtype *perm)$/;"	f
CreateCoarseGraphNoMask	src/graphlab/extern/metis/libmetis/rename.h	32;"	d
CreateCoarseGraph_NVW	src/graphlab/extern/metis/libmetis/ccgraph.c	/^void CreateCoarseGraph_NVW(CtrlType *ctrl, GraphType *graph, idxtype cnvtxs, idxtype *match, idxtype *perm)$/;"	f
CreateCoarseGraph_NVW	src/graphlab/extern/metis/libmetis/rename.h	33;"	d
CreateGraph	src/graphlab/extern/metis/libmetis/memory.c	/^GraphType *CreateGraph(void)$/;"	f
CreateGraph	src/graphlab/extern/metis/libmetis/rename.h	171;"	d
CreatePartitionGraphForContact	src/graphlab/extern/metis/libmetis/cmetis.c	/^GraphType *CreatePartitionGraphForContact(idxtype nvtxs, idxtype *xadj, idxtype *adjncy, $/;"	f
CtrlType	src/graphlab/extern/metis/libmetis/struct.h	/^typedef struct controldef CtrlType;$/;"	t	typeref:struct:controldef
DAMPING_ID	apps/factor_graph_inference/factor_bp.hpp	/^enum constants {BOUND_ID, DAMPING_ID};$/;"	e	enum:constants
DAMPING_ID	apps/image_denoise/loopybp_denoise.cpp	/^enum constants {EDGE_FACTOR_ID, BOUND_ID, DAMPING_ID};$/;"	e	enum:constants	file:
DASSERT_FALSE	src/graphlab/logger/assertions.hpp	161;"	d
DASSERT_FALSE	src/graphlab/logger/assertions.hpp	172;"	d
DASSERT_MSG	src/graphlab/logger/assertions.hpp	162;"	d
DASSERT_MSG	src/graphlab/logger/assertions.hpp	173;"	d
DASSERT_TRUE	src/graphlab/logger/assertions.hpp	160;"	d
DASSERT_TRUE	src/graphlab/logger/assertions.hpp	171;"	d
DATA_VERTEX	apps/shooting/shooting.cpp	/^enum vertex_type {DATA_VERTEX, FEATURE_VERTEX};$/;"	e	enum:vertex_type	file:
DBG_COARSEN	src/graphlab/extern/metis/libmetis/defs.h	122;"	d
DBG_COARSEN	src/graphlab/extern/metis/metis.h	282;"	d
DBG_IPART	src/graphlab/extern/metis/libmetis/defs.h	124;"	d
DBG_IPART	src/graphlab/extern/metis/metis.h	284;"	d
DBG_KWAYPINFO	src/graphlab/extern/metis/libmetis/defs.h	126;"	d
DBG_KWAYPINFO	src/graphlab/extern/metis/metis.h	286;"	d
DBG_MOVEINFO	src/graphlab/extern/metis/libmetis/defs.h	125;"	d
DBG_MOVEINFO	src/graphlab/extern/metis/metis.h	285;"	d
DBG_OUTPUT	src/graphlab/extern/metis/libmetis/defs.h	121;"	d
DBG_OUTPUT	src/graphlab/extern/metis/metis.h	281;"	d
DBG_REFINE	src/graphlab/extern/metis/libmetis/defs.h	123;"	d
DBG_REFINE	src/graphlab/extern/metis/metis.h	283;"	d
DBG_SEPINFO	src/graphlab/extern/metis/libmetis/defs.h	127;"	d
DBG_SEPINFO	src/graphlab/extern/metis/metis.h	287;"	d
DBG_TIME	src/graphlab/extern/metis/libmetis/defs.h	120;"	d
DBG_TIME	src/graphlab/extern/metis/metis.h	280;"	d
DCHECK_EQ	src/graphlab/logger/assertions.hpp	154;"	d
DCHECK_EQ	src/graphlab/logger/assertions.hpp	165;"	d
DCHECK_GE	src/graphlab/logger/assertions.hpp	158;"	d
DCHECK_GE	src/graphlab/logger/assertions.hpp	169;"	d
DCHECK_GT	src/graphlab/logger/assertions.hpp	159;"	d
DCHECK_GT	src/graphlab/logger/assertions.hpp	170;"	d
DCHECK_LE	src/graphlab/logger/assertions.hpp	156;"	d
DCHECK_LE	src/graphlab/logger/assertions.hpp	167;"	d
DCHECK_LT	src/graphlab/logger/assertions.hpp	157;"	d
DCHECK_LT	src/graphlab/logger/assertions.hpp	168;"	d
DCHECK_NE	src/graphlab/logger/assertions.hpp	155;"	d
DCHECK_NE	src/graphlab/logger/assertions.hpp	166;"	d
DC_INTERNAL_HPP	src/graphlab/distributed/dc_internal.hpp	2;"	d
DC_LOCAL_BASE_PORT_NUM	src/graphlab/distributed/distributed_control.hpp	23;"	d
DEBUG_KEY	apps/gabp/gabp.cpp	/^  DEBUG_KEY,$/;"	e	enum:shared_data_keys	file:
DECLARE_TEMP_BLOCK	src/graphlab/extern/bitmagic/bmconst.h	103;"	d
DECLARE_TEMP_BLOCK	src/graphlab/extern/bitmagic/bmconst.h	94;"	d
DECLARE_TEMP_BLOCK	src/graphlab/extern/bitmagic/bmundef.h	30;"	d
DEFAULT_GRANULARITY	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	614;"	d
DEFAULT_GRANULARITY	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	616;"	d
DEFAULT_MMAP_THRESHOLD	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	628;"	d
DEFAULT_MMAP_THRESHOLD	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	630;"	d
DEFAULT_TRIM_THRESHOLD	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	621;"	d
DEFAULT_TRIM_THRESHOLD	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	623;"	d
DEGREERESIDUALSNOMULTIPLE	apps/pagerank/pagerankapp.cpp	30;"	d	file:
DEGREERESIDUALSWITHMULTIPLE	apps/pagerank/pagerankapp.cpp	29;"	d	file:
DEPSILON	src/graphlab/extern/metis/libmetis/cmetis.c	16;"	d	file:
DIM	src/graphlab/logger/logger.cpp	52;"	d	file:
DIRECT_CALLBACK_HPP	src/graphlab/schedulers/support/direct_callback.hpp	4;"	d
DIRECT_MMAP	src/graphlab/extern/metis/GKlib/dlmalloc.c	231;"	d	file:
DIRECT_MMAP	src/graphlab/extern/metis/GKlib/dlmalloc.c	259;"	d	file:
DIRECT_MMAP	src/graphlab/extern/metis/GKlib/dlmalloc.c	295;"	d	file:
DISABLE_ADD_TASKS	apps/pagerank/pagerankapp.cpp	/^bool DISABLE_ADD_TASKS = false;$/;"	v
DISALLOW_COPY_AND_ASSIGN	src/graphlab/macros_def.hpp	20;"	d
DISALLOW_COPY_AND_ASSIGN	src/graphlab/macros_undef.hpp	10;"	d
DISPATCH0	src/graphlab/distributed/repack_dispatch.hpp	/^void DISPATCH0(distributed_control& dc, size_t source, $/;"	f	namespace:graphlab
DISPATCH1	src/graphlab/distributed/repack_dispatch.hpp	/^void DISPATCH1(distributed_control& dc, size_t source, $/;"	f	namespace:graphlab
DISPATCH2	src/graphlab/distributed/repack_dispatch.hpp	/^void DISPATCH2(distributed_control& dc, size_t source, $/;"	f	namespace:graphlab
DISPATCH3	src/graphlab/distributed/repack_dispatch.hpp	/^void DISPATCH3(distributed_control& dc, size_t source, $/;"	f	namespace:graphlab
DISPATCH4	src/graphlab/distributed/repack_dispatch.hpp	/^void DISPATCH4(distributed_control& dc, size_t source, $/;"	f	namespace:graphlab
DISPATCH5	src/graphlab/distributed/repack_dispatch.hpp	/^void DISPATCH5(distributed_control& dc, size_t source, $/;"	f	namespace:graphlab
DISPATCH6	src/graphlab/distributed/repack_dispatch.hpp	/^void DISPATCH6(distributed_control& dc, size_t source, $/;"	f	namespace:graphlab
DISTRIBUTED_CLONED_GRAPH_HPP	src/graphlab/distributed/graph/cloned_graph.hpp	2;"	d
DISTRIBUTED_COLLAB_SCHEDULER_WRAPPER_HPP	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	2;"	d
DISTRIBUTED_CONTROL	src/graphlab/schedulers/ischeduler.hpp	/^      DISTRIBUTED_CONTROL$/;"	e	enum:graphlab::scheduler_options::options_enum
DISTRIBUTED_CONTROL_PACKET_HEADERS_HPP	src/graphlab/distributed/dc_packet_headers.hpp	2;"	d
DISTRIBUTED_CONTROL_TYPES_HPP	src/graphlab/distributed/distributed_control_types.hpp	2;"	d
DISTRIBUTED_ENGINE_HPP	src/graphlab/distributed/distributed_engine.hpp	2;"	d
DISTRIBUTED_GRAPH_LOCK_MANAGER	src/graphlab/distributed/graph_lock_manager.hpp	2;"	d
DISTRIBUTED_HASH_TABLE_HPP	src/graphlab/distributed/distributed_hash_table.hpp	9;"	d
DISTRIBUTED_LOCK_MANAGER_HPP	src/graphlab/distributed/lock_manager.hpp	2;"	d
DISTRIBUTED_PARTITIONED_GRAPH_HPP	src/graphlab/distributed/graph/distributed_graph.hpp	2;"	d
DISTRIBUTED_SCHEDULER_WRAPPER_HPP	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	2;"	d
DISTRIBUTED_SCOPE_HPP	src/graphlab/distributed/distributed_scope.hpp	2;"	d
DISTRIBUTED_TERMINATOR_HPP	src/graphlab/distributed/distributed_terminator.hpp	2;"	d
DISTR_METRICS_HPP	src/graphlab/distributed/metrics/distributed_metrics.hpp	6;"	d
DISTR_RR2_SCHEDULER_HPP	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	6;"	d
DISTR_RR_SCHEDULER_HPP	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	6;"	d
DKeyValueType	src/graphlab/extern/metis/libmetis/struct.h	/^} DKeyValueType;$/;"	t	typeref:struct:__anon5
DTreeNodeType	src/graphlab/extern/metis/libmetis/struct.h	/^} DTreeNodeType;$/;"	t	typeref:struct:__anon3
D_PATTERN	src/graphlab/extern/metis/libmetis/streamio.c	22;"	d	file:
D_PRINT_REPLACEMENT	src/graphlab/extern/metis/libmetis/streamio.c	24;"	d	file:
D_SCAN_REPLACEMENT	src/graphlab/extern/metis/libmetis/streamio.c	23;"	d	file:
DeBruijn_bit_position	src/graphlab/extern/bitmagic/bmconst.h	/^template<bool T> struct DeBruijn_bit_position$/;"	s	namespace:bm
EDGE_CONSISTENCY	src/graphlab/scope/iscope.hpp	/^      EDGE_CONSISTENCY,        \/\/ write to self, read from adjacent structures$/;"	e	enum:graphlab::scope_range::scope_range_enum
EDGE_FACTOR_ID	apps/image_denoise/gibbs_denoise.cpp	/^enum constants {EDGE_FACTOR_ID, NUM_SAMPLES_ID};$/;"	e	enum:constants	file:
EDGE_FACTOR_ID	apps/image_denoise/loopybp_denoise.cpp	/^enum constants {EDGE_FACTOR_ID, BOUND_ID, DAMPING_ID};$/;"	e	enum:constants	file:
EDegreeType	src/graphlab/extern/metis/libmetis/struct.h	/^typedef struct edegreedef EDegreeType;$/;"	t	typeref:struct:edegreedef
EIGENVECTORAPP_HPP	apps/pagerank/pagerankapp.hpp	11;"	d
ENGINE_OPTIONS_HPP	src/graphlab/engine/engine_options.hpp	2;"	d
EPSILON	src/graphlab/factors/table_factor.hpp	/^  static const double EPSILON = std::numeric_limits<double>::min();$/;"	m	namespace:graphlab
ERASE_EVENT	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	/^  const size_t ERASE_EVENT = 2;$/;"	m	namespace:graphlab
ERROR	src/graphlab/logger/assertions.hpp	186;"	d
EXECUTION_PLAN_HPP	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	2;"	d
EXEC_FORCED_ABORT	src/graphlab/engine/iengine.hpp	/^    EXEC_FORCED_ABORT$/;"	e	enum:graphlab::exec_status
EXEC_TASK_BUDGET_EXCEEDED	src/graphlab/engine/iengine.hpp	/^    EXEC_TASK_BUDGET_EXCEEDED,$/;"	e	enum:graphlab::exec_status
EXEC_TASK_DEPLETION	src/graphlab/engine/iengine.hpp	/^    EXEC_TASK_DEPLETION,$/;"	e	enum:graphlab::exec_status
EXEC_TERM_FUNCTION	src/graphlab/engine/iengine.hpp	/^    EXEC_TERM_FUNCTION,$/;"	e	enum:graphlab::exec_status
EXEC_TIMEOUT	src/graphlab/engine/iengine.hpp	/^    EXEC_TIMEOUT,$/;"	e	enum:graphlab::exec_status
EXPECT_EQ	src/graphlab/logger/assertions.hpp	115;"	d
EXPECT_FALSE	src/graphlab/logger/assertions.hpp	129;"	d
EXPECT_GE	src/graphlab/logger/assertions.hpp	119;"	d
EXPECT_GT	src/graphlab/logger/assertions.hpp	120;"	d
EXPECT_LE	src/graphlab/logger/assertions.hpp	117;"	d
EXPECT_LT	src/graphlab/logger/assertions.hpp	118;"	d
EXPECT_NE	src/graphlab/logger/assertions.hpp	116;"	d
EXPECT_STREQ	src/graphlab/logger/assertions.hpp	130;"	d
EXPECT_TRUE	src/graphlab/logger/assertions.hpp	128;"	d
EXTERN_BIT	src/graphlab/extern/metis/GKlib/dlmalloc.c	316;"	d	file:
EliminateComponents	src/graphlab/extern/metis/libmetis/rename.h	373;"	d
EliminateComponents	src/graphlab/extern/metis/libmetis/subdomains.c	/^void EliminateComponents(CtrlType *ctrl, GraphType *graph, idxtype nparts, float *tpwgts, float ubfactor)$/;"	f
EliminateSubDomainEdges	src/graphlab/extern/metis/libmetis/rename.h	371;"	d
EliminateSubDomainEdges	src/graphlab/extern/metis/libmetis/subdomains.c	/^void EliminateSubDomainEdges(CtrlType *ctrl, GraphType *graph, idxtype nparts, float *tpwgts)$/;"	f
EliminateVolComponents	src/graphlab/extern/metis/libmetis/kwayvolfm.c	/^void EliminateVolComponents(CtrlType *ctrl, GraphType *graph, idxtype nparts, float *tpwgts, float ubfactor)$/;"	f
EliminateVolSubDomainEdges	src/graphlab/extern/metis/libmetis/kwayvolfm.c	/^void EliminateVolSubDomainEdges(CtrlType *ctrl, GraphType *graph, idxtype nparts, float *tpwgts)$/;"	f
EliminateVolSubDomainEdges	src/graphlab/extern/metis/libmetis/rename.h	129;"	d
EstimateCFraction	src/graphlab/extern/metis/libmetis/estmem.c	/^void EstimateCFraction(idxtype nvtxs, idxtype *xadj, idxtype *adjncy, float *vfraction, float *efraction)$/;"	f
EstimateCFraction	src/graphlab/extern/metis/libmetis/rename.h	58;"	d
ExtractPartitionGraph	src/graphlab/extern/metis/libmetis/kfmetis.c	/^GraphType *ExtractPartitionGraph(GraphType *graph, idxtype *part, idxtype pid, $/;"	f
F0	src/graphlab/distributed/repack_dispatch.hpp	163;"	d
F0	src/graphlab/distributed/repack_dispatch.hpp	9;"	d
F0	src/graphlab/distributed/serialize_dispatch.hpp	11;"	d
F0	src/graphlab/distributed/serialize_dispatch.hpp	244;"	d
F1	src/graphlab/distributed/repack_dispatch.hpp	10;"	d
F1	src/graphlab/distributed/repack_dispatch.hpp	164;"	d
F1	src/graphlab/distributed/serialize_dispatch.hpp	12;"	d
F1	src/graphlab/distributed/serialize_dispatch.hpp	245;"	d
F2	src/graphlab/distributed/repack_dispatch.hpp	11;"	d
F2	src/graphlab/distributed/repack_dispatch.hpp	165;"	d
F2	src/graphlab/distributed/serialize_dispatch.hpp	13;"	d
F2	src/graphlab/distributed/serialize_dispatch.hpp	246;"	d
F3	src/graphlab/distributed/repack_dispatch.hpp	12;"	d
F3	src/graphlab/distributed/repack_dispatch.hpp	166;"	d
F3	src/graphlab/distributed/serialize_dispatch.hpp	14;"	d
F3	src/graphlab/distributed/serialize_dispatch.hpp	247;"	d
F4	src/graphlab/distributed/repack_dispatch.hpp	13;"	d
F4	src/graphlab/distributed/repack_dispatch.hpp	167;"	d
F4	src/graphlab/distributed/serialize_dispatch.hpp	15;"	d
F4	src/graphlab/distributed/serialize_dispatch.hpp	248;"	d
F5	src/graphlab/distributed/repack_dispatch.hpp	14;"	d
F5	src/graphlab/distributed/repack_dispatch.hpp	168;"	d
F5	src/graphlab/distributed/serialize_dispatch.hpp	16;"	d
F5	src/graphlab/distributed/serialize_dispatch.hpp	249;"	d
F6	src/graphlab/distributed/repack_dispatch.hpp	169;"	d
F6	src/graphlab/distributed/serialize_dispatch.hpp	250;"	d
F7	src/graphlab/distributed/repack_dispatch.hpp	170;"	d
F7	src/graphlab/distributed/serialize_dispatch.hpp	251;"	d
FACTOR_BP_HPP	apps/factor_graph_inference/factor_bp.hpp	2;"	d
FACTOR_GIBBS_HPP	apps/factor_graph_inference/factor_gibbs.hpp	2;"	d
FACTOR_GRAPH_HPP	apps/factor_graph_inference/factor_graph.hpp	2;"	d
FEATURE_VERTEX	apps/shooting/shooting.cpp	/^enum vertex_type {DATA_VERTEX, FEATURE_VERTEX};$/;"	e	enum:vertex_type	file:
FENCEPOST_HEAD	src/graphlab/extern/metis/GKlib/dlmalloc.c	817;"	d	file:
FIFO_SCHEDULER_HPP	src/graphlab/schedulers/fifo_scheduler.hpp	5;"	d
FINISH_KEY	apps/gabp/gabp.cpp	/^  FINISH_KEY,$/;"	e	enum:shared_data_keys	file:
FLAG4_BIT	src/graphlab/extern/metis/GKlib/dlmalloc.c	812;"	d	file:
FLAG_BITS	src/graphlab/extern/metis/GKlib/dlmalloc.c	814;"	d	file:
FLOAT_SELECTOR_HPP	src/graphlab/util/generics/float_selector.hpp	2;"	d
FM_2WayEdgeRefine	src/graphlab/extern/metis/libmetis/fm.c	/^void FM_2WayEdgeRefine(CtrlType *ctrl, GraphType *graph, idxtype *tpwgts, idxtype npasses)$/;"	f
FM_2WayEdgeRefine	src/graphlab/extern/metis/libmetis/rename.h	63;"	d
FM_2WayNodeBalance	src/graphlab/extern/metis/libmetis/rename.h	349;"	d
FM_2WayNodeBalance	src/graphlab/extern/metis/libmetis/sfm.c	/^void FM_2WayNodeBalance(CtrlType *ctrl, GraphType *graph, float ubfactor)$/;"	f
FM_2WayNodeRefine	src/graphlab/extern/metis/libmetis/rename.h	346;"	d
FM_2WayNodeRefine	src/graphlab/extern/metis/libmetis/sfm.c	/^void FM_2WayNodeRefine(CtrlType *ctrl, GraphType *graph, float ubfactor, idxtype npasses)$/;"	f
FM_2WayNodeRefine2	src/graphlab/extern/metis/libmetis/sfm.c	/^void FM_2WayNodeRefine2(CtrlType *ctrl, GraphType *graph, float ubfactor, idxtype npasses)$/;"	f
FM_2WayNodeRefineEqWgt	src/graphlab/extern/metis/libmetis/rename.h	347;"	d
FM_2WayNodeRefineEqWgt	src/graphlab/extern/metis/libmetis/sfm.c	/^void FM_2WayNodeRefineEqWgt(CtrlType *ctrl, GraphType *graph, idxtype npasses)$/;"	f
FM_2WayNodeRefine_OneSided	src/graphlab/extern/metis/libmetis/rename.h	348;"	d
FM_2WayNodeRefine_OneSided	src/graphlab/extern/metis/libmetis/sfm.c	/^void FM_2WayNodeRefine_OneSided(CtrlType *ctrl, GraphType *graph, float ubfactor, idxtype npasses)$/;"	f
FOOTERS	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	33;"	d
FOOTERS	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	555;"	d
FORCEINLINE	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	721;"	d
FORCEINLINE	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	723;"	d
FORCEINLINE	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	739;"	d
FORCEINLINE	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	743;"	d
FOUR_SIZE_T_SIZES	src/graphlab/extern/metis/GKlib/dlmalloc.c	198;"	d	file:
FULL_BLOCK_ADDR	src/graphlab/extern/bitmagic/bmdef.h	60;"	d
FULL_BLOCK_ADDR	src/graphlab/extern/bitmagic/bmundef.h	33;"	d
FULL_CONSISTENCY	src/graphlab/scope/iscope.hpp	/^      FULL_CONSISTENCY,        \/\/ write to self and adjacent structures$/;"	e	enum:graphlab::scope_range::scope_range_enum
FUNCTOR_if_numlocks_zero	src/graphlab/distributed/graph_lock_manager.hpp	/^  static bool FUNCTOR_if_numlocks_zero(const WrapperType &vdata) {$/;"	f	class:graphlab::graph_lock_manager
FindBoxContacts	src/graphlab/extern/metis/libmetis/cmetis.c	/^idxtype FindBoxContacts(ContactInfoType *cinfo, double *coords, idxtype *stack, idxtype *cntind, idxtype *marker)$/;"	f
FindComponents	src/graphlab/extern/metis/libmetis/graph.c	/^idxtype FindComponents(CtrlType *ctrl, GraphType *graph, idxtype *cptr, idxtype *cind)$/;"	f
FindComponents	src/graphlab/extern/metis/libmetis/rename.h	84;"	d
FreeGraph	src/graphlab/extern/metis/libmetis/memory.c	/^void FreeGraph(GraphType *graph, int flag) $/;"	f
FreeGraph	src/graphlab/extern/metis/libmetis/rename.h	174;"	d
FreeRData	src/graphlab/extern/metis/libmetis/memory.c	/^void FreeRData(GraphType *graph) $/;"	f
FreeRData	src/graphlab/extern/metis/libmetis/rename.h	173;"	d
FreeWorkSpace	src/graphlab/extern/metis/libmetis/memory.c	/^void FreeWorkSpace(CtrlType *ctrl, GraphType *graph)$/;"	f
FreeWorkSpace	src/graphlab/extern/metis/libmetis/rename.h	166;"	d
GABP_CUR_MEAN_OFFSET	apps/gabp/gabp.cpp	/^                       GABP_CUR_MEAN_OFFSET = 3, \/\/intermediate value to store the mean \\mu_i$/;"	e	enum:constant_offsets	file:
GABP_CUR_PREC_OFFSET	apps/gabp/gabp.cpp	/^                       GABP_CUR_PREC_OFFSET = 4, \/\/current precision value P_i$/;"	e	enum:constant_offsets	file:
GABP_PREV_MEAN_OFFSET	apps/gabp/gabp.cpp	/^		       GABP_PREV_MEAN_OFFSET = 5,\/\/ mean value from previous round (for convergence detection)$/;"	e	enum:constant_offsets	file:
GABP_PREV_PREC_OFFSET	apps/gabp/gabp.cpp	/^                       GABP_PREV_PREC_OFFSET = 6}; \/\/ precision value from previous round (for convergence detection)$/;"	e	enum:constant_offsets	file:
GABP_PRIOR_MEAN_OFFSET	apps/gabp/gabp.cpp	/^enum constant_offsets {GABP_PRIOR_MEAN_OFFSET = 0, \/\/prior mean (b_i \/ A_ii)$/;"	e	enum:constant_offsets	file:
GABP_PRIOR_PREC_OFFSET	apps/gabp/gabp.cpp	/^                       GABP_PRIOR_PREC_OFFSET = 1, \/\/prior precision P_ii = A_ii$/;"	e	enum:constant_offsets	file:
GABP_REAL_OFFSET	apps/gabp/gabp.cpp	/^                       GABP_REAL_OFFSET = 2, \/\/ the real solution (if known) x = inv(A)*b for square matrix or x = pinv(A) for skinny matrix$/;"	e	enum:constant_offsets	file:
GENCASTDESERIALIZE	src/graphlab/serialization/iarchive.cpp	11;"	d	file:
GENCASTSERIALIZE	src/graphlab/serialization/oarchive.cpp	10;"	d	file:
GENDUALMETIS	src/graphlab/extern/metis/libmetis/mesh.c	/^void GENDUALMETIS(idxtype nelmnts, idxtype nvtxs, idxtype etype, idxtype *elmnts, idxtype *elms, idxtype *dxadj, idxtype *dadjncy)$/;"	f
GENDUALMETIS_COUNT	src/graphlab/extern/metis/libmetis/mesh.c	/^idxtype GENDUALMETIS_COUNT(idxtype nelmnts, idxtype nvtxs, idxtype etype, idxtype *elmnts, idxtype *elms)$/;"	f
GENINTDESERIALIZE	src/graphlab/serialization/iarchive.cpp	19;"	d	file:
GENINTSERIALIZE	src/graphlab/serialization/oarchive.cpp	16;"	d	file:
GETIDX	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    size_t GETIDX(size_t funcid, size_t cpuid, size_t vid) {$/;"	f	class:graphlab::distributed_phased_sweep_scheduler
GETIDX	src/graphlab/schedulers/sweep_scheduler.hpp	/^    size_t GETIDX(size_t funcid, size_t cpuid, size_t vid) {$/;"	f	class:graphlab::sweep_scheduler
GKDecodeBase64	src/graphlab/extern/metis/GKlib/b64.c	/^void GKDecodeBase64(int nbytes, unsigned char *inbuffer, unsigned char *outbuffer)$/;"	f
GKEncodeBase64	src/graphlab/extern/metis/GKlib/b64.c	/^void GKEncodeBase64(int nbytes, unsigned char *inbuffer, unsigned char *outbuffer)$/;"	f
GKMSPACE	src/graphlab/extern/metis/GKlib/GKlib.h	13;"	d
GKQSORT	src/graphlab/extern/metis/GKlib/gk_sort.h	120;"	d
GKSETJMP	src/graphlab/extern/metis/GKlib/gk_macros.h	54;"	d
GK_ALLOCMATRIX	src/graphlab/extern/metis/GKlib/gk_memory.h	52;"	d
GK_ALLOCMATRIX_PROTO	src/graphlab/extern/metis/GKlib/gk_memory.h	65;"	d
GK_ARGMAX	src/graphlab/extern/metis/GKlib/gk_blas.h	56;"	d
GK_ARGMAX_N	src/graphlab/extern/metis/GKlib/gk_blas.h	96;"	d
GK_ARGMAX_N_PROTO	src/graphlab/extern/metis/GKlib/gk_blas.h	117;"	d
GK_ARGMAX_PROTO	src/graphlab/extern/metis/GKlib/gk_blas.h	67;"	d
GK_ARGMIN	src/graphlab/extern/metis/GKlib/gk_blas.h	75;"	d
GK_ARGMIN_PROTO	src/graphlab/extern/metis/GKlib/gk_blas.h	86;"	d
GK_AXPY	src/graphlab/extern/metis/GKlib/gk_blas.h	209;"	d
GK_AXPY_PROTO	src/graphlab/extern/metis/GKlib/gk_blas.h	221;"	d
GK_DOT	src/graphlab/extern/metis/GKlib/gk_blas.h	189;"	d
GK_DOT_PROTO	src/graphlab/extern/metis/GKlib/gk_blas.h	201;"	d
GK_FREEMATRIX	src/graphlab/extern/metis/GKlib/gk_memory.h	72;"	d
GK_FREEMATRIX_PROTO	src/graphlab/extern/metis/GKlib/gk_memory.h	88;"	d
GK_INCSET	src/graphlab/extern/metis/GKlib/gk_blas.h	37;"	d
GK_INCSET_PROTO	src/graphlab/extern/metis/GKlib/gk_blas.h	48;"	d
GK_KEYVALUE_T	src/graphlab/extern/metis/GKlib/gk_struct.h	17;"	d
GK_NORM2	src/graphlab/extern/metis/GKlib/gk_blas.h	168;"	d
GK_NORM2_PROTO	src/graphlab/extern/metis/GKlib/gk_blas.h	180;"	d
GK_SCALE	src/graphlab/extern/metis/GKlib/gk_blas.h	148;"	d
GK_SCALE_PROTO	src/graphlab/extern/metis/GKlib/gk_blas.h	159;"	d
GK_SET	src/graphlab/extern/metis/GKlib/gk_blas.h	17;"	d
GK_SETMATRIX	src/graphlab/extern/metis/GKlib/gk_memory.h	96;"	d
GK_SETMATRIX_PROTO	src/graphlab/extern/metis/GKlib/gk_memory.h	107;"	d
GK_SET_PROTO	src/graphlab/extern/metis/GKlib/gk_blas.h	28;"	d
GK_SUM	src/graphlab/extern/metis/GKlib/gk_blas.h	126;"	d
GK_SUM_PROTO	src/graphlab/extern/metis/GKlib/gk_blas.h	138;"	d
GK_XMALLOC	src/graphlab/extern/metis/GKlib/gk_memory.h	17;"	d
GK_XMALLOC	src/graphlab/extern/metis/GKlib/memory.c	/^GK_XMALLOC(gk_idxmalloc, gk_idx_t)$/;"	f
GK_XMALLOC	src/graphlab/extern/metis/libmetis/util.c	/^GK_XMALLOC(idxmalloc, idxtype)$/;"	f
GK_XMALLOC_PROTO	src/graphlab/extern/metis/GKlib/gk_memory.h	21;"	d
GK_XREALLOC	src/graphlab/extern/metis/GKlib/gk_memory.h	28;"	d
GK_XREALLOC_PROTO	src/graphlab/extern/metis/GKlib/gk_memory.h	32;"	d
GK_XSMALLOC	src/graphlab/extern/metis/GKlib/gk_memory.h	39;"	d
GK_XSMALLOC_PROTO	src/graphlab/extern/metis/GKlib/gk_memory.h	43;"	d
GLOBALLY_INITIALIZE	src/graphlab/extern/metis/GKlib/dlmalloc.c	1288;"	d	file:
GRAPHDATA_HPP	src/graphlab/util/generics/blob.hpp	2;"	d
GRAPHLAB_ANY_INCLUDED	src/graphlab/util/generics/any.hpp	6;"	d
GRAPHLAB_ASYNCHRONOUS_ENGINE_HPP	src/graphlab/engine/asynchronous_engine.hpp	2;"	d
GRAPHLAB_ATOMIC_HPP	src/graphlab/parallel/atomic.hpp	2;"	d
GRAPHLAB_BASICGRAPH_HPP	src/graphlab/graph/graph.hpp	10;"	d
GRAPHLAB_BINARY_FACTOR_HPP	src/graphlab/factors/binary_factor.hpp	2;"	d
GRAPHLAB_BINARY_PARSER_HPP	src/graphlab/util/binary_parser.hpp	2;"	d
GRAPHLAB_CLUSTERED_PRIORITY_SCHEDULER_HPP	src/graphlab/schedulers/clustered_priority_scheduler.hpp	5;"	d
GRAPHLAB_COLORED_SCHEDULER_HPP	src/graphlab/schedulers/colored_scheduler.hpp	2;"	d
GRAPHLAB_COMMAND_LINE_OPTIONS	src/graphlab/util/command_line_options.hpp	2;"	d
GRAPHLAB_CONSOLE_MONITOR_HPP	src/graphlab/monitoring/console_monitor.hpp	3;"	d
GRAPHLAB_CORE_HPP	src/graphlab/core.hpp	2;"	d
GRAPHLAB_DC_BUFFER_ID	src/graphlab/distributed/dc_internal.cpp	/^  pthread_key_t GRAPHLAB_DC_BUFFER_ID;$/;"	m	struct:graphlab::dc_thread_keys	file:
GRAPHLAB_DENSE_BITSET_HPP	src/graphlab/util/dense_bitset.hpp	2;"	d
GRAPHLAB_DISRT_PHASED_SCHEDULER_HPP	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	7;"	d
GRAPHLAB_DISTRIBUTED_CONTROL_HPP	src/graphlab/distributed/distributed_control.hpp	2;"	d
GRAPHLAB_DISTRIBUTED_FULLSWEEP_SDM_HPP	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	2;"	d
GRAPHLAB_DISTRIBUTED_SHARED_DATA_HPP	src/graphlab/distributed/distributed_shared_data.hpp	2;"	d
GRAPHLAB_ENGINE_FACTORY_HPP	src/graphlab/engine/engine_factory.hpp	3;"	d
GRAPHLAB_FACTORS_HPP	src/graphlab/factors/table_factor.hpp	2;"	d
GRAPHLAB_FAST_MULTINOMIAL_HPP	src/graphlab/util/fast_multinomial.hpp	2;"	d
GRAPHLAB_GENERAL_SCOPE_FACTORY_HPP	src/graphlab/scope/general_scope_factory.hpp	2;"	d
GRAPHLAB_GENERAL_SCOPE_HPP	src/graphlab/scope/general_scope.hpp	2;"	d
GRAPHLAB_HASH_FUNCTIONS_HPP	src/graphlab/util/hash_functions.hpp	2;"	d
GRAPHLAB_IARCHIVE_HPP	src/graphlab/serialization/iarchive.hpp	2;"	d
GRAPHLAB_ICALLBACK_HPP	src/graphlab/schedulers/icallback.hpp	2;"	d
GRAPHLAB_IMONITOR_HPP	src/graphlab/monitoring/imonitor.hpp	9;"	d
GRAPHLAB_IMULTIPLEXLISTENER_HPP	src/graphlab/monitoring/monitor_multiplexer.hpp	2;"	d
GRAPHLAB_ISCHEDULER_HPP	src/graphlab/schedulers/ischeduler.hpp	2;"	d
GRAPHLAB_ISCOPE_FACTORY_HPP	src/graphlab/scope/iscope_factory.hpp	6;"	d
GRAPHLAB_ISHARED_DATA_HPP	src/graphlab/shared_data/ishared_data.hpp	11;"	d
GRAPHLAB_ISHARED_DATA_MANAGER	src/graphlab/shared_data/ishared_data_manager.hpp	6;"	d
GRAPHLAB_JUDY_UTIL_HPP	src/graphlab/util/judy_util.hpp	2;"	d
GRAPHLAB_LOG_LOG_HPP	src/graphlab/logger/logger.hpp	20;"	d
GRAPHLAB_MACROS	src/graphlab/macros_def.hpp	16;"	d
GRAPHLAB_MACROS	src/graphlab/macros_undef.hpp	9;"	d
GRAPHLAB_MACROS_INC_LEVEL	src/graphlab/macros_def.hpp	7;"	d
GRAPHLAB_MACROS_INC_LEVEL	src/graphlab/macros_undef.hpp	5;"	d
GRAPHLAB_MASTER_INCLUDES	src/graphlab.hpp	31;"	d
GRAPHLAB_MULTIQUEUE_FIFO_SCHEDULER_HPP	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	8;"	d
GRAPHLAB_MULTIQUEUE_PRIORITY_SCHEDULER_HPP	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	6;"	d
GRAPHLAB_MULTIQUEUE_SCHEDULER_HPP	src/graphlab/schedulers/multiqueue_scheduler.hpp	6;"	d
GRAPHLAB_MUTABLE_PRIORITY_QUEUE_HPP	src/graphlab/util/mutable_queue.hpp	19;"	d
GRAPHLAB_OARCHIVE_HPP	src/graphlab/serialization/oarchive.hpp	2;"	d
GRAPHLAB_OPTIMAL_TERMINATION_HPP	src/graphlab/util/optimal_termination.hpp	4;"	d
GRAPHLAB_PAR_TRANSFORM_HPP	src/graphlab/util/par_transform.hpp	2;"	d
GRAPHLAB_PRIORITIZED_MULTIQUEUE_HPP	src/graphlab/util/prioritized_multiqueue.hpp	2;"	d
GRAPHLAB_PRIORITY_SCHEDULER_HPP	src/graphlab/schedulers/priority_scheduler.hpp	5;"	d
GRAPHLAB_PTHREAD_TOOLS_HPP	src/graphlab/parallel/pthread_tools.hpp	2;"	d
GRAPHLAB_PUSHY_DISTRIBUTED_ENGINE_HPP	src/graphlab/distributed/pushy_distributed_engine.hpp	6;"	d
GRAPHLAB_RANDOM_HPP	src/graphlab/util/random.hpp	2;"	d
GRAPHLAB_RESTRICTED_VERTEX_SET_HPP	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	2;"	d
GRAPHLAB_SAMPLING_SCHEDULER_HPP	src/graphlab/schedulers/sampling_scheduler.hpp	7;"	d
GRAPHLAB_SAMPLING_TREE_HPP	src/graphlab/util/sampling_tree.hpp	2;"	d
GRAPHLAB_SCOPE_HPP	src/graphlab/scope/iscope.hpp	8;"	d
GRAPHLAB_SERIALIZE_HPP	src/graphlab/serialization/serialize.hpp	2;"	d
GRAPHLAB_SERIALIZE_ITERATOR_HPP	src/graphlab/serialization/iterator.hpp	2;"	d
GRAPHLAB_SERIALIZE_JUDYMAP_KDCELL_HPP	src/graphlab/serialization/judy_map_kdcell.hpp	2;"	d
GRAPHLAB_SERIALIZE_LIST_HPP	src/graphlab/serialization/list.hpp	2;"	d
GRAPHLAB_SERIALIZE_MAP_HPP	src/graphlab/serialization/map.hpp	2;"	d
GRAPHLAB_SERIALIZE_SET_HPP	src/graphlab/serialization/set.hpp	2;"	d
GRAPHLAB_SERIALIZE_VECTOR_HPP	src/graphlab/serialization/vector.hpp	2;"	d
GRAPHLAB_SET_SCHEDULER_HPP	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	2;"	d
GRAPHLAB_SHARED_DATA_OPS	src/graphlab/shared_data/shared_data_ops.hpp	2;"	d
GRAPHLAB_SHARED_TERMINATION_HPP	src/graphlab/util/shared_termination.hpp	2;"	d
GRAPHLAB_SIM_THREAD_ENGINE_HPP	src/graphlab/engine/sim_thread_engine.hpp	3;"	d
GRAPHLAB_SPLASH_SCHEDULER_HPP	src/graphlab/schedulers/splash_scheduler.hpp	10;"	d
GRAPHLAB_STL_UTIL_HPP	src/graphlab/util/stl_util.hpp	19;"	d
GRAPHLAB_SWEEP_SCHEDULER_HPP	src/graphlab/schedulers/sweep_scheduler.hpp	8;"	d
GRAPHLAB_SYNCHRONIZED_CIRCULAR_QUEUE_HPP	src/graphlab/util/synchronized_circular_queue.hpp	2;"	d
GRAPHLAB_SYNCHRONIZED_MULTIQUEUE_HPP	src/graphlab/util/synchronized_multiqueue.hpp	2;"	d
GRAPHLAB_SYNCHRONIZED_QUEUE_HPP	src/graphlab/util/synchronized_queue.hpp	2;"	d
GRAPHLAB_SYNCHRONOUS_ENGINE_HPP	src/graphlab/engine/synchronous_engine.hpp	3;"	d
GRAPHLAB_SYNCHRONOUS_SCOPE_HPP	src/graphlab/scope/synchronous_scope.hpp	2;"	d
GRAPHLAB_SYSTEM_USAGE_HPP	src/graphlab/util/system_usage.hpp	2;"	d
GRAPHLAB_TASK_COUNT_TERMINATION_HPP	src/graphlab/util/task_count_termination.hpp	2;"	d
GRAPHLAB_THREADED_ENGINE_HPP	src/graphlab/engine/threaded_engine.hpp	3;"	d
GRAPHLAB_THREAD_SHARED_DATA_HPP	src/graphlab/shared_data/thread_shared_data.hpp	2;"	d
GRAPHLAB_TIMER_HPP	src/graphlab/util/timer.hpp	2;"	d
GRAPHLAB_TSD_ID	src/graphlab/parallel/pthread_tools.cpp	/^    pthread_key_t GRAPHLAB_TSD_ID;$/;"	m	struct:graphlab::thread_keys	file:
GRAPHLAB_UNARY_FACTOR_HPP	src/graphlab/factors/unary_factor.hpp	2;"	d
GRAPHLAB_UNSERIALIZABLE	src/graphlab/serialization/unsupported_serialize.hpp	20;"	d
GRAPHLAB_UNSUPPORTED_SERIALIZE_HPP	src/graphlab/serialization/unsupported_serialize.hpp	2;"	d
GRAPHLAB_UPDATE_TASK_HPP	src/graphlab/tasks/update_task.hpp	2;"	d
GRAPHLAB_VERSION	src/graphlab/version.hpp	4;"	d
GRAPHLAB_VERSION_HPP	src/graphlab/version.hpp	2;"	d
GRAPHLAB_VERSION_MAJOR	src/graphlab/version.hpp	6;"	d
GRAPHLAB_VERSION_MINOR	src/graphlab/version.hpp	7;"	d
GRAPHLAB_VERSION_REVISION	src/graphlab/version.hpp	8;"	d
GREEN	src/graphlab/logger/logger.cpp	60;"	d	file:
General2WayBalance	src/graphlab/extern/metis/libmetis/balance.c	/^void General2WayBalance(CtrlType *ctrl, GraphType *graph, idxtype *tpwgts)$/;"	f
General2WayBalance	src/graphlab/extern/metis/libmetis/rename.h	23;"	d
GraphType	src/graphlab/extern/metis/libmetis/struct.h	/^typedef struct graphdef GraphType;$/;"	t	typeref:struct:graphdef
Greedy_KWayEdgeBalance	src/graphlab/extern/metis/libmetis/kwayfm.c	/^void Greedy_KWayEdgeBalance(CtrlType *ctrl, GraphType *graph, idxtype nparts, float *tpwgts, float ubfactor, idxtype npasses)$/;"	f
Greedy_KWayEdgeBalance	src/graphlab/extern/metis/libmetis/rename.h	106;"	d
Greedy_KWayEdgeBalanceMConn	src/graphlab/extern/metis/libmetis/rename.h	368;"	d
Greedy_KWayEdgeBalanceMConn	src/graphlab/extern/metis/libmetis/subdomains.c	/^void Greedy_KWayEdgeBalanceMConn(CtrlType *ctrl, GraphType *graph, idxtype nparts, float *tpwgts, float ubfactor, idxtype npasses)$/;"	f
Greedy_KWayEdgeRefine	src/graphlab/extern/metis/libmetis/kwayfm.c	/^void Greedy_KWayEdgeRefine(CtrlType *ctrl, GraphType *graph, idxtype nparts, float *tpwgts, float ubfactor, idxtype npasses)$/;"	f
Greedy_KWayEdgeRefine	src/graphlab/extern/metis/libmetis/rename.h	105;"	d
Greedy_KWayVolBalance	src/graphlab/extern/metis/libmetis/kwayvolfm.c	/^void Greedy_KWayVolBalance(CtrlType *ctrl, GraphType *graph, idxtype nparts, float *tpwgts, $/;"	f
Greedy_KWayVolBalance	src/graphlab/extern/metis/libmetis/rename.h	122;"	d
Greedy_KWayVolBalanceMConn	src/graphlab/extern/metis/libmetis/kwayvolfm.c	/^void Greedy_KWayVolBalanceMConn(CtrlType *ctrl, GraphType *graph, idxtype nparts, float *tpwgts, $/;"	f
Greedy_KWayVolBalanceMConn	src/graphlab/extern/metis/libmetis/rename.h	123;"	d
GrowBisection	src/graphlab/extern/metis/libmetis/initpart.c	/^void GrowBisection(CtrlType *ctrl, GraphType *graph, idxtype *tpwgts, float ubfactor)$/;"	f
GrowBisection	src/graphlab/extern/metis/libmetis/rename.h	90;"	d
GrowBisectionNode	src/graphlab/extern/metis/libmetis/initpart.c	/^void GrowBisectionNode(CtrlType *ctrl, GraphType *graph, float ubfactor)$/;"	f
GrowBisectionNode	src/graphlab/extern/metis/libmetis/rename.h	91;"	d
HALF_MAX_SIZE_T	src/graphlab/extern/metis/GKlib/dlmalloc.c	200;"	d	file:
HASHFCT	src/graphlab/extern/metis/libmetis/macros.h	25;"	d
HAVE_MMAP	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	509;"	d
HAVE_MMAP	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	530;"	d
HAVE_MMAP	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	580;"	d
HAVE_MORECORE	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	510;"	d
HAVE_MORECORE	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	529;"	d
HAVE_MORECORE	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	597;"	d
HAVE_MORECORE	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	599;"	d
HAVE_MREMAP	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	587;"	d
HAVE_MREMAP	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	589;"	d
HAVE_THREADLOCALSTORAGE	src/graphlab/extern/metis/metis.h	48;"	d
HC	src/graphlab/extern/metis/libmetis/mincover.c	23;"	d	file:
HEXDUALMETIS	src/graphlab/extern/metis/libmetis/rename.h	180;"	d
HEXNODALMETIS	src/graphlab/extern/metis/libmetis/mesh.c	/^void HEXNODALMETIS(idxtype nelmnts, idxtype nvtxs, idxtype *elmnts, idxtype *dxadj, idxtype *dadjncy)$/;"	f
HEXNODALMETIS	src/graphlab/extern/metis/libmetis/rename.h	183;"	d
HIDDEN	src/graphlab/logger/logger.cpp	56;"	d	file:
HORIZONTAL_IMBALANCE	src/graphlab/extern/metis/libmetis/defs.h	117;"	d
HR	src/graphlab/extern/metis/libmetis/mincover.c	26;"	d	file:
HTABLE_DELETED	src/graphlab/extern/metis/GKlib/gk_defs.h	17;"	d
HTABLE_EMPTY	src/graphlab/extern/metis/GKlib/gk_defs.h	16;"	d
HTABLE_EMPTY	src/graphlab/extern/metis/libmetis/defs.h	99;"	d
HTABLE_FIRST	src/graphlab/extern/metis/GKlib/gk_defs.h	18;"	d
HTABLE_NEXT	src/graphlab/extern/metis/GKlib/gk_defs.h	19;"	d
HTLENGTH	src/graphlab/extern/metis/libmetis/defs.h	26;"	d
HTable_Create	src/graphlab/extern/metis/GKlib/htable.c	/^gk_HTable_t *HTable_Create(int nelements)$/;"	f
HTable_Delete	src/graphlab/extern/metis/GKlib/htable.c	/^void HTable_Delete(gk_HTable_t *htable, int key)$/;"	f
HTable_Destroy	src/graphlab/extern/metis/GKlib/htable.c	/^void HTable_Destroy(gk_HTable_t *htable)$/;"	f
HTable_GetNext	src/graphlab/extern/metis/GKlib/htable.c	/^int HTable_GetNext(gk_HTable_t *htable, int key, int *r_val, int type)$/;"	f
HTable_HFunction	src/graphlab/extern/metis/GKlib/htable.c	/^int HTable_HFunction(int nelements, int key)$/;"	f
HTable_Insert	src/graphlab/extern/metis/GKlib/htable.c	/^void HTable_Insert(gk_HTable_t *htable, int key, int val)$/;"	f
HTable_Reset	src/graphlab/extern/metis/GKlib/htable.c	/^void HTable_Reset(gk_HTable_t *htable)$/;"	f
HTable_Resize	src/graphlab/extern/metis/GKlib/htable.c	/^void HTable_Resize(gk_HTable_t *htable, int nelements)$/;"	f
HTable_Search	src/graphlab/extern/metis/GKlib/htable.c	/^int HTable_Search(gk_HTable_t *htable, int key)$/;"	f
HTable_SearchAndDelete	src/graphlab/extern/metis/GKlib/htable.c	/^int HTable_SearchAndDelete(gk_HTable_t *htable, int key)$/;"	f
IDXTYPEWIDTH	src/graphlab/extern/metis/metis.h	35;"	d
ID_VOID_MAIN	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
ID_VOID_MAIN	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
ID_VOID_MAIN	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
ID_VOID_MAIN	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
IENGINE_HPP	src/graphlab/engine/iengine.hpp	10;"	d
IFSET	src/graphlab/extern/metis/GKlib/gk_macros.h	48;"	d
IMAGE_HPP	apps/image_denoise/image.hpp	2;"	d
INCOL	src/graphlab/extern/metis/libmetis/mincover.c	19;"	d	file:
INC_DEC	src/graphlab/extern/metis/GKlib/gk_macros.h	20;"	d
INITIAL_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	413;"	d	file:
INITIAL_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	473;"	d	file:
INITIAL_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	536;"	d	file:
INITIAL_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	551;"	d	file:
INITIAL_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	589;"	d	file:
INROW	src/graphlab/extern/metis/libmetis/mincover.c	20;"	d	file:
INSECURE	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	577;"	d
INSERT_EVENT	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	/^  const size_t INSERT_EVENT = 1;$/;"	m	namespace:graphlab
INTERNAL_TO_VID	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    size_t INTERNAL_TO_VID(size_t vid) { $/;"	f	class:graphlab::distributed_phased_sweep_scheduler
INTERNAL_TO_VID	src/graphlab/schedulers/sweep_scheduler.hpp	/^    size_t INTERNAL_TO_VID(size_t vid) { $/;"	f	class:graphlab::sweep_scheduler
INUSE_BITS	src/graphlab/extern/metis/GKlib/dlmalloc.c	813;"	d	file:
IS_EMPTY_BLOCK	src/graphlab/extern/bitmagic/bmdef.h	63;"	d
IS_EMPTY_BLOCK	src/graphlab/extern/bitmagic/bmundef.h	36;"	d
IS_FULL_BLOCK	src/graphlab/extern/bitmagic/bmdef.h	62;"	d
IS_FULL_BLOCK	src/graphlab/extern/bitmagic/bmundef.h	35;"	d
IS_LOCKED	src/graphlab/extern/metis/GKlib/dlmalloc.c	417;"	d	file:
IS_LOCKED	src/graphlab/extern/metis/GKlib/dlmalloc.c	477;"	d	file:
IS_LOCKED	src/graphlab/extern/metis/GKlib/dlmalloc.c	540;"	d	file:
IS_LOCKED	src/graphlab/extern/metis/GKlib/dlmalloc.c	555;"	d	file:
IS_MMAPPED_BIT	src/graphlab/extern/metis/GKlib/dlmalloc.c	227;"	d	file:
IS_MMAPPED_BIT	src/graphlab/extern/metis/GKlib/dlmalloc.c	234;"	d	file:
IS_VALID_ADDR	src/graphlab/extern/bitmagic/bmdef.h	61;"	d
IS_VALID_ADDR	src/graphlab/extern/bitmagic/bmundef.h	34;"	d
ITERATION_COUNT	apps/svm/svm.cpp	/^const size_t ITERATION_COUNT = 4; \/\/ double. Number of times 'b' has been updated$/;"	v
ITERATION_KEY	apps/gabp/gabp.cpp	/^  ITERATION_KEY,$/;"	e	enum:shared_data_keys	file:
ITYPE_GGPKL	src/graphlab/extern/metis/metis.h	255;"	d
ITYPE_GGPKLNODE	src/graphlab/extern/metis/metis.h	256;"	d
ITYPE_McHPMETIS	src/graphlab/extern/metis/metis.h	276;"	d
ITYPE_McPMETIS	src/graphlab/extern/metis/metis.h	275;"	d
ITYPE_PMETIS	src/graphlab/extern/metis/metis.h	263;"	d
ITYPE_RANDOM	src/graphlab/extern/metis/metis.h	257;"	d
IType	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype IType;			\/* The type of initial partitioning *\/$/;"	m	struct:controldef
IVERTEX_SET_HPP	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	2;"	d
InduceDecissionTree	src/graphlab/extern/metis/libmetis/cmetis.c	/^idxtype InduceDecissionTree(idxtype nvtxs, DKeyValueType **xyzcand, idxtype *sflag, $/;"	f
InduceRCBTree	src/graphlab/extern/metis/libmetis/cmetis.c	/^idxtype InduceRCBTree(idxtype nvtxs, DKeyValueType **xyzcand, idxtype firstPID, idxtype nparts, $/;"	f
Init2WayPartition	src/graphlab/extern/metis/libmetis/initpart.c	/^void Init2WayPartition(CtrlType *ctrl, GraphType *graph, idxtype *tpwgts, float ubfactor) $/;"	f
Init2WayPartition	src/graphlab/extern/metis/libmetis/rename.h	88;"	d
InitGraph	src/graphlab/extern/metis/libmetis/memory.c	/^void InitGraph(GraphType *graph) $/;"	f
InitGraph	src/graphlab/extern/metis/libmetis/rename.h	172;"	d
InitPartTmr	src/graphlab/extern/metis/libmetis/struct.h	/^  double TotalTmr, InitPartTmr, MatchTmr, ContractTmr, CoarsenTmr, UncoarsenTmr, $/;"	m	struct:controldef
InitRandom	src/graphlab/extern/metis/libmetis/rename.h	393;"	d
InitRandom	src/graphlab/extern/metis/libmetis/util.c	/^void InitRandom(idxtype seed)$/;"	f
InitSeparator	src/graphlab/extern/metis/libmetis/initpart.c	/^void InitSeparator(CtrlType *ctrl, GraphType *graph, float ubfactor) $/;"	f
InitSeparator	src/graphlab/extern/metis/libmetis/rename.h	89;"	d
InitTimers	src/graphlab/extern/metis/libmetis/rename.h	378;"	d
InitTimers	src/graphlab/extern/metis/libmetis/timing.c	/^void InitTimers(CtrlType *ctrl)$/;"	f
IsBalanced	src/graphlab/extern/metis/libmetis/kwayrefine.c	/^idxtype IsBalanced(idxtype *pwgts, idxtype nparts, float *tpwgts, float ubfactor)$/;"	f
IsBalanced	src/graphlab/extern/metis/libmetis/rename.h	114;"	d
IsBetter2wayBalance	src/graphlab/extern/metis/libmetis/mfm2.c	/^idxtype IsBetter2wayBalance(idxtype ncon, float *newbal, float *oldbal, float *ubvec)$/;"	f
IsBetter2wayBalance	src/graphlab/extern/metis/libmetis/rename.h	197;"	d
IsConnected	src/graphlab/extern/metis/libmetis/graph.c	/^idxtype IsConnected(CtrlType *ctrl, GraphType *graph, idxtype report)$/;"	f
IsConnected	src/graphlab/extern/metis/libmetis/rename.h	82;"	d
IsConnected2	src/graphlab/extern/metis/libmetis/graph.c	/^idxtype IsConnected2(GraphType *graph, idxtype report)$/;"	f
IsConnected2	src/graphlab/extern/metis/libmetis/rename.h	83;"	d
IsConnectedSubdomain	src/graphlab/extern/metis/libmetis/graph.c	/^idxtype IsConnectedSubdomain(CtrlType *ctrl, GraphType *graph, idxtype pid, idxtype report)$/;"	f
IsConnectedSubdomain	src/graphlab/extern/metis/libmetis/rename.h	81;"	d
IsHBalanceBetterFT	src/graphlab/extern/metis/libmetis/mkwayfmh.c	/^idxtype IsHBalanceBetterFT(idxtype ncon, idxtype nparts, float *pfrom, float *pto, float *vwgt, float *ubvec)$/;"	f
IsHBalanceBetterFT	src/graphlab/extern/metis/libmetis/rename.h	235;"	d
IsHBalanceBetterTT	src/graphlab/extern/metis/libmetis/mkwayfmh.c	/^idxtype IsHBalanceBetterTT(idxtype ncon, idxtype nparts, float *pt1, float *pt2, float *vwgt, float *ubvec)$/;"	f
IsHBalanceBetterTT	src/graphlab/extern/metis/libmetis/rename.h	236;"	d
IsSeparable	src/graphlab/extern/metis/libmetis/debug.c	/^idxtype IsSeparable(GraphType *graph)$/;"	f
IsSeparable	src/graphlab/extern/metis/libmetis/rename.h	54;"	d
KMETIS_CTYPE	src/graphlab/extern/metis/libmetis/defs.h	49;"	d
KMETIS_DBGLVL	src/graphlab/extern/metis/libmetis/defs.h	52;"	d
KMETIS_ITYPE	src/graphlab/extern/metis/libmetis/defs.h	50;"	d
KMETIS_RTYPE	src/graphlab/extern/metis/libmetis/defs.h	51;"	d
KVMETIS_CTYPE	src/graphlab/extern/metis/libmetis/defs.h	82;"	d
KVMETIS_DBGLVL	src/graphlab/extern/metis/libmetis/defs.h	85;"	d
KVMETIS_ITYPE	src/graphlab/extern/metis/libmetis/defs.h	83;"	d
KVMETIS_RTYPE	src/graphlab/extern/metis/libmetis/defs.h	84;"	d
KWayVolUpdate	src/graphlab/extern/metis/libmetis/kwayvolfm.c	/^void KWayVolUpdate(CtrlType *ctrl, GraphType *graph, idxtype v, idxtype from, idxtype to,$/;"	f
KWayVolUpdate	src/graphlab/extern/metis/libmetis/rename.h	124;"	d
KeyValueType	src/graphlab/extern/metis/libmetis/struct.h	/^struct KeyValueType {$/;"	s
KeyValueType	src/graphlab/extern/metis/libmetis/struct.h	/^typedef struct KeyValueType KeyValueType;$/;"	t	typeref:struct:KeyValueType
LACKS_ERRNO_H	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	517;"	d
LACKS_STRINGS_H	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	515;"	d
LACKS_STRING_H	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	514;"	d
LACKS_SYS_MMAN_H	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	513;"	d
LACKS_SYS_PARAM_H	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	512;"	d
LACKS_SYS_TYPES_H	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	516;"	d
LACKS_UNISTD_H	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	511;"	d
LAMBDA_KEY	apps/shooting/shooting.cpp	/^enum sdt_const_keys {LAMBDA_KEY,$/;"	e	enum:sdt_const_keys	file:
LARGENIPARTS	src/graphlab/extern/metis/libmetis/defs.h	104;"	d
LINENODALMETIS	src/graphlab/extern/metis/libmetis/mesh.c	/^void LINENODALMETIS(idxtype nelmnts, idxtype nvtxs, idxtype *elmnts, idxtype *dxadj, idxtype *dadjncy$/;"	f
LOG_EPSILON	src/graphlab/factors/table_factor.hpp	/^  static const double LOG_EPSILON = std::log(EPSILON);$/;"	m	namespace:graphlab
LOG_ERROR	src/graphlab/logger/logger.hpp	37;"	d
LOG_FATAL	src/graphlab/logger/logger.hpp	36;"	d
LOG_INFO	src/graphlab/logger/logger.hpp	39;"	d
LOG_MAX_DOUBLE	src/graphlab/factors/table_factor.hpp	/^  static const double LOG_MAX_DOUBLE = std::log(MAX_DOUBLE);$/;"	m	namespace:graphlab
LOG_NONE	src/graphlab/logger/logger.hpp	47;"	d
LOG_WARNING	src/graphlab/logger/logger.hpp	38;"	d
LS_MAX_UPDATEFUNCTIONS	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    static const size_t LS_MAX_UPDATEFUNCTIONS = 3;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
LS_MAX_UPDATEFUNCTIONS	src/graphlab/schedulers/sweep_scheduler.hpp	/^    static const size_t LS_MAX_UPDATEFUNCTIONS = 3;$/;"	m	class:graphlab::sweep_scheduler
LTERM	src/graphlab/extern/metis/GKlib/gk_defs.h	14;"	d
LTERM	src/graphlab/extern/metis/libmetis/defs.h	18;"	d
ListNodeType	src/graphlab/extern/metis/libmetis/struct.h	/^struct ListNodeType {$/;"	s
ListNodeType	src/graphlab/extern/metis/libmetis/struct.h	/^typedef struct ListNodeType ListNodeType;$/;"	t	typeref:struct:ListNodeType
LittleEndian	src/graphlab/extern/bitmagic/bmfunc.h	/^	LittleEndian = 1$/;"	e	enum:bm::ByteOrder
LoadBVector	src/graphlab/extern/bitmagic/bmdbg.h	/^void LoadBVector(const char* fname, TBV& bvector, unsigned* file_size=0)$/;"	f
MAGENTA	src/graphlab/logger/logger.cpp	63;"	d	file:
MAKECSR	src/graphlab/extern/metis/GKlib/gk_macros.h	75;"	d
MALLINFO_FIELD_TYPE	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	650;"	d
MALLOC_ALIGNMENT	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	552;"	d
MALLOC_CHECK	src/graphlab/extern/metis/GKlib/gk_macros.h	61;"	d
MALLOC_CHECK	src/graphlab/extern/metis/GKlib/gk_macros.h	68;"	d
MALLOC_FAILURE_ACTION	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	518;"	d
MALLOC_FAILURE_ACTION	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	593;"	d
MAP_ANONYMOUS	src/graphlab/extern/metis/GKlib/dlmalloc.c	241;"	d	file:
MAXIDX	src/graphlab/extern/metis/libmetis/struct.h	15;"	d
MAXLINE	src/graphlab/extern/metis/libmetis/defs.h	16;"	d
MAXLINELEN	src/graphlab/extern/metis/GKlib/gk_defs.h	29;"	d
MAXNCON	src/graphlab/extern/metis/libmetis/defs.h	20;"	d
MAXNOBJ	src/graphlab/extern/metis/libmetis/defs.h	21;"	d
MAX_DIM	apps/factor_graph_inference/factor_graph.hpp	/^  static const size_t MAX_DIM = 10;$/;"	m	class:factor_graph
MAX_DOUBLE	src/graphlab/factors/table_factor.hpp	/^  static const double MAX_DOUBLE =  std::numeric_limits<double>::max();$/;"	m	namespace:graphlab
MAX_ITERATIONS	src/graphlab/schedulers/ischeduler.hpp	/^      MAX_ITERATIONS,$/;"	e	enum:graphlab::scheduler_options::options_enum
MAX_ITER_KEY	apps/gabp/gabp.cpp	/^  MAX_ITER_KEY$/;"	e	enum:shared_data_keys	file:
MAX_RELEASE_CHECK_RATE	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	635;"	d
MAX_RELEASE_CHECK_RATE	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	637;"	d
MAX_REQUEST	src/graphlab/extern/metis/GKlib/dlmalloc.c	786;"	d	file:
MAX_SIZE_T	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	539;"	d
MAX_SMALL_REQUEST	src/graphlab/extern/metis/GKlib/dlmalloc.c	1136;"	d	file:
MAX_SMALL_SIZE	src/graphlab/extern/metis/GKlib/dlmalloc.c	1135;"	d	file:
MAX_TOTAL_REFERENCES	src/graphlab/distributed/graph_lock_manager.hpp	19;"	d
MAX_UPDATEFUNCTIONS	src/graphlab/schedulers/support/binary_vertex_task_set.hpp	/^    const static size_t MAX_UPDATEFUNCTIONS;$/;"	m	class:graphlab::binary_vertex_task_set
MAX_UPDATEFUNCTIONS	src/graphlab/schedulers/support/binary_vertex_task_set.hpp	/^  const size_t binary_vertex_task_set<Graph>::MAX_UPDATEFUNCTIONS =$/;"	m	class:graphlab::binary_vertex_task_set
MCCoarsen2Way	src/graphlab/extern/metis/libmetis/mcoarsen.c	/^GraphType *MCCoarsen2Way(CtrlType *ctrl, GraphType *graph)$/;"	f
MCCoarsen2Way	src/graphlab/extern/metis/libmetis/rename.h	161;"	d
MCGreedy_KWayEdgeBalanceHorizontal	src/graphlab/extern/metis/libmetis/mkwayfmh.c	/^void MCGreedy_KWayEdgeBalanceHorizontal(CtrlType *ctrl, GraphType *graph, idxtype nparts, $/;"	f
MCGreedy_KWayEdgeBalanceHorizontal	src/graphlab/extern/metis/libmetis/rename.h	230;"	d
MCHMlevelEdgeBisection	src/graphlab/extern/metis/libmetis/mpmetis.c	/^void MCHMlevelEdgeBisection(CtrlType *ctrl, GraphType *graph, float *tpwgts, float *ubvec)$/;"	f
MCHMlevelEdgeBisection	src/graphlab/extern/metis/libmetis/rename.h	269;"	d
MCHMlevelRecursiveBisection	src/graphlab/extern/metis/libmetis/mpmetis.c	/^idxtype MCHMlevelRecursiveBisection(CtrlType *ctrl, GraphType *graph, idxtype nparts, idxtype *part, $/;"	f
MCHMlevelRecursiveBisection	src/graphlab/extern/metis/libmetis/rename.h	267;"	d
MCHUNK_SIZE	src/graphlab/extern/metis/GKlib/dlmalloc.c	762;"	d	file:
MCMatch_HEM	src/graphlab/extern/metis/libmetis/mmatch.c	/^void MCMatch_HEM(CtrlType *ctrl, GraphType *graph)$/;"	f
MCMatch_HEM	src/graphlab/extern/metis/libmetis/rename.h	249;"	d
MCMatch_RM	src/graphlab/extern/metis/libmetis/mmatch.c	/^void MCMatch_RM(CtrlType *ctrl, GraphType *graph)$/;"	f
MCMatch_RM	src/graphlab/extern/metis/libmetis/rename.h	248;"	d
MCMatch_SBHEM	src/graphlab/extern/metis/libmetis/mmatch.c	/^void MCMatch_SBHEM(CtrlType *ctrl, GraphType *graph, idxtype norm)$/;"	f
MCMatch_SBHEM	src/graphlab/extern/metis/libmetis/rename.h	252;"	d
MCMatch_SHEBM	src/graphlab/extern/metis/libmetis/mmatch.c	/^void MCMatch_SHEBM(CtrlType *ctrl, GraphType *graph, idxtype norm)$/;"	f
MCMatch_SHEBM	src/graphlab/extern/metis/libmetis/rename.h	251;"	d
MCMatch_SHEM	src/graphlab/extern/metis/libmetis/mmatch.c	/^void MCMatch_SHEM(CtrlType *ctrl, GraphType *graph)$/;"	f
MCMatch_SHEM	src/graphlab/extern/metis/libmetis/rename.h	250;"	d
MCMlevelEdgeBisection	src/graphlab/extern/metis/libmetis/mpmetis.c	/^void MCMlevelEdgeBisection(CtrlType *ctrl, GraphType *graph, float *tpwgts, float ubfactor)$/;"	f
MCMlevelEdgeBisection	src/graphlab/extern/metis/libmetis/rename.h	268;"	d
MCMlevelKWayPartitioning	src/graphlab/extern/metis/libmetis/mkmetis.c	/^idxtype MCMlevelKWayPartitioning(CtrlType *ctrl, GraphType *graph, idxtype nparts, idxtype *part, $/;"	f
MCMlevelKWayPartitioning	src/graphlab/extern/metis/libmetis/rename.h	225;"	d
MCMlevelKWayRefinement	src/graphlab/extern/metis/libmetis/mrkmetis.c	/^idxtype MCMlevelKWayRefinement(CtrlType *ctrl, GraphType *graph, idxtype nparts, idxtype *part, $/;"	f
MCMlevelRecursiveBisection	src/graphlab/extern/metis/libmetis/mpmetis.c	/^idxtype MCMlevelRecursiveBisection(CtrlType *ctrl, GraphType *graph, idxtype nparts, idxtype *part, $/;"	f
MCMlevelRecursiveBisection	src/graphlab/extern/metis/libmetis/rename.h	266;"	d
MCRandom_KWayEdgeRefineHorizontal	src/graphlab/extern/metis/libmetis/mkwayfmh.c	/^void MCRandom_KWayEdgeRefineHorizontal(CtrlType *ctrl, GraphType *graph, idxtype nparts, $/;"	f
MCRandom_KWayEdgeRefineHorizontal	src/graphlab/extern/metis/libmetis/rename.h	229;"	d
METISTITLE	src/graphlab/extern/metis/libmetis/defs.h	15;"	d
METIS_EDGEND	src/graphlab/extern/metis/libmetis/frename.c	/^void METIS_EDGEND(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *numflag, idxtype *options, idxtype *perm, idxtype *iperm)$/;"	f
METIS_ESTIMATEMEMORY	src/graphlab/extern/metis/libmetis/frename.c	/^void METIS_ESTIMATEMEMORY(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *numflag, idxtype *optype, idxtype *nbytes)$/;"	f
METIS_EdgeComputeSeparator	src/graphlab/extern/metis/libmetis/parmetis.c	/^void METIS_EdgeComputeSeparator(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, $/;"	f
METIS_EdgeND	src/graphlab/extern/metis/libmetis/ometis.c	/^void METIS_EdgeND(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *numflag, idxtype *options, $/;"	f
METIS_EstimateMemory	src/graphlab/extern/metis/libmetis/estmem.c	/^void METIS_EstimateMemory(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *numflag, idxtype *optype, idxtype *nbytes)$/;"	f
METIS_FindContacts	src/graphlab/extern/metis/libmetis/cmetis.c	/^void METIS_FindContacts(void *raw_cinfo, idxtype *nboxes, double *boxcoords, idxtype *nparts, $/;"	f
METIS_FreeContactInfo	src/graphlab/extern/metis/libmetis/cmetis.c	/^void METIS_FreeContactInfo(void *raw_cinfo)$/;"	f
METIS_H	src/graphlab/extern/metis/metis.h	13;"	d
METIS_HPP	src/graphlab/extern/metis/metis.hpp	2;"	d
METIS_MCPARTGRAPHKWAY	src/graphlab/extern/metis/libmetis/frename.c	/^void METIS_MCPARTGRAPHKWAY(idxtype *nvtxs, idxtype *ncon, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, float *rubvec, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
METIS_MCPARTGRAPHRECURSIVE	src/graphlab/extern/metis/libmetis/frename.c	/^void METIS_MCPARTGRAPHRECURSIVE(idxtype *nvtxs, idxtype *ncon, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
METIS_MESHTODUAL	src/graphlab/extern/metis/libmetis/frename.c	/^void METIS_MESHTODUAL(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *etype, idxtype *numflag, idxtype *dxadj, idxtype *dadjncy)$/;"	f
METIS_MESHTONODAL	src/graphlab/extern/metis/libmetis/frename.c	/^void METIS_MESHTONODAL(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *etype, idxtype *numflag, idxtype *dxadj, idxtype *dadjncy)$/;"	f
METIS_MeshToDual	src/graphlab/extern/metis/libmetis/mesh.c	/^void METIS_MeshToDual(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *elms, $/;"	f
METIS_MeshToDualCount	src/graphlab/extern/metis/libmetis/mesh.c	/^idxtype METIS_MeshToDualCount(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *elms, $/;"	f
METIS_MeshToNodal	src/graphlab/extern/metis/libmetis/mesh.c	/^void METIS_MeshToNodal(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *etype, $/;"	f
METIS_MixedMeshToDual	src/graphlab/extern/metis/libmetis/mesh.c	/^void METIS_MixedMeshToDual(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *elms, $/;"	f
METIS_MixedMeshToDualCount	src/graphlab/extern/metis/libmetis/mesh.c	/^idxtype METIS_MixedMeshToDualCount(idxtype *ne, idxtype *nn, idxtype *elmnts, $/;"	f
METIS_MixedMeshToNodal	src/graphlab/extern/metis/libmetis/mesh.c	/^void METIS_MixedMeshToNodal(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *etype, $/;"	f
METIS_NODEND	src/graphlab/extern/metis/libmetis/frename.c	/^void METIS_NODEND(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *numflag, idxtype *options, idxtype *perm, idxtype *iperm)$/;"	f
METIS_NODEWND	src/graphlab/extern/metis/libmetis/frename.c	/^void METIS_NODEWND(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *numflag, idxtype *options, idxtype *perm, idxtype *iperm)$/;"	f
METIS_NodeComputeSeparator	src/graphlab/extern/metis/libmetis/parmetis.c	/^void METIS_NodeComputeSeparator(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, $/;"	f
METIS_NodeND	src/graphlab/extern/metis/libmetis/ometis.c	/^void METIS_NodeND(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *numflag, idxtype *options, $/;"	f
METIS_NodeNDP	src/graphlab/extern/metis/libmetis/parmetis.c	/^void METIS_NodeNDP(idxtype nvtxs, idxtype *xadj, idxtype *adjncy, idxtype npes, $/;"	f
METIS_NodeWND	src/graphlab/extern/metis/libmetis/ometis.c	/^void METIS_NodeWND(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *numflag, $/;"	f
METIS_PARTGRAPHKWAY	src/graphlab/extern/metis/libmetis/frename.c	/^void METIS_PARTGRAPHKWAY(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
METIS_PARTGRAPHRECURSIVE	src/graphlab/extern/metis/libmetis/frename.c	/^void METIS_PARTGRAPHRECURSIVE(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
METIS_PARTGRAPHVKWAY	src/graphlab/extern/metis/libmetis/frename.c	/^void METIS_PARTGRAPHVKWAY(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *vsize, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, idxtype *options, idxtype *volume, idxtype *part)$/;"	f
METIS_PARTMESHDUAL	src/graphlab/extern/metis/libmetis/frename.c	/^void METIS_PARTMESHDUAL(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *etype, idxtype *numflag, idxtype *nparts, idxtype *edgecut, idxtype *epart, idxtype *npart)$/;"	f
METIS_PARTMESHNODAL	src/graphlab/extern/metis/libmetis/frename.c	/^void METIS_PARTMESHNODAL(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *etype, idxtype *numflag, idxtype *nparts, idxtype *edgecut, idxtype *epart, idxtype *npart)$/;"	f
METIS_PartFillGraph	src/graphlab/extern/metis/libmetis/kfmetis.c	/^void METIS_PartFillGraph(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, $/;"	f
METIS_PartGraphForContact	src/graphlab/extern/metis/libmetis/cmetis.c	/^void *METIS_PartGraphForContact(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, $/;"	f
METIS_PartGraphKway	src/graphlab/extern/metis/libmetis/kmetis.c	/^void METIS_PartGraphKway(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, $/;"	f
METIS_PartGraphKway2	src/graphlab/extern/metis/libmetis/parmetis.c	/^void METIS_PartGraphKway2(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, $/;"	f
METIS_PartGraphRecursive	src/graphlab/extern/metis/libmetis/pmetis.c	/^void METIS_PartGraphRecursive(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, $/;"	f
METIS_PartGraphVKway	src/graphlab/extern/metis/libmetis/kvmetis.c	/^void METIS_PartGraphVKway(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, $/;"	f
METIS_PartMeshDual	src/graphlab/extern/metis/libmetis/meshpart.c	/^void METIS_PartMeshDual(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *etype, $/;"	f
METIS_PartMeshNodal	src/graphlab/extern/metis/libmetis/meshpart.c	/^void METIS_PartMeshNodal(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *etype, $/;"	f
METIS_PartMixedMeshDual	src/graphlab/extern/metis/libmetis/meshpart.c	/^void METIS_PartMixedMeshDual(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *etype, $/;"	f
METIS_PartMixedMeshNodal	src/graphlab/extern/metis/libmetis/meshpart.c	/^void METIS_PartMixedMeshNodal(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *etype, $/;"	f
METIS_PartSurfForContactRCB	src/graphlab/extern/metis/libmetis/cmetis.c	/^void *METIS_PartSurfForContactRCB(idxtype *nvtxs, double *xyzcoords, idxtype *sflag, $/;"	f
METIS_RefineGraphKway	src/graphlab/extern/metis/libmetis/rkmetis.c	/^void METIS_RefineGraphKway(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, $/;"	f
METIS_SetupContact	src/graphlab/extern/metis/libmetis/cmetis.c	/^void *METIS_SetupContact(idxtype *nvtxs, double *xyzcoords, idxtype *sflag, $/;"	f
METIS_SetupContact0	src/graphlab/extern/metis/libmetis/cmetis.c	/^void *METIS_SetupContact0(idxtype *nvtxs, double *xyzcoords, idxtype *sflag, $/;"	f
METIS_UpdateContactInfo	src/graphlab/extern/metis/libmetis/cmetis.c	/^void METIS_UpdateContactInfo(void *raw_cinfo, idxtype *nvtxs, double *xyzcoords, idxtype *sflag)$/;"	f
METIS_VER_MAJOR	src/graphlab/extern/metis/metis.h	291;"	d
METIS_VER_MINOR	src/graphlab/extern/metis/metis.h	292;"	d
METIS_VER_SUBMINOR	src/graphlab/extern/metis/metis.h	293;"	d
METIS_WPARTGRAPHKWAY	src/graphlab/extern/metis/libmetis/frename.c	/^void METIS_WPARTGRAPHKWAY(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, float *tpwgts, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
METIS_WPARTGRAPHRECURSIVE	src/graphlab/extern/metis/libmetis/frename.c	/^void METIS_WPARTGRAPHRECURSIVE(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, float *tpwgts, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
METIS_WPARTGRAPHVKWAY	src/graphlab/extern/metis/libmetis/frename.c	/^void METIS_WPARTGRAPHVKWAY(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *vsize, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, float *tpwgts, idxtype *options, idxtype *volume, idxtype *part)$/;"	f
METIS_WPartGraphKway	src/graphlab/extern/metis/libmetis/kmetis.c	/^void METIS_WPartGraphKway(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, $/;"	f
METIS_WPartGraphKway2	src/graphlab/extern/metis/libmetis/parmetis.c	/^void METIS_WPartGraphKway2(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, $/;"	f
METIS_WPartGraphRecursive	src/graphlab/extern/metis/libmetis/pmetis.c	/^void METIS_WPartGraphRecursive(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, $/;"	f
METIS_WPartGraphVKway	src/graphlab/extern/metis/libmetis/kvmetis.c	/^void METIS_WPartGraphVKway(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, $/;"	f
METIS_WRefineGraphKway	src/graphlab/extern/metis/libmetis/rkmetis.c	/^void METIS_WRefineGraphKway(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, $/;"	f
METIS_mCHPartGraphRecursive	src/graphlab/extern/metis/libmetis/mpmetis.c	/^void METIS_mCHPartGraphRecursive(idxtype *nvtxs, idxtype *ncon, idxtype *xadj, idxtype *adjncy, $/;"	f
METIS_mCHPartGraphRecursiveInternal	src/graphlab/extern/metis/libmetis/mpmetis.c	/^void METIS_mCHPartGraphRecursiveInternal(idxtype *nvtxs, idxtype *ncon, idxtype *xadj, idxtype *adjncy, $/;"	f
METIS_mCPartGraphKway	src/graphlab/extern/metis/libmetis/mkmetis.c	/^void METIS_mCPartGraphKway(idxtype *nvtxs, idxtype *ncon, idxtype *xadj, idxtype *adjncy, $/;"	f
METIS_mCPartGraphRecursive	src/graphlab/extern/metis/libmetis/mpmetis.c	/^void METIS_mCPartGraphRecursive(idxtype *nvtxs, idxtype *ncon, idxtype *xadj, idxtype *adjncy, $/;"	f
METIS_mCPartGraphRecursiveInternal	src/graphlab/extern/metis/libmetis/mpmetis.c	/^void METIS_mCPartGraphRecursiveInternal(idxtype *nvtxs, idxtype *ncon, idxtype *xadj, idxtype *adjncy, $/;"	f
METIS_mCRefineGraphKway	src/graphlab/extern/metis/libmetis/mrkmetis.c	/^void METIS_mCRefineGraphKway(idxtype *nvtxs, idxtype *ncon, idxtype *xadj, idxtype *adjncy, $/;"	f
MFAIL	src/graphlab/extern/metis/GKlib/dlmalloc.c	223;"	d	file:
MIN_CHUNK_SIZE	src/graphlab/extern/metis/GKlib/dlmalloc.c	776;"	d	file:
MIN_LARGE_SIZE	src/graphlab/extern/metis/GKlib/dlmalloc.c	1134;"	d	file:
MIN_REQUEST	src/graphlab/extern/metis/GKlib/dlmalloc.c	787;"	d	file:
MIN_SMALL_INDEX	src/graphlab/extern/metis/GKlib/dlmalloc.c	1373;"	d	file:
MLOCK_T	src/graphlab/extern/metis/GKlib/dlmalloc.c	358;"	d	file:
MLOCK_T	src/graphlab/extern/metis/GKlib/dlmalloc.c	432;"	d	file:
MLOCK_T	src/graphlab/extern/metis/GKlib/dlmalloc.c	494;"	d	file:
MLOCK_T	src/graphlab/extern/metis/GKlib/dlmalloc.c	549;"	d	file:
MMAP_CHUNK_OVERHEAD	src/graphlab/extern/metis/GKlib/dlmalloc.c	771;"	d	file:
MMAP_CLEARS	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	520;"	d
MMAP_CLEARS	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	522;"	d
MMAP_CLEARS	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	583;"	d
MMAP_FLAGS	src/graphlab/extern/metis/GKlib/dlmalloc.c	244;"	d	file:
MMAP_FLAGS	src/graphlab/extern/metis/GKlib/dlmalloc.c	251;"	d	file:
MMAP_FOOT_PAD	src/graphlab/extern/metis/GKlib/dlmalloc.c	773;"	d	file:
MMAP_PROT	src/graphlab/extern/metis/GKlib/dlmalloc.c	239;"	d	file:
MMDOrder	src/graphlab/extern/metis/libmetis/ometis.c	/^void MMDOrder(CtrlType *ctrl, GraphType *graph, idxtype *order, idxtype lastvtx)$/;"	f
MMDOrder	src/graphlab/extern/metis/libmetis/rename.h	304;"	d
MMDSWITCH	src/graphlab/extern/metis/libmetis/defs.h	115;"	d
MODIFY_EDGE_EVENT	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	/^  const size_t MODIFY_EDGE_EVENT = 8;$/;"	m	namespace:graphlab
MODIFY_VERTEX_EVENT	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	/^  const size_t MODIFY_VERTEX_EVENT = 4;$/;"	m	namespace:graphlab
MORECORE	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	606;"	d
MORECORE_CONTIGUOUS	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	603;"	d
MORECORE_CONTIGUOUS	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	609;"	d
MSPACES	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	31;"	d
MSPACES	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	546;"	d
MSPACES	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	548;"	d
MTYPE_HEM	src/graphlab/extern/metis/metis.h	246;"	d
MTYPE_RM	src/graphlab/extern/metis/metis.h	245;"	d
MTYPE_SBHEM_INFNORM	src/graphlab/extern/metis/metis.h	252;"	d
MTYPE_SBHEM_ONENORM	src/graphlab/extern/metis/metis.h	251;"	d
MTYPE_SHEBM_INFNORM	src/graphlab/extern/metis/metis.h	250;"	d
MTYPE_SHEBM_ONENORM	src/graphlab/extern/metis/metis.h	249;"	d
MTYPE_SHEM	src/graphlab/extern/metis/metis.h	247;"	d
MTYPE_SHEMKWAY	src/graphlab/extern/metis/metis.h	248;"	d
MULTINOMIAL_VERTEX_SET_HPP	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	2;"	d
M_GRANULARITY	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	664;"	d
M_MMAP_THRESHOLD	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	665;"	d
M_TRIM_THRESHOLD	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	663;"	d
MatchTmr	src/graphlab/extern/metis/libmetis/struct.h	/^  double TotalTmr, InitPartTmr, MatchTmr, ContractTmr, CoarsenTmr, UncoarsenTmr, $/;"	m	struct:controldef
Match_HEM	src/graphlab/extern/metis/libmetis/match.c	/^void Match_HEM(CtrlType *ctrl, GraphType *graph)$/;"	f
Match_HEM	src/graphlab/extern/metis/libmetis/rename.h	145;"	d
Match_RM	src/graphlab/extern/metis/libmetis/match.c	/^void Match_RM(CtrlType *ctrl, GraphType *graph)$/;"	f
Match_RM	src/graphlab/extern/metis/libmetis/rename.h	143;"	d
Match_RM_NVW	src/graphlab/extern/metis/libmetis/match.c	/^void Match_RM_NVW(CtrlType *ctrl, GraphType *graph)$/;"	f
Match_RM_NVW	src/graphlab/extern/metis/libmetis/rename.h	144;"	d
Match_SHEM	src/graphlab/extern/metis/libmetis/match.c	/^void Match_SHEM(CtrlType *ctrl, GraphType *graph)$/;"	f
Match_SHEM	src/graphlab/extern/metis/libmetis/rename.h	146;"	d
McKMETIS_CTYPE	src/graphlab/extern/metis/libmetis/defs.h	76;"	d
McKMETIS_DBGLVL	src/graphlab/extern/metis/libmetis/defs.h	79;"	d
McKMETIS_ITYPE	src/graphlab/extern/metis/libmetis/defs.h	77;"	d
McKMETIS_RTYPE	src/graphlab/extern/metis/libmetis/defs.h	78;"	d
McPMETIS_CTYPE	src/graphlab/extern/metis/libmetis/defs.h	70;"	d
McPMETIS_DBGLVL	src/graphlab/extern/metis/libmetis/defs.h	73;"	d
McPMETIS_ITYPE	src/graphlab/extern/metis/libmetis/defs.h	71;"	d
McPMETIS_RTYPE	src/graphlab/extern/metis/libmetis/defs.h	72;"	d
MemberOption	src/graphlab/distributed/distributed_hash_table.hpp	/^                                        &any_lru_list::member_hook_> MemberOption;$/;"	t	class:graphlab::distributed_hash_table
MinCover	src/graphlab/extern/metis/libmetis/mincover.c	/^void MinCover(idxtype *xadj, idxtype *adjncy, idxtype asize, idxtype bsize, idxtype *cover, idxtype *csize)$/;"	f
MinCover	src/graphlab/extern/metis/libmetis/rename.h	201;"	d
MinCover_Augment	src/graphlab/extern/metis/libmetis/mincover.c	/^idxtype MinCover_Augment(idxtype *xadj, idxtype *adjncy, idxtype col, idxtype *mate, idxtype *flag, idxtype *level, idxtype maxlevel)$/;"	f
MinCover_Augment	src/graphlab/extern/metis/libmetis/rename.h	202;"	d
MinCover_ColDFS	src/graphlab/extern/metis/libmetis/mincover.c	/^void MinCover_ColDFS(idxtype *xadj, idxtype *adjncy, idxtype root, idxtype *mate, idxtype *where, idxtype flag)$/;"	f
MinCover_ColDFS	src/graphlab/extern/metis/libmetis/rename.h	204;"	d
MinCover_Decompose	src/graphlab/extern/metis/libmetis/mincover.c	/^void MinCover_Decompose(idxtype *xadj, idxtype *adjncy, idxtype asize, idxtype bsize, idxtype *mate, idxtype *cover, idxtype *csize)$/;"	f
MinCover_Decompose	src/graphlab/extern/metis/libmetis/rename.h	203;"	d
MinCover_RowDFS	src/graphlab/extern/metis/libmetis/mincover.c	/^void MinCover_RowDFS(idxtype *xadj, idxtype *adjncy, idxtype root, idxtype *mate, idxtype *where, idxtype flag)$/;"	f
MinCover_RowDFS	src/graphlab/extern/metis/libmetis/rename.h	205;"	d
MlevelEdgeBisection	src/graphlab/extern/metis/libmetis/pmetis.c	/^void MlevelEdgeBisection(CtrlType *ctrl, GraphType *graph, idxtype *tpwgts, float ubfactor)$/;"	f
MlevelEdgeBisection	src/graphlab/extern/metis/libmetis/rename.h	314;"	d
MlevelKWayPartitioning	src/graphlab/extern/metis/libmetis/kmetis.c	/^idxtype MlevelKWayPartitioning(CtrlType *ctrl, GraphType *graph, idxtype nparts, idxtype *part, float *tpwgts, float ubfactor)$/;"	f
MlevelKWayPartitioning	src/graphlab/extern/metis/libmetis/rename.h	96;"	d
MlevelKWayRefinement	src/graphlab/extern/metis/libmetis/rkmetis.c	/^idxtype MlevelKWayRefinement(CtrlType *ctrl, GraphType *graph, idxtype nparts, idxtype *part, $/;"	f
MlevelNestedDissection	src/graphlab/extern/metis/libmetis/ometis.c	/^void MlevelNestedDissection(CtrlType *ctrl, GraphType *graph, idxtype *order, float ubfactor, idxtype lastvtx)$/;"	f
MlevelNestedDissection	src/graphlab/extern/metis/libmetis/rename.h	299;"	d
MlevelNestedDissectionCC	src/graphlab/extern/metis/libmetis/ometis.c	/^void MlevelNestedDissectionCC(CtrlType *ctrl, GraphType *graph, idxtype *order, float ubfactor, idxtype lastvtx)$/;"	f
MlevelNestedDissectionCC	src/graphlab/extern/metis/libmetis/rename.h	300;"	d
MlevelNestedDissectionP	src/graphlab/extern/metis/libmetis/parmetis.c	/^void MlevelNestedDissectionP(CtrlType *ctrl, GraphType *graph, idxtype *order, idxtype lastvtx, $/;"	f
MlevelNestedDissectionP	src/graphlab/extern/metis/libmetis/rename.h	309;"	d
MlevelNodeBisection	src/graphlab/extern/metis/libmetis/ometis.c	/^void MlevelNodeBisection(CtrlType *ctrl, GraphType *graph, idxtype *tpwgts, float ubfactor)$/;"	f
MlevelNodeBisection	src/graphlab/extern/metis/libmetis/rename.h	302;"	d
MlevelNodeBisectionMultiple	src/graphlab/extern/metis/libmetis/ometis.c	/^void MlevelNodeBisectionMultiple(CtrlType *ctrl, GraphType *graph, idxtype *tpwgts, float ubfactor)$/;"	f
MlevelNodeBisectionMultiple	src/graphlab/extern/metis/libmetis/rename.h	301;"	d
MlevelRecursiveBisection	src/graphlab/extern/metis/libmetis/pmetis.c	/^idxtype MlevelRecursiveBisection(CtrlType *ctrl, GraphType *graph, $/;"	f
MlevelRecursiveBisection	src/graphlab/extern/metis/libmetis/rename.h	313;"	d
MlevelVolKWayPartitioning	src/graphlab/extern/metis/libmetis/kvmetis.c	/^idxtype MlevelVolKWayPartitioning(CtrlType *ctrl, GraphType *graph, idxtype nparts, idxtype *part, $/;"	f
MlevelVolKWayPartitioning	src/graphlab/extern/metis/libmetis/rename.h	100;"	d
MocAllocate2WayPartitionMemory	src/graphlab/extern/metis/libmetis/mrefine.c	/^void MocAllocate2WayPartitionMemory(CtrlType *ctrl, GraphType *graph)$/;"	f
MocAllocate2WayPartitionMemory	src/graphlab/extern/metis/libmetis/rename.h	274;"	d
MocAllocateKWayPartitionMemory	src/graphlab/extern/metis/libmetis/mkwayrefine.c	/^void MocAllocateKWayPartitionMemory(CtrlType *ctrl, GraphType *graph, idxtype nparts)$/;"	f
MocAllocateKWayPartitionMemory	src/graphlab/extern/metis/libmetis/rename.h	241;"	d
MocBalance2Way	src/graphlab/extern/metis/libmetis/mbalance.c	/^void MocBalance2Way(CtrlType *ctrl, GraphType *graph, float *tpwgts, float lbfactor)$/;"	f
MocBalance2Way	src/graphlab/extern/metis/libmetis/rename.h	150;"	d
MocBalance2Way2	src/graphlab/extern/metis/libmetis/mbalance2.c	/^void MocBalance2Way2(CtrlType *ctrl, GraphType *graph, float *tpwgts, float *ubvec)$/;"	f
MocBalance2Way2	src/graphlab/extern/metis/libmetis/rename.h	155;"	d
MocCompute2WayPartitionParams	src/graphlab/extern/metis/libmetis/mrefine.c	/^void MocCompute2WayPartitionParams(CtrlType *ctrl, GraphType *graph)$/;"	f
MocCompute2WayPartitionParams	src/graphlab/extern/metis/libmetis/rename.h	275;"	d
MocComputeKWayBalanceBoundary	src/graphlab/extern/metis/libmetis/mkwayrefine.c	/^void MocComputeKWayBalanceBoundary(CtrlType *ctrl, GraphType *graph, idxtype nparts)$/;"	f
MocComputeKWayBalanceBoundary	src/graphlab/extern/metis/libmetis/rename.h	244;"	d
MocComputeKWayPartitionParams	src/graphlab/extern/metis/libmetis/mkwayrefine.c	/^void MocComputeKWayPartitionParams(CtrlType *ctrl, GraphType *graph, idxtype nparts)$/;"	f
MocComputeKWayPartitionParams	src/graphlab/extern/metis/libmetis/rename.h	242;"	d
MocFM_2WayEdgeRefine	src/graphlab/extern/metis/libmetis/mfm.c	/^void MocFM_2WayEdgeRefine(CtrlType *ctrl, GraphType *graph, float *tpwgts, idxtype npasses)$/;"	f
MocFM_2WayEdgeRefine	src/graphlab/extern/metis/libmetis/rename.h	187;"	d
MocFM_2WayEdgeRefine2	src/graphlab/extern/metis/libmetis/mfm2.c	/^void MocFM_2WayEdgeRefine2(CtrlType *ctrl, GraphType *graph, float *tpwgts, float *orgubvec, $/;"	f
MocFM_2WayEdgeRefine2	src/graphlab/extern/metis/libmetis/rename.h	195;"	d
MocGeneral2WayBalance	src/graphlab/extern/metis/libmetis/mbalance.c	/^void MocGeneral2WayBalance(CtrlType *ctrl, GraphType *graph, float *tpwgts, float lbfactor)$/;"	f
MocGeneral2WayBalance	src/graphlab/extern/metis/libmetis/rename.h	151;"	d
MocGeneral2WayBalance2	src/graphlab/extern/metis/libmetis/mbalance2.c	/^void MocGeneral2WayBalance2(CtrlType *ctrl, GraphType *graph, float *tpwgts, float *ubvec)$/;"	f
MocGeneral2WayBalance2	src/graphlab/extern/metis/libmetis/rename.h	156;"	d
MocGrowBisection	src/graphlab/extern/metis/libmetis/minitpart.c	/^void MocGrowBisection(CtrlType *ctrl, GraphType *graph, float *tpwgts, float ubfactor)$/;"	f
MocGrowBisection	src/graphlab/extern/metis/libmetis/rename.h	210;"	d
MocGrowBisection2	src/graphlab/extern/metis/libmetis/minitpart2.c	/^void MocGrowBisection2(CtrlType *ctrl, GraphType *graph, float *tpwgts, float *ubvec)$/;"	f
MocGrowBisection2	src/graphlab/extern/metis/libmetis/rename.h	218;"	d
MocGrowBisectionNew2	src/graphlab/extern/metis/libmetis/minitpart2.c	/^void MocGrowBisectionNew2(CtrlType *ctrl, GraphType *graph, float *tpwgts, float *ubvec)$/;"	f
MocGrowBisectionNew2	src/graphlab/extern/metis/libmetis/rename.h	219;"	d
MocInit2WayBalance	src/graphlab/extern/metis/libmetis/minitpart.c	/^void MocInit2WayBalance(CtrlType *ctrl, GraphType *graph, float *tpwgts)$/;"	f
MocInit2WayBalance	src/graphlab/extern/metis/libmetis/rename.h	212;"	d
MocInit2WayBalance2	src/graphlab/extern/metis/libmetis/minitpart2.c	/^void MocInit2WayBalance2(CtrlType *ctrl, GraphType *graph, float *tpwgts, float *ubvec)$/;"	f
MocInit2WayBalance2	src/graphlab/extern/metis/libmetis/rename.h	220;"	d
MocInit2WayPartition	src/graphlab/extern/metis/libmetis/minitpart.c	/^void MocInit2WayPartition(CtrlType *ctrl, GraphType *graph, float *tpwgts, float ubfactor) $/;"	f
MocInit2WayPartition	src/graphlab/extern/metis/libmetis/rename.h	209;"	d
MocInit2WayPartition2	src/graphlab/extern/metis/libmetis/minitpart2.c	/^void MocInit2WayPartition2(CtrlType *ctrl, GraphType *graph, float *tpwgts, float *ubvec) $/;"	f
MocInit2WayPartition2	src/graphlab/extern/metis/libmetis/rename.h	217;"	d
MocIsHBalanced	src/graphlab/extern/metis/libmetis/mkwayfmh.c	/^idxtype MocIsHBalanced(idxtype ncon, idxtype nparts, float *npwgts, float *ubvec)$/;"	f
MocIsHBalanced	src/graphlab/extern/metis/libmetis/rename.h	234;"	d
MocProject2WayPartition	src/graphlab/extern/metis/libmetis/mrefine.c	/^void MocProject2WayPartition(CtrlType *ctrl, GraphType *graph)$/;"	f
MocProject2WayPartition	src/graphlab/extern/metis/libmetis/rename.h	276;"	d
MocProjectKWayPartition	src/graphlab/extern/metis/libmetis/mkwayrefine.c	/^void MocProjectKWayPartition(CtrlType *ctrl, GraphType *graph, idxtype nparts)$/;"	f
MocProjectKWayPartition	src/graphlab/extern/metis/libmetis/rename.h	243;"	d
MocRandomBisection	src/graphlab/extern/metis/libmetis/minitpart.c	/^void MocRandomBisection(CtrlType *ctrl, GraphType *graph, float *tpwgts, float ubfactor)$/;"	f
MocRandomBisection	src/graphlab/extern/metis/libmetis/rename.h	211;"	d
MocRefine2Way	src/graphlab/extern/metis/libmetis/mrefine.c	/^void MocRefine2Way(CtrlType *ctrl, GraphType *orggraph, GraphType *graph, float *tpwgts, float ubfactor)$/;"	f
MocRefine2Way	src/graphlab/extern/metis/libmetis/rename.h	273;"	d
MocRefine2Way2	src/graphlab/extern/metis/libmetis/mrefine2.c	/^void MocRefine2Way2(CtrlType *ctrl, GraphType *orggraph, GraphType *graph, float *tpwgts, $/;"	f
MocRefine2Way2	src/graphlab/extern/metis/libmetis/rename.h	280;"	d
MocRefineKWayHorizontal	src/graphlab/extern/metis/libmetis/mkwayrefine.c	/^void MocRefineKWayHorizontal(CtrlType *ctrl, GraphType *orggraph, GraphType *graph, idxtype nparts, $/;"	f
MocRefineKWayHorizontal	src/graphlab/extern/metis/libmetis/rename.h	240;"	d
Moc_ComputePartitionBalance	src/graphlab/extern/metis/libmetis/stat.c	/^void Moc_ComputePartitionBalance(GraphType *graph, idxtype nparts, idxtype *where, float *ubvec)$/;"	f
MoveGroup	src/graphlab/extern/metis/libmetis/rename.h	374;"	d
MoveGroup	src/graphlab/extern/metis/libmetis/subdomains.c	/^void MoveGroup(CtrlType *ctrl, GraphType *graph, idxtype nparts, idxtype to, idxtype gid, idxtype *ptr, idxtype *ind)$/;"	f
MoveGroupMConn	src/graphlab/extern/metis/libmetis/rename.h	372;"	d
MoveGroupMConn	src/graphlab/extern/metis/libmetis/subdomains.c	/^void MoveGroupMConn(CtrlType *ctrl, GraphType *graph, idxtype *ndoms, idxtype *pmat,$/;"	f
NEG_GAINSPAN	src/graphlab/extern/metis/libmetis/defs.h	24;"	d
NEWTASK	src/graphlab/schedulers/ischeduler.hpp	/^      NEWTASK,      \/\/\/ The get_next_tasks function returned a new task$/;"	e	enum:graphlab::sched_status::status_enum
NGR_PASSES	src/graphlab/extern/metis/libmetis/defs.h	101;"	d
NLGR_PASSES	src/graphlab/extern/metis/libmetis/defs.h	102;"	d
NOINLINE	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	728;"	d
NOINLINE	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	730;"	d
NOINLINE	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	732;"	d
NOLOCK	src/graphlab/distributed/lock_manager.hpp	/^  RDLOCK, WRLOCK, NOLOCK$/;"	e	enum:graphlab::lock_type
NONOPTION_P	src/graphlab/extern/metis/GKlib/getopt.c	357;"	d	file:
NO_MALLINFO	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	647;"	d
NO_SEGMENT_TRAVERSAL	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	653;"	d
NRInfoType	src/graphlab/extern/metis/libmetis/struct.h	/^typedef struct nrinfodef NRInfoType;$/;"	t	typeref:struct:nrinfodef
NSMALLBINS	src/graphlab/extern/metis/GKlib/dlmalloc.c	1129;"	d	file:
NTREEBINS	src/graphlab/extern/metis/GKlib/dlmalloc.c	1130;"	d	file:
NULL_CONSISTENCY	src/graphlab/scope/iscope.hpp	/^      NULL_CONSISTENCY = 0,    \/\/ no locks$/;"	e	enum:graphlab::scope_range::scope_range_enum
NULL_LOCK_INITIALIZER	src/graphlab/extern/metis/GKlib/dlmalloc.c	556;"	d	file:
NUMDAT	apps/svm/svm.cpp	/^const size_t NUMDAT = 5;        \/\/ size_t Number of data points$/;"	v
NUMDAT_KEY	apps/shooting/shooting.cpp	/^                     NUMDAT_KEY};$/;"	e	enum:sdt_const_keys	file:
NUMDIM	apps/svm/svm.cpp	/^const size_t NUMDIM = 6;        \/\/ size_t. Number of dimensions$/;"	v
NUMDIM_KEY	apps/shooting/shooting.cpp	/^                     NUMDIM_KEY,$/;"	e	enum:sdt_const_keys	file:
NUMSVS	apps/svm/svm.cpp	/^const size_t NUMSVS = 1;        \/\/ integer value. The number of support vectors$/;"	v
NUM_FLIPS_KEY	apps/demo/concise_demo.cpp	/^  NUM_FLIPS_KEY$/;"	e	enum:shared_data_keys	file:
NUM_FLIPS_KEY	apps/demo/demo.cpp	/^  NUM_FLIPS_KEY$/;"	e	enum:shared_data_keys	file:
NUM_SAMPLES_ID	apps/image_denoise/gibbs_denoise.cpp	/^enum constants {EDGE_FACTOR_ID, NUM_SAMPLES_ID};$/;"	e	enum:constants	file:
NUM_VERTICES	apps/pagerank/pagerankapp.cpp	/^const size_t NUM_VERTICES = 1;$/;"	v
NUM_VERTICES_KEY	apps/demo/concise_demo.cpp	/^  NUM_VERTICES_KEY,$/;"	e	enum:shared_data_keys	file:
NUM_VERTICES_KEY	apps/demo/demo.cpp	/^  NUM_VERTICES_KEY,$/;"	e	enum:shared_data_keys	file:
OEMETIS_CTYPE	src/graphlab/extern/metis/libmetis/defs.h	55;"	d
OEMETIS_DBGLVL	src/graphlab/extern/metis/libmetis/defs.h	58;"	d
OEMETIS_ITYPE	src/graphlab/extern/metis/libmetis/defs.h	56;"	d
OEMETIS_RTYPE	src/graphlab/extern/metis/libmetis/defs.h	57;"	d
OFLAG_CCMP	src/graphlab/extern/metis/libmetis/defs.h	39;"	d
OFLAG_COMPRESS	src/graphlab/extern/metis/libmetis/defs.h	38;"	d
ONEOVERRANDMAX	src/graphlab/extern/metis/GKlib/gk_macros.h	28;"	d
ONLY_MSPACES	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	542;"	d
ONMETIS_CTYPE	src/graphlab/extern/metis/libmetis/defs.h	61;"	d
ONMETIS_DBGLVL	src/graphlab/extern/metis/libmetis/defs.h	64;"	d
ONMETIS_ITYPE	src/graphlab/extern/metis/libmetis/defs.h	62;"	d
ONMETIS_NSEPS	src/graphlab/extern/metis/libmetis/defs.h	67;"	d
ONMETIS_OFLAGS	src/graphlab/extern/metis/libmetis/defs.h	65;"	d
ONMETIS_PFACTOR	src/graphlab/extern/metis/libmetis/defs.h	66;"	d
ONMETIS_RTYPE	src/graphlab/extern/metis/libmetis/defs.h	63;"	d
OPTION_CTYPE	src/graphlab/extern/metis/libmetis/defs.h	30;"	d
OPTION_DBGLVL	src/graphlab/extern/metis/libmetis/defs.h	33;"	d
OPTION_ITYPE	src/graphlab/extern/metis/libmetis/defs.h	31;"	d
OPTION_NSEPS	src/graphlab/extern/metis/libmetis/defs.h	36;"	d
OPTION_OFLAGS	src/graphlab/extern/metis/libmetis/defs.h	34;"	d
OPTION_PFACTOR	src/graphlab/extern/metis/libmetis/defs.h	35;"	d
OPTION_PTYPE	src/graphlab/extern/metis/libmetis/defs.h	29;"	d
OPTION_RTYPE	src/graphlab/extern/metis/libmetis/defs.h	32;"	d
OP_KMETIS	src/graphlab/extern/metis/libmetis/defs.h	90;"	d
OP_KVMETIS	src/graphlab/extern/metis/libmetis/defs.h	94;"	d
OP_OEMETIS	src/graphlab/extern/metis/libmetis/defs.h	91;"	d
OP_ONMETIS	src/graphlab/extern/metis/libmetis/defs.h	92;"	d
OP_ONWMETIS	src/graphlab/extern/metis/libmetis/defs.h	93;"	d
OP_PMETIS	src/graphlab/extern/metis/libmetis/defs.h	89;"	d
OR	src/graphlab/extern/metis/libmetis/macros.h	20;"	d
ORDER_UNBALANCE_FRACTION	src/graphlab/extern/metis/libmetis/defs.h	113;"	d
OUTPUTLEVEL	src/graphlab/logger/logger.hpp	48;"	d
PACKSTRUCT0	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT0{ F targetfn;};$/;"	s	namespace:graphlab
PACKSTRUCT1	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT1{ F targetfn; T0 i0; };$/;"	s	namespace:graphlab
PACKSTRUCT2	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT2{ F targetfn; T0 i0; T1 i1; };$/;"	s	namespace:graphlab
PACKSTRUCT3	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT3{ F targetfn; T0 i0; T1 i1; T2 i2; };$/;"	s	namespace:graphlab
PACKSTRUCT4	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT4{ F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; };$/;"	s	namespace:graphlab
PACKSTRUCT5	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT5{ F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; };$/;"	s	namespace:graphlab
PACKSTRUCT6	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT6{ F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; T5 i5; };$/;"	s	namespace:graphlab
PARTITION_BFS	src/graphlab/graph/graph.hpp	/^      PARTITION_BFS,$/;"	e	enum:graphlab::partition_method::partition_method_enum
PARTITION_EDGE_NUM	src/graphlab/graph/graph.hpp	/^      PARTITION_EDGE_NUM,$/;"	e	enum:graphlab::partition_method::partition_method_enum
PARTITION_METIS	src/graphlab/graph/graph.hpp	/^      PARTITION_METIS,$/;"	e	enum:graphlab::partition_method::partition_method_enum
PARTITION_RANDOM	src/graphlab/graph/graph.hpp	/^      PARTITION_RANDOM,$/;"	e	enum:graphlab::partition_method::partition_method_enum
PCHECK	src/graphlab/logger/assertions.hpp	77;"	d
PERMUTE	src/graphlab/extern/metis/GKlib/getopt.c	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon6	file:
PINUSE_BIT	src/graphlab/extern/metis/GKlib/dlmalloc.c	810;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	101;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	104;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	107;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	113;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	116;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	122;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	128;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	131;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	134;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	137;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	143;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	146;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	149;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	158;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	86;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	92;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	95;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	101;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	107;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	116;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	122;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	128;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	134;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	140;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	143;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	74;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	77;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	86;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	92;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	95;"	d	file:
PLATFORM_ID	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	104;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	107;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	113;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	116;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	122;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	128;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	131;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	134;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	137;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	146;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	149;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	158;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	164;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	167;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	176;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	179;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	101;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	107;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	116;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	122;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	128;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	134;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	140;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	143;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	158;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	92;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	95;"	d	file:
PLATFORM_ID	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	104;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	107;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	113;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	116;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	122;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	128;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	131;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	134;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	137;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	146;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	149;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	158;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	164;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	167;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	176;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	179;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	101;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	107;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	116;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	122;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	128;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	134;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	140;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	143;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	158;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	92;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	95;"	d	file:
PLATFORM_ID	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	104;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	107;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	113;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	116;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	122;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	128;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	131;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	134;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	137;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	146;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	149;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	158;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	164;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	167;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	176;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	179;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	101;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	107;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	116;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	122;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	128;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	134;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	140;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	143;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	158;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	92;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	95;"	d	file:
PLATFORM_ID	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
PLUS_GAINSPAN	src/graphlab/extern/metis/libmetis/defs.h	23;"	d
PMETIS_CTYPE	src/graphlab/extern/metis/libmetis/defs.h	43;"	d
PMETIS_DBGLVL	src/graphlab/extern/metis/libmetis/defs.h	46;"	d
PMETIS_ITYPE	src/graphlab/extern/metis/libmetis/defs.h	44;"	d
PMETIS_RTYPE	src/graphlab/extern/metis/libmetis/defs.h	45;"	d
POSTACTION	src/graphlab/extern/metis/GKlib/dlmalloc.c	1291;"	d	file:
POSTACTION	src/graphlab/extern/metis/GKlib/dlmalloc.c	1299;"	d	file:
PQueueDelete	src/graphlab/extern/metis/libmetis/pqueue.c	/^idxtype PQueueDelete(PQueueType *queue, idxtype node, idxtype gain)$/;"	f
PQueueDelete	src/graphlab/extern/metis/libmetis/rename.h	324;"	d
PQueueFree	src/graphlab/extern/metis/libmetis/pqueue.c	/^void PQueueFree(CtrlType *ctrl, PQueueType *queue)$/;"	f
PQueueFree	src/graphlab/extern/metis/libmetis/rename.h	322;"	d
PQueueGetKey	src/graphlab/extern/metis/libmetis/pqueue.c	/^idxtype PQueueGetKey(PQueueType *queue)$/;"	f
PQueueGetMax	src/graphlab/extern/metis/libmetis/pqueue.c	/^idxtype PQueueGetMax(PQueueType *queue)$/;"	f
PQueueGetMax	src/graphlab/extern/metis/libmetis/rename.h	327;"	d
PQueueGetSize	src/graphlab/extern/metis/libmetis/pqueue.c	/^idxtype PQueueGetSize(PQueueType *queue)$/;"	f
PQueueInit	src/graphlab/extern/metis/libmetis/pqueue.c	/^void PQueueInit(CtrlType *ctrl, PQueueType *queue, idxtype maxnodes, idxtype maxgain)$/;"	f
PQueueInit	src/graphlab/extern/metis/libmetis/rename.h	320;"	d
PQueueInsert	src/graphlab/extern/metis/libmetis/pqueue.c	/^idxtype PQueueInsert(PQueueType *queue, idxtype node, idxtype gain)$/;"	f
PQueueInsert	src/graphlab/extern/metis/libmetis/rename.h	323;"	d
PQueueReset	src/graphlab/extern/metis/libmetis/pqueue.c	/^void PQueueReset(PQueueType *queue)$/;"	f
PQueueReset	src/graphlab/extern/metis/libmetis/rename.h	321;"	d
PQueueSeeMax	src/graphlab/extern/metis/libmetis/pqueue.c	/^idxtype PQueueSeeMax(PQueueType *queue)$/;"	f
PQueueSeeMax	src/graphlab/extern/metis/libmetis/rename.h	328;"	d
PQueueType	src/graphlab/extern/metis/libmetis/struct.h	/^struct PQueueType {$/;"	s
PQueueType	src/graphlab/extern/metis/libmetis/struct.h	/^typedef struct PQueueType PQueueType;$/;"	t	typeref:struct:PQueueType
PQueueUpdate	src/graphlab/extern/metis/libmetis/pqueue.c	/^idxtype PQueueUpdate(PQueueType *queue, idxtype node, idxtype oldgain, idxtype newgain)$/;"	f
PQueueUpdate	src/graphlab/extern/metis/libmetis/rename.h	325;"	d
PQueueUpdateUp	src/graphlab/extern/metis/libmetis/pqueue.c	/^void PQueueUpdateUp(PQueueType *queue, idxtype node, idxtype oldgain, idxtype newgain)$/;"	f
PQueueUpdateUp	src/graphlab/extern/metis/libmetis/rename.h	326;"	d
PREACTION	src/graphlab/extern/metis/GKlib/dlmalloc.c	1290;"	d	file:
PREACTION	src/graphlab/extern/metis/GKlib/dlmalloc.c	1295;"	d	file:
PRIIDX	src/graphlab/extern/metis/metis.h	91;"	d
PRIIDX	src/graphlab/extern/metis/metis.h	96;"	d
PRIMAL_LOSS	apps/svm/svm.cpp	/^const size_t PRIMAL_LOSS = 0;   \/\/ double value. The estimated primal loss$/;"	v
PROCEED_ON_ERROR	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	564;"	d
PrintBackTrace	src/graphlab/extern/metis/GKlib/error.c	/^void PrintBackTrace()$/;"	f
PrintBinary	src/graphlab/extern/bitmagic/bmdbg.h	/^void PrintBinary(V val)$/;"	f
PrintBits32	src/graphlab/extern/bitmagic/bmdbg.h	/^void PrintBits32(unsigned val)$/;"	f
PrintDGap	src/graphlab/extern/bitmagic/bmdbg.h	/^void PrintDGap(const bm::gap_word_t* gap_buf, unsigned gap_len=0)$/;"	f
PrintDGapGamma	src/graphlab/extern/bitmagic/bmdbg.h	/^void PrintDGapGamma(const bm::gap_word_t* gap_buf, unsigned gap_len=0)$/;"	f
PrintDistanceMatrix	src/graphlab/extern/bitmagic/bmdbg.h	/^void PrintDistanceMatrix($/;"	f
PrintGammaCode	src/graphlab/extern/bitmagic/bmdbg.h	/^unsigned PrintGammaCode(unsigned value)$/;"	f
PrintGap	src/graphlab/extern/bitmagic/bmdbg.h	/^void PrintGap(const bm::gap_word_t* gap_buf)$/;"	f
PrintSubDomainGraph	src/graphlab/extern/metis/libmetis/rename.h	369;"	d
PrintSubDomainGraph	src/graphlab/extern/metis/libmetis/subdomains.c	/^void PrintSubDomainGraph(GraphType *graph, idxtype nparts, idxtype *where)$/;"	f
PrintTMatrix	src/graphlab/extern/bitmagic/bmdbg.h	/^void PrintTMatrix(const TM& tmatrix, unsigned cols=0, bool binary = false)$/;"	f
PrintTimers	src/graphlab/extern/metis/libmetis/rename.h	379;"	d
PrintTimers	src/graphlab/extern/metis/libmetis/timing.c	/^void PrintTimers(CtrlType *ctrl)$/;"	f
Project2WayNodePartition	src/graphlab/extern/metis/libmetis/rename.h	357;"	d
Project2WayNodePartition	src/graphlab/extern/metis/libmetis/srefine.c	/^void Project2WayNodePartition(CtrlType *ctrl, GraphType *graph)$/;"	f
Project2WayPartition	src/graphlab/extern/metis/libmetis/refine.c	/^void Project2WayPartition(CtrlType *ctrl, GraphType *graph)$/;"	f
Project2WayPartition	src/graphlab/extern/metis/libmetis/rename.h	336;"	d
ProjectKWayPartition	src/graphlab/extern/metis/libmetis/kwayrefine.c	/^void ProjectKWayPartition(CtrlType *ctrl, GraphType *graph, idxtype nparts)$/;"	f
ProjectKWayPartition	src/graphlab/extern/metis/libmetis/rename.h	113;"	d
ProjectTmr	src/graphlab/extern/metis/libmetis/struct.h	/^         SepTmr, RefTmr, ProjectTmr, SplitTmr, AuxTmr1, AuxTmr2, AuxTmr3, AuxTmr4, AuxTmr5, AuxTmr6;$/;"	m	struct:controldef
ProjectVolKWayPartition	src/graphlab/extern/metis/libmetis/kwayvolrefine.c	/^void ProjectVolKWayPartition(CtrlType *ctrl, GraphType *graph, idxtype nparts)$/;"	f
ProjectVolKWayPartition	src/graphlab/extern/metis/libmetis/rename.h	137;"	d
PruneGraph	src/graphlab/extern/metis/libmetis/compress.c	/^void PruneGraph(CtrlType *ctrl, GraphType *graph, idxtype nvtxs, idxtype *xadj, $/;"	f
PruneGraph	src/graphlab/extern/metis/libmetis/rename.h	44;"	d
QSSWAP	src/graphlab/extern/metis/GKlib/dfkvkselect.c	14;"	d	file:
QUADNODALMETIS	src/graphlab/extern/metis/libmetis/mesh.c	/^void QUADNODALMETIS(idxtype nelmnts, idxtype nvtxs, idxtype *elmnts, idxtype *dxadj, idxtype *dadjncy)$/;"	f
QUOTEME	src/graphlab/engine/engine_options.hpp	58;"	d
QUOTEME	src/graphlab/engine/engine_options.hpp	60;"	d
QUOTEME_	src/graphlab/engine/engine_options.hpp	57;"	d
QUOTEME_	src/graphlab/engine/engine_options.hpp	61;"	d
RANDOM_JUMP_WEIGHT	apps/pagerank/pagerankapp.cpp	/^const size_t RANDOM_JUMP_WEIGHT = 2;$/;"	v
RANDOM_SUMRESIDUALS	apps/pagerank/pagerankapp.cpp	27;"	d	file:
RDLOCK	src/graphlab/distributed/lock_manager.hpp	/^  RDLOCK, WRLOCK, NOLOCK$/;"	e	enum:graphlab::lock_type
READ_CONSISTENCY	src/graphlab/scope/iscope.hpp	/^      READ_CONSISTENCY,        \/\/ read from self and adjacent structures$/;"	e	enum:graphlab::scope_range::scope_range_enum
REALLOC_ZERO_BYTES_FREES	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	34;"	d
REAL_NORM_KEY	apps/gabp/gabp.cpp	/^  REAL_NORM_KEY,$/;"	e	enum:shared_data_keys	file:
RED	src/graphlab/logger/logger.cpp	59;"	d	file:
RED_PROPORTION_KEY	apps/demo/concise_demo.cpp	/^  RED_PROPORTION_KEY,$/;"	e	enum:shared_data_keys	file:
RED_PROPORTION_KEY	apps/demo/demo.cpp	/^  RED_PROPORTION_KEY,$/;"	e	enum:shared_data_keys	file:
RELATIVE_NORM_KEY	apps/gabp/gabp.cpp	/^  RELATIVE_NORM_KEY,$/;"	e	enum:shared_data_keys	file:
RELEASE_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	415;"	d	file:
RELEASE_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	475;"	d	file:
RELEASE_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	538;"	d	file:
RELEASE_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	553;"	d	file:
RELEASE_MAGIC_INIT_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	602;"	d	file:
RELEASE_MAGIC_INIT_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	605;"	d	file:
RELEASE_MORECORE_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	594;"	d	file:
RELEASE_MORECORE_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	597;"	d	file:
REMOTECALLXS_ID	src/graphlab/distributed/dc_packet_headers.hpp	/^  REMOTECALL_ID, REMOTECALLX_ID, REMOTECALLXS_ID, REMOTECALL_CONTROL_ID$/;"	e	enum:graphlab::packet_ids
REMOTECALLX_ID	src/graphlab/distributed/dc_packet_headers.hpp	/^  REMOTECALL_ID, REMOTECALLX_ID, REMOTECALLXS_ID, REMOTECALL_CONTROL_ID$/;"	e	enum:graphlab::packet_ids
REMOTECALL_CONTROL_ID	src/graphlab/distributed/dc_packet_headers.hpp	/^  REMOTECALL_ID, REMOTECALLX_ID, REMOTECALLXS_ID, REMOTECALL_CONTROL_ID$/;"	e	enum:graphlab::packet_ids
REMOTECALL_ID	src/graphlab/distributed/dc_packet_headers.hpp	/^  REMOTECALL_ID, REMOTECALLX_ID, REMOTECALLXS_ID, REMOTECALL_CONTROL_ID$/;"	e	enum:graphlab::packet_ids
REPACKSTRUCT	src/graphlab/distributed/repack_dispatch.hpp	/^       REPACKSTRUCT(F fn, T0 i0, T1 i1, T2 i2, T3 i3, T4 i4) {$/;"	f	namespace:graphlab
REPACKSTRUCT	src/graphlab/distributed/repack_dispatch.hpp	/^       REPACKSTRUCT(F fn, T0 i0, T1 i1, T2 i2, T3 i3, T4 i4, T5 i5) {$/;"	f	namespace:graphlab
REPACKSTRUCT	src/graphlab/distributed/repack_dispatch.hpp	/^PACKSTRUCT2<F, F0, F1> REPACKSTRUCT(F fn, T0 i0, T1 i1) {$/;"	f	namespace:graphlab
REPACKSTRUCT	src/graphlab/distributed/repack_dispatch.hpp	/^inline PACKSTRUCT0<F> REPACKSTRUCT(F fn) {$/;"	f	namespace:graphlab
REPACKSTRUCT	src/graphlab/distributed/repack_dispatch.hpp	/^inline PACKSTRUCT1<F, F0> REPACKSTRUCT(F fn, T0 i0) {$/;"	f	namespace:graphlab
REPACKSTRUCT	src/graphlab/distributed/repack_dispatch.hpp	/^inline PACKSTRUCT3<F, F0, F1, F2> REPACKSTRUCT(F fn, T0 i0, T1 i1, T2 i2) {$/;"	f	namespace:graphlab
REPACKSTRUCT	src/graphlab/distributed/repack_dispatch.hpp	/^inline PACKSTRUCT4<F, F0, F1, F2, F3> REPACKSTRUCT(F fn, T0 i0, T1 i1, T2 i2, T3 i3) {$/;"	f	namespace:graphlab
REPACK_DISPATCH_HPP	src/graphlab/distributed/repack_dispatch.hpp	2;"	d
REQUIRE_ORDER	src/graphlab/extern/metis/GKlib/getopt.c	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon6	file:
RESET	src/graphlab/logger/logger.cpp	50;"	d	file:
RETURN_IN_ORDER	src/graphlab/extern/metis/GKlib/getopt.c	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon6	file:
REVERSE	src/graphlab/logger/logger.cpp	55;"	d	file:
RInfoType	src/graphlab/extern/metis/libmetis/struct.h	/^typedef struct rinfodef RInfoType;$/;"	t	typeref:struct:rinfodef
RM	apps/CMakeFiles/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	apps/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	apps/demo/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	apps/factor_graph_inference/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	apps/gabp/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	apps/image_denoise/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	apps/pagerank/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	apps/shooting/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	apps/svm/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/graphlab/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/graphlab/engine/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/graphlab/extern/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/graphlab/extern/bitmagic/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/graphlab/extern/metis/GKlib/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/graphlab/extern/metis/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/graphlab/extern/metis/libmetis/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/graphlab/graph/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/graphlab/logger/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/graphlab/monitoring/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/graphlab/parallel/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/graphlab/schedulers/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/graphlab/schedulers/set_scheduler/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/graphlab/scope/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/graphlab/serialization/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/graphlab/shared_data/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/graphlab/tasks/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/graphlab/util/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	src/graphlab/util/generics/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
ROUND_ROBIN_KEY	apps/gabp/gabp.cpp	/^  ROUND_ROBIN_KEY,$/;"	e	enum:shared_data_keys	file:
RR_SCHEDULER_HPP	src/graphlab/schedulers/round_robin_scheduler.hpp	6;"	d
RTCHECK	src/graphlab/extern/metis/GKlib/dlmalloc.c	1560;"	d	file:
RTCHECK	src/graphlab/extern/metis/GKlib/dlmalloc.c	1562;"	d	file:
RTCHECK	src/graphlab/extern/metis/GKlib/dlmalloc.c	1565;"	d	file:
RTYPE_FM	src/graphlab/extern/metis/metis.h	260;"	d
RTYPE_KWAYGREEDY	src/graphlab/extern/metis/metis.h	267;"	d
RTYPE_KWAYRANDOM	src/graphlab/extern/metis/metis.h	266;"	d
RTYPE_KWAYRANDOM_MCONN	src/graphlab/extern/metis/metis.h	268;"	d
RTYPE_SEP1SIDED	src/graphlab/extern/metis/metis.h	272;"	d
RTYPE_SEP2SIDED	src/graphlab/extern/metis/metis.h	271;"	d
RType	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype RType;			\/* The type of refinement *\/$/;"	m	struct:controldef
RandomBisection	src/graphlab/extern/metis/libmetis/initpart.c	/^void RandomBisection(CtrlType *ctrl, GraphType *graph, idxtype *tpwgts, float ubfactor)$/;"	f
RandomBisection	src/graphlab/extern/metis/libmetis/rename.h	92;"	d
RandomInRange	src/graphlab/extern/metis/GKlib/gk_macros.h	29;"	d
RandomPermute	src/graphlab/extern/metis/libmetis/rename.h	392;"	d
RandomPermute	src/graphlab/extern/metis/libmetis/util.c	/^void RandomPermute(size_t n, idxtype *p, idxtype flag)$/;"	f
Random_KWayEdgeRefine	src/graphlab/extern/metis/libmetis/kwayfm.c	/^void Random_KWayEdgeRefine(CtrlType *ctrl, GraphType *graph, idxtype nparts, float *tpwgts, float ubfactor, idxtype npasses, idxtype ffactor)$/;"	f
Random_KWayEdgeRefine	src/graphlab/extern/metis/libmetis/rename.h	104;"	d
Random_KWayEdgeRefineMConn	src/graphlab/extern/metis/libmetis/rename.h	367;"	d
Random_KWayEdgeRefineMConn	src/graphlab/extern/metis/libmetis/subdomains.c	/^void Random_KWayEdgeRefineMConn(CtrlType *ctrl, GraphType *graph, idxtype nparts, float *tpwgts, float ubfactor, idxtype npasses, idxtype ffactor)$/;"	f
Random_KWayVolRefine	src/graphlab/extern/metis/libmetis/kwayvolfm.c	/^void Random_KWayVolRefine(CtrlType *ctrl, GraphType *graph, idxtype nparts, float *tpwgts, $/;"	f
Random_KWayVolRefine	src/graphlab/extern/metis/libmetis/rename.h	120;"	d
Random_KWayVolRefineMConn	src/graphlab/extern/metis/libmetis/kwayvolfm.c	/^void Random_KWayVolRefineMConn(CtrlType *ctrl, GraphType *graph, idxtype nparts, float *tpwgts, $/;"	f
Random_KWayVolRefineMConn	src/graphlab/extern/metis/libmetis/rename.h	121;"	d
RandomizeGraph	src/graphlab/extern/metis/libmetis/graph.c	/^void RandomizeGraph(GraphType *graph)$/;"	f
RandomizeGraph	src/graphlab/extern/metis/libmetis/rename.h	80;"	d
ReAdjustMemory	src/graphlab/extern/metis/libmetis/ccgraph.c	/^void ReAdjustMemory(GraphType *graph, GraphType *cgraph, idxtype dovsize) $/;"	f
ReAdjustMemory	src/graphlab/extern/metis/libmetis/rename.h	35;"	d
RefTmr	src/graphlab/extern/metis/libmetis/struct.h	/^         SepTmr, RefTmr, ProjectTmr, SplitTmr, AuxTmr1, AuxTmr2, AuxTmr3, AuxTmr4, AuxTmr5, AuxTmr6;$/;"	m	struct:controldef
Refine2Way	src/graphlab/extern/metis/libmetis/refine.c	/^void Refine2Way(CtrlType *ctrl, GraphType *orggraph, GraphType *graph, idxtype *tpwgts, float ubfactor)$/;"	f
Refine2Way	src/graphlab/extern/metis/libmetis/rename.h	333;"	d
Refine2WayNode	src/graphlab/extern/metis/libmetis/rename.h	354;"	d
Refine2WayNode	src/graphlab/extern/metis/libmetis/srefine.c	/^void Refine2WayNode(CtrlType *ctrl, GraphType *orggraph, GraphType *graph, float ubfactor)$/;"	f
RefineKWay	src/graphlab/extern/metis/libmetis/kwayrefine.c	/^void RefineKWay(CtrlType *ctrl, GraphType *orggraph, GraphType *graph, idxtype nparts, float *tpwgts, float ubfactor)$/;"	f
RefineKWay	src/graphlab/extern/metis/libmetis/rename.h	110;"	d
RefineKWayRefinement	src/graphlab/extern/metis/libmetis/kwayrefine.c	/^void RefineKWayRefinement(CtrlType *ctrl, GraphType *orggraph, GraphType *graph, idxtype nparts, float *tpwgts, float ubfactor)$/;"	f
RefineTopLevelSeparators	src/graphlab/extern/metis/libmetis/kfmetis.c	/^void RefineTopLevelSeparators(CtrlType *ctrl, GraphType *graph, idxtype nparts,  $/;"	f
RefineVolKWay	src/graphlab/extern/metis/libmetis/kwayvolrefine.c	/^void RefineVolKWay(CtrlType *ctrl, GraphType *orggraph, GraphType *graph, idxtype nparts, $/;"	f
RefineVolKWay	src/graphlab/extern/metis/libmetis/rename.h	133;"	d
SC	src/graphlab/extern/metis/libmetis/mincover.c	22;"	d	file:
SCHEDULING_FUNCTION	src/graphlab/schedulers/ischeduler.hpp	/^      SCHEDULING_FUNCTION,$/;"	e	enum:graphlab::scheduler_options::options_enum
SCNIDX	src/graphlab/extern/metis/metis.h	90;"	d
SCNIDX	src/graphlab/extern/metis/metis.h	95;"	d
SERDISPATCH0	src/graphlab/distributed/serialize_dispatch.hpp	/^void SERDISPATCH0(distributed_control& dc, size_t source, $/;"	f	namespace:graphlab
SERDISPATCH1	src/graphlab/distributed/serialize_dispatch.hpp	/^void SERDISPATCH1(distributed_control& dc, size_t source, $/;"	f	namespace:graphlab
SERDISPATCH2	src/graphlab/distributed/serialize_dispatch.hpp	/^void SERDISPATCH2(distributed_control& dc, size_t source, $/;"	f	namespace:graphlab
SERDISPATCH3	src/graphlab/distributed/serialize_dispatch.hpp	/^void SERDISPATCH3(distributed_control& dc, size_t source, $/;"	f	namespace:graphlab
SERDISPATCH4	src/graphlab/distributed/serialize_dispatch.hpp	/^void SERDISPATCH4(distributed_control& dc, size_t source, $/;"	f	namespace:graphlab
SERDISPATCH5	src/graphlab/distributed/serialize_dispatch.hpp	/^void SERDISPATCH5(distributed_control& dc, size_t source, $/;"	f	namespace:graphlab
SERDISPATCH6	src/graphlab/distributed/serialize_dispatch.hpp	/^void SERDISPATCH6(distributed_control& dc, size_t source, $/;"	f	namespace:graphlab
SERIALIZE_DISPATCH_HPP	src/graphlab/distributed/serialize_dispatch.hpp	2;"	d
SERPACKSTRUCT0	src/graphlab/distributed/serialize_dispatch.hpp	/^struct SERPACKSTRUCT0{ $/;"	s	namespace:graphlab
SERPACKSTRUCT1	src/graphlab/distributed/serialize_dispatch.hpp	/^struct SERPACKSTRUCT1{ $/;"	s	namespace:graphlab
SERPACKSTRUCT2	src/graphlab/distributed/serialize_dispatch.hpp	/^struct SERPACKSTRUCT2{ $/;"	s	namespace:graphlab
SERPACKSTRUCT3	src/graphlab/distributed/serialize_dispatch.hpp	/^struct SERPACKSTRUCT3{ $/;"	s	namespace:graphlab
SERPACKSTRUCT4	src/graphlab/distributed/serialize_dispatch.hpp	/^struct SERPACKSTRUCT4{ $/;"	s	namespace:graphlab
SERPACKSTRUCT5	src/graphlab/distributed/serialize_dispatch.hpp	/^struct SERPACKSTRUCT5{ $/;"	s	namespace:graphlab
SERPACKSTRUCT6	src/graphlab/distributed/serialize_dispatch.hpp	/^struct SERPACKSTRUCT6{ $/;"	s	namespace:graphlab
SERREPACKSTRUCT	src/graphlab/distributed/serialize_dispatch.hpp	/^inline void SERREPACKSTRUCT(F fn, oarchive &arc, T0 i0, T1 i1, T2 i2) {$/;"	f	namespace:graphlab
SERREPACKSTRUCT	src/graphlab/distributed/serialize_dispatch.hpp	/^inline void SERREPACKSTRUCT(F fn, oarchive &arc, T0 i0, T1 i1, T2 i2, T3 i3) {$/;"	f	namespace:graphlab
SERREPACKSTRUCT	src/graphlab/distributed/serialize_dispatch.hpp	/^inline void SERREPACKSTRUCT(F fn, oarchive &arc, T0 i0, T1 i1, T2 i2, T3 i3, T4 i4) {$/;"	f	namespace:graphlab
SERREPACKSTRUCT	src/graphlab/distributed/serialize_dispatch.hpp	/^inline void SERREPACKSTRUCT(F fn, oarchive &arc, T0 i0, T1 i1, T2 i2, T3 i3, T4 i4, T5 i5) {$/;"	f	namespace:graphlab
SERREPACKSTRUCT	src/graphlab/distributed/serialize_dispatch.hpp	/^void SERREPACKSTRUCT(F fn, oarchive &arc) {$/;"	f	namespace:graphlab
SERREPACKSTRUCT	src/graphlab/distributed/serialize_dispatch.hpp	/^void SERREPACKSTRUCT(F fn, oarchive &arc, T0 i0) {$/;"	f	namespace:graphlab
SERREPACKSTRUCT	src/graphlab/distributed/serialize_dispatch.hpp	/^void SERREPACKSTRUCT(F fn, oarchive &arc, T0 i0, T1 i1) {$/;"	f	namespace:graphlab
SER_GET_STRUCT_TYPE0	src/graphlab/distributed/serialize_dispatch.hpp	/^class SER_GET_STRUCT_TYPE0 { public: typedef SERPACKSTRUCT0<F> struct_type; };$/;"	c	namespace:graphlab
SER_GET_STRUCT_TYPE1	src/graphlab/distributed/serialize_dispatch.hpp	/^class SER_GET_STRUCT_TYPE1 { public: typedef SERPACKSTRUCT1<F, F0> struct_type; };$/;"	c	namespace:graphlab
SER_GET_STRUCT_TYPE2	src/graphlab/distributed/serialize_dispatch.hpp	/^class SER_GET_STRUCT_TYPE2 { public: typedef SERPACKSTRUCT2<F, F0, F1> struct_type; };$/;"	c	namespace:graphlab
SER_GET_STRUCT_TYPE3	src/graphlab/distributed/serialize_dispatch.hpp	/^class SER_GET_STRUCT_TYPE3 { public: typedef SERPACKSTRUCT3<F, F0, F1, F2> struct_type; };$/;"	c	namespace:graphlab
SER_GET_STRUCT_TYPE4	src/graphlab/distributed/serialize_dispatch.hpp	/^class SER_GET_STRUCT_TYPE4 { public: typedef SERPACKSTRUCT4<F, F0, F1, F2, F3> struct_type; };$/;"	c	namespace:graphlab
SER_GET_STRUCT_TYPE5	src/graphlab/distributed/serialize_dispatch.hpp	/^class SER_GET_STRUCT_TYPE5 { public: typedef SERPACKSTRUCT5<F, F0, F1, F2, F3, F4> struct_type; };$/;"	c	namespace:graphlab
SER_GET_STRUCT_TYPE6	src/graphlab/distributed/serialize_dispatch.hpp	/^class SER_GET_STRUCT_TYPE6 { public: typedef SERPACKSTRUCT6<F, F0, F1, F2, F3, F4, F5> struct_type; };$/;"	c	namespace:graphlab
SER_NEXT_GRP	src/graphlab/extern/bitmagic/bmserial.h	105;"	d
SER_NEXT_GRP	src/graphlab/extern/bitmagic/bmundef.h	28;"	d
SET_GENERIC_TYPEDEFS_HPP	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	2;"	d
SFINAE	src/graphlab/serialization/iarchive.hpp	/^	  template<typename U, void (U::*)(iarchive&)> struct SFINAE {};$/;"	s	struct:graphlab::iarchive_detail::has_load_method
SFINAE	src/graphlab/serialization/oarchive.hpp	/^	  template<typename U, void (U::*)(oarchive&) const> struct SFINAE {};$/;"	s	struct:graphlab::oarchive_detail::has_save_method
SHELL	apps/CMakeFiles/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	apps/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	apps/demo/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	apps/factor_graph_inference/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	apps/gabp/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	apps/image_denoise/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	apps/pagerank/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	apps/shooting/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	apps/svm/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/graphlab/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/graphlab/engine/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/graphlab/extern/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/graphlab/extern/bitmagic/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/graphlab/extern/metis/GKlib/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/graphlab/extern/metis/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/graphlab/extern/metis/libmetis/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/graphlab/graph/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/graphlab/logger/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/graphlab/monitoring/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/graphlab/parallel/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/graphlab/schedulers/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/graphlab/schedulers/set_scheduler/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/graphlab/scope/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/graphlab/serialization/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/graphlab/shared_data/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/graphlab/tasks/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/graphlab/util/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/graphlab/util/generics/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHIFTCSR	src/graphlab/extern/metis/GKlib/gk_macros.h	82;"	d
SIGERR	src/graphlab/extern/metis/GKlib/gk_defs.h	33;"	d
SIGMEM	src/graphlab/extern/metis/GKlib/gk_defs.h	32;"	d
SIMULATED	src/graphlab/engine/asynchronous_engine.hpp	/^    enum execution_type {THREADED, SIMULATED};$/;"	e	enum:graphlab::asynchronous_engine::execution_type
SIX_SIZE_T_SIZES	src/graphlab/extern/metis/GKlib/dlmalloc.c	199;"	d	file:
SIZE_T_BITSIZE	src/graphlab/extern/metis/GKlib/dlmalloc.c	189;"	d	file:
SIZE_T_FOUR	src/graphlab/extern/metis/GKlib/dlmalloc.c	196;"	d	file:
SIZE_T_ONE	src/graphlab/extern/metis/GKlib/dlmalloc.c	194;"	d	file:
SIZE_T_SIZE	src/graphlab/extern/metis/GKlib/dlmalloc.c	188;"	d	file:
SIZE_T_TWO	src/graphlab/extern/metis/GKlib/dlmalloc.c	195;"	d	file:
SIZE_T_ZERO	src/graphlab/extern/metis/GKlib/dlmalloc.c	193;"	d	file:
SMALLBIN_SHIFT	src/graphlab/extern/metis/GKlib/dlmalloc.c	1131;"	d	file:
SMALLBIN_WIDTH	src/graphlab/extern/metis/GKlib/dlmalloc.c	1132;"	d	file:
SMALLNIPARTS	src/graphlab/extern/metis/libmetis/defs.h	105;"	d
SPINLOCK_SUPPORTED	src/graphlab/parallel/pthread_tools.hpp	457;"	d
SPINLOCK_SUPPORTED	src/graphlab/parallel/pthread_tools.hpp	461;"	d
SPINS_PER_YIELD	src/graphlab/extern/metis/GKlib/dlmalloc.c	360;"	d	file:
SPINS_PER_YIELD	src/graphlab/extern/metis/GKlib/dlmalloc.c	434;"	d	file:
SPLASH_SIZE	src/graphlab/schedulers/ischeduler.hpp	/^      SPLASH_SIZE,$/;"	e	enum:graphlab::scheduler_options::options_enum
SR	src/graphlab/extern/metis/libmetis/mincover.c	25;"	d	file:
START_VERTEX	src/graphlab/schedulers/ischeduler.hpp	/^      START_VERTEX,$/;"	e	enum:graphlab::scheduler_options::options_enum
STEPSIZE	apps/svm/svm.cpp	/^const size_t STEPSIZE = 3;      \/\/ double. current stepsize$/;"	v
SUFFIXES	apps/CMakeFiles/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	apps/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	apps/demo/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	apps/factor_graph_inference/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	apps/gabp/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	apps/image_denoise/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	apps/pagerank/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	apps/shooting/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	apps/svm/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/graphlab/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/graphlab/engine/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/graphlab/extern/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/graphlab/extern/bitmagic/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/graphlab/extern/metis/GKlib/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/graphlab/extern/metis/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/graphlab/extern/metis/libmetis/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/graphlab/graph/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/graphlab/logger/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/graphlab/monitoring/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/graphlab/parallel/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/graphlab/schedulers/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/graphlab/schedulers/set_scheduler/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/graphlab/scope/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/graphlab/serialization/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/graphlab/shared_data/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/graphlab/tasks/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/graphlab/util/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	src/graphlab/util/generics/Makefile	/^SUFFIXES =$/;"	m
SUMRESIDUALS	apps/pagerank/pagerankapp.cpp	28;"	d	file:
SUPPORT_NULL_VARIANCE_KEY	apps/gabp/gabp.cpp	/^  SUPPORT_NULL_VARIANCE_KEY,$/;"	e	enum:shared_data_keys	file:
SWAP	src/graphlab/extern/metis/GKlib/gk_macros.h	19;"	d
SYNCHRONIZED_UNORDERED_MAP	src/graphlab/util/synchronized_unordered_map.hpp	2;"	d
SYNCHRONOUS_SCOPE_FACTORY	src/graphlab/scope/synchronous_scope_factory.hpp	2;"	d
SaveBVector	src/graphlab/extern/bitmagic/bmdbg.h	/^void SaveBVector(const char* fname, const TBV& bvector)$/;"	f
SaveBlob	src/graphlab/extern/bitmagic/bmdbg.h	/^void SaveBlob(const char* name_prefix, unsigned num, const char* ext,$/;"	f
SelectQueue	src/graphlab/extern/metis/libmetis/mfm.c	/^void SelectQueue(idxtype ncon, float *npwgts, float *tpwgts, idxtype *from, idxtype *cnum, PQueueType queues[MAXNCON][2])$/;"	f
SelectQueue	src/graphlab/extern/metis/libmetis/rename.h	188;"	d
SelectQueue2	src/graphlab/extern/metis/libmetis/mfm2.c	/^void SelectQueue2(idxtype ncon, float *npwgts, float *tpwgts, idxtype *from, idxtype *cnum, $/;"	f
SelectQueue2	src/graphlab/extern/metis/libmetis/rename.h	196;"	d
SelectQueue3	src/graphlab/extern/metis/libmetis/mbalance2.c	/^void SelectQueue3(idxtype ncon, float *npwgts, float *tpwgts, idxtype *from, idxtype *cnum, $/;"	f
SelectQueue3	src/graphlab/extern/metis/libmetis/rename.h	157;"	d
SelectQueueOneWay	src/graphlab/extern/metis/libmetis/minitpart.c	/^idxtype SelectQueueOneWay(idxtype ncon, float *npwgts, float *tpwgts, idxtype from, PQueueType queues[MAXNCON][2])$/;"	f
SelectQueueOneWay2	src/graphlab/extern/metis/libmetis/minitpart2.c	/^idxtype SelectQueueOneWay2(idxtype ncon, float *pto, PQueueType queues[MAXNCON][2], float *ubvec)$/;"	f
SelectQueueOneWay2	src/graphlab/extern/metis/libmetis/rename.h	221;"	d
SelectQueueoneWay	src/graphlab/extern/metis/libmetis/rename.h	213;"	d
SepTmr	src/graphlab/extern/metis/libmetis/struct.h	/^         SepTmr, RefTmr, ProjectTmr, SplitTmr, AuxTmr1, AuxTmr2, AuxTmr3, AuxTmr4, AuxTmr5, AuxTmr6;$/;"	m	struct:controldef
SetUpCoarseGraph	src/graphlab/extern/metis/libmetis/ccgraph.c	/^GraphType *SetUpCoarseGraph(GraphType *graph, idxtype cnvtxs, idxtype dovsize)$/;"	f
SetUpCoarseGraph	src/graphlab/extern/metis/libmetis/rename.h	34;"	d
SetUpGraph	src/graphlab/extern/metis/libmetis/graph.c	/^void SetUpGraph(GraphType *graph, idxtype OpType, idxtype nvtxs, idxtype ncon,$/;"	f
SetUpGraph	src/graphlab/extern/metis/libmetis/rename.h	77;"	d
SetUpGraph2	src/graphlab/extern/metis/libmetis/graph.c	/^void SetUpGraph2(GraphType *graph, idxtype nvtxs, idxtype ncon, idxtype *xadj, $/;"	f
SetUpGraph2	src/graphlab/extern/metis/libmetis/rename.h	78;"	d
SetUpSplitGraph	src/graphlab/extern/metis/libmetis/pmetis.c	/^void SetUpSplitGraph(GraphType *graph, GraphType *sgraph, idxtype snvtxs, idxtype snedges)$/;"	f
SetUpSplitGraph	src/graphlab/extern/metis/libmetis/rename.h	316;"	d
SplitGraphOrder	src/graphlab/extern/metis/libmetis/ometis.c	/^void SplitGraphOrder(CtrlType *ctrl, GraphType *graph, GraphType *lgraph, GraphType *rgraph)$/;"	f
SplitGraphOrder	src/graphlab/extern/metis/libmetis/rename.h	303;"	d
SplitGraphOrderCC	src/graphlab/extern/metis/libmetis/ometis.c	/^idxtype SplitGraphOrderCC(CtrlType *ctrl, GraphType *graph, GraphType *sgraphs, idxtype ncmps, idxtype *cptr, idxtype *cind)$/;"	f
SplitGraphOrderCC	src/graphlab/extern/metis/libmetis/rename.h	305;"	d
SplitGraphPart	src/graphlab/extern/metis/libmetis/pmetis.c	/^void SplitGraphPart(CtrlType *ctrl, GraphType *graph, GraphType *lgraph, GraphType *rgraph)$/;"	f
SplitGraphPart	src/graphlab/extern/metis/libmetis/rename.h	315;"	d
SplitTmr	src/graphlab/extern/metis/libmetis/struct.h	/^         SepTmr, RefTmr, ProjectTmr, SplitTmr, AuxTmr1, AuxTmr2, AuxTmr3, AuxTmr4, AuxTmr5, AuxTmr6;$/;"	m	struct:controldef
TARGET_PRECISION	apps/pagerank/pagerankapp.cpp	25;"	d	file:
TASK_SCHEDULING_TYPE	apps/pagerank/pagerankapp.cpp	/^int TASK_SCHEDULING_TYPE = RANDOM_SUMRESIDUALS;$/;"	v
TETDUALMETIS	src/graphlab/extern/metis/libmetis/rename.h	179;"	d
TETNODALMETIS	src/graphlab/extern/metis/libmetis/mesh.c	/^void TETNODALMETIS(idxtype nelmnts, idxtype nvtxs, idxtype *elmnts, idxtype *dxadj, idxtype *dadjncy)$/;"	f
TETNODALMETIS	src/graphlab/extern/metis/libmetis/rename.h	182;"	d
THREADED	src/graphlab/engine/asynchronous_engine.hpp	/^    enum execution_type {THREADED, SIMULATED};$/;"	e	enum:graphlab::asynchronous_engine::execution_type
THRESHOLD_KEY	apps/gabp/gabp.cpp	/^  THRESHOLD_KEY,$/;"	e	enum:shared_data_keys	file:
TOP_FOOT_SIZE	src/graphlab/extern/metis/GKlib/dlmalloc.c	1273;"	d	file:
TOTALGRADIENT	apps/svm/svm.cpp	/^const size_t TOTALGRADIENT = 2; \/\/ double. L1 gradient$/;"	v
TREEBIN_SHIFT	src/graphlab/extern/metis/GKlib/dlmalloc.c	1133;"	d	file:
TRIDUALMETIS	src/graphlab/extern/metis/libmetis/rename.h	178;"	d
TRINODALMETIS	src/graphlab/extern/metis/libmetis/mesh.c	/^void TRINODALMETIS(idxtype nelmnts, idxtype nvtxs, idxtype *elmnts, idxtype *dxadj, idxtype *dadjncy)$/;"	f
TRINODALMETIS	src/graphlab/extern/metis/libmetis/rename.h	181;"	d
TRY_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	416;"	d	file:
TRY_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	476;"	d	file:
TRY_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	539;"	d	file:
TRY_LOCK	src/graphlab/extern/metis/GKlib/dlmalloc.c	554;"	d	file:
TWO_SIZE_T_SIZES	src/graphlab/extern/metis/GKlib/dlmalloc.c	197;"	d	file:
TotalTmr	src/graphlab/extern/metis/libmetis/struct.h	/^  double TotalTmr, InitPartTmr, MatchTmr, ContractTmr, CoarsenTmr, UncoarsenTmr, $/;"	m	struct:controldef
UNBALANCE_FRACTION	src/graphlab/extern/metis/libmetis/defs.h	109;"	d
UNDERLINE	src/graphlab/logger/logger.cpp	53;"	d	file:
UNMATCHED	src/graphlab/extern/metis/libmetis/defs.h	97;"	d
UNUSED_SCHEDULER_CALLBACK_HPP	src/graphlab/schedulers/support/unused_scheduler_callback.hpp	2;"	d
UPDATE_FUNCTION	src/graphlab/schedulers/ischeduler.hpp	/^      UPDATE_FUNCTION,$/;"	e	enum:graphlab::scheduler_options::options_enum
USAGE_ERROR_ACTION	src/graphlab/extern/metis/GKlib/dlmalloc.c	1321;"	d	file:
USAGE_ERROR_ACTION	src/graphlab/extern/metis/GKlib/dlmalloc.c	1330;"	d	file:
USE_BUILTIN_FFS	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	641;"	d
USE_DEFAULT	src/graphlab/scope/iscope.hpp	/^      USE_DEFAULT$/;"	e	enum:graphlab::scope_range::scope_range_enum
USE_DEV_RANDOM	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	644;"	d
USE_DL_PREFIX	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	35;"	d
USE_LOCKS	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	32;"	d
USE_LOCKS	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	567;"	d
USE_LOCK_BIT	src/graphlab/extern/metis/GKlib/dlmalloc.c	586;"	d	file:
USE_LOCK_BIT	src/graphlab/extern/metis/GKlib/dlmalloc.c	588;"	d	file:
USE_MMAP_BIT	src/graphlab/extern/metis/GKlib/dlmalloc.c	228;"	d	file:
USE_MMAP_BIT	src/graphlab/extern/metis/GKlib/dlmalloc.c	235;"	d	file:
USE_NONCONTIGUOUS_BIT	src/graphlab/extern/metis/GKlib/dlmalloc.c	313;"	d	file:
USE_SPIN_LOCKS	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	571;"	d
USE_SPIN_LOCKS	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	573;"	d
UncoarsenTmr	src/graphlab/extern/metis/libmetis/struct.h	/^  double TotalTmr, InitPartTmr, MatchTmr, ContractTmr, CoarsenTmr, UncoarsenTmr, $/;"	m	struct:controldef
VC	src/graphlab/extern/metis/libmetis/mincover.c	21;"	d	file:
VECT_ANDNOT_ARR_2_MASK	src/graphlab/extern/bitmagic/bmsse2.h	204;"	d
VECT_ANDNOT_ARR_2_MASK	src/graphlab/extern/bitmagic/bmsse4.h	190;"	d
VECT_ANDNOT_ARR_2_MASK	src/graphlab/extern/bitmagic/bmundef.h	43;"	d
VECT_AND_ARR	src/graphlab/extern/bitmagic/bmsse2.h	225;"	d
VECT_AND_ARR	src/graphlab/extern/bitmagic/bmsse4.h	211;"	d
VECT_AND_ARR	src/graphlab/extern/bitmagic/bmundef.h	45;"	d
VECT_BITCOUNT	src/graphlab/extern/bitmagic/bmsse2.h	207;"	d
VECT_BITCOUNT	src/graphlab/extern/bitmagic/bmsse4.h	193;"	d
VECT_BITCOUNT_AND	src/graphlab/extern/bitmagic/bmsse2.h	210;"	d
VECT_BITCOUNT_AND	src/graphlab/extern/bitmagic/bmsse4.h	196;"	d
VECT_BITCOUNT_OR	src/graphlab/extern/bitmagic/bmsse2.h	213;"	d
VECT_BITCOUNT_OR	src/graphlab/extern/bitmagic/bmsse4.h	199;"	d
VECT_BITCOUNT_SUB	src/graphlab/extern/bitmagic/bmsse2.h	219;"	d
VECT_BITCOUNT_SUB	src/graphlab/extern/bitmagic/bmsse4.h	205;"	d
VECT_BITCOUNT_XOR	src/graphlab/extern/bitmagic/bmsse2.h	216;"	d
VECT_BITCOUNT_XOR	src/graphlab/extern/bitmagic/bmsse4.h	202;"	d
VECT_COPY_BLOCK	src/graphlab/extern/bitmagic/bmsse2.h	237;"	d
VECT_COPY_BLOCK	src/graphlab/extern/bitmagic/bmsse4.h	223;"	d
VECT_COPY_BLOCK	src/graphlab/extern/bitmagic/bmundef.h	50;"	d
VECT_INVERT_ARR	src/graphlab/extern/bitmagic/bmsse2.h	222;"	d
VECT_INVERT_ARR	src/graphlab/extern/bitmagic/bmsse4.h	208;"	d
VECT_INVERT_ARR	src/graphlab/extern/bitmagic/bmundef.h	44;"	d
VECT_OR_ARR	src/graphlab/extern/bitmagic/bmsse2.h	228;"	d
VECT_OR_ARR	src/graphlab/extern/bitmagic/bmsse4.h	214;"	d
VECT_OR_ARR	src/graphlab/extern/bitmagic/bmundef.h	46;"	d
VECT_SET_BLOCK	src/graphlab/extern/bitmagic/bmsse2.h	240;"	d
VECT_SET_BLOCK	src/graphlab/extern/bitmagic/bmsse4.h	226;"	d
VECT_SET_BLOCK	src/graphlab/extern/bitmagic/bmundef.h	51;"	d
VECT_SUB_ARR	src/graphlab/extern/bitmagic/bmsse2.h	231;"	d
VECT_SUB_ARR	src/graphlab/extern/bitmagic/bmsse4.h	217;"	d
VECT_SUB_ARR	src/graphlab/extern/bitmagic/bmundef.h	47;"	d
VECT_XOR_ARR	src/graphlab/extern/bitmagic/bmsse2.h	234;"	d
VECT_XOR_ARR	src/graphlab/extern/bitmagic/bmsse4.h	220;"	d
VECT_XOR_ARR	src/graphlab/extern/bitmagic/bmundef.h	48;"	d
VECT_XOR_ARR_2_MASK	src/graphlab/extern/bitmagic/bmsse2.h	201;"	d
VECT_XOR_ARR_2_MASK	src/graphlab/extern/bitmagic/bmsse4.h	187;"	d
VECT_XOR_ARR_2_MASK	src/graphlab/extern/bitmagic/bmundef.h	42;"	d
VEDegreeType	src/graphlab/extern/metis/libmetis/struct.h	/^typedef struct vedegreedef VEDegreeType;$/;"	t	typeref:struct:vedegreedef
VERTEX_CONSISTENCY	src/graphlab/scope/iscope.hpp	/^      VERTEX_CONSISTENCY,      \/\/ write to self. no lock on adjacent$/;"	e	enum:graphlab::scope_range::scope_range_enum
VERTEX_READ_CONSISTENCY	src/graphlab/scope/iscope.hpp	/^      VERTEX_READ_CONSISTENCY, \/\/ read only from self$/;"	e	enum:graphlab::scope_range::scope_range_enum
VERTEX_SET_HPP	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	2;"	d
VERTEX_TASK_SET_HPP	src/graphlab/schedulers/support/vertex_task_set.hpp	6;"	d
VID_TO_INTERNAL	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    size_t VID_TO_INTERNAL(size_t intid) { $/;"	f	class:graphlab::distributed_phased_sweep_scheduler
VID_TO_INTERNAL	src/graphlab/schedulers/sweep_scheduler.hpp	/^    size_t VID_TO_INTERNAL(size_t intid) { $/;"	f	class:graphlab::sweep_scheduler
VPInfoType	src/graphlab/extern/metis/libmetis/struct.h	/^typedef struct vpwgtdef VPInfoType;$/;"	t	typeref:struct:vpwgtdef
VR	src/graphlab/extern/metis/libmetis/mincover.c	24;"	d	file:
VRInfoType	src/graphlab/extern/metis/libmetis/struct.h	/^typedef struct vrinfodef VRInfoType;$/;"	t	typeref:struct:vrinfodef
VolSetUpGraph	src/graphlab/extern/metis/libmetis/graph.c	/^void VolSetUpGraph(GraphType *graph, idxtype OpType, idxtype nvtxs, idxtype ncon, idxtype *xadj, $/;"	f
VolSetUpGraph	src/graphlab/extern/metis/libmetis/rename.h	79;"	d
WAITING	src/graphlab/schedulers/ischeduler.hpp	/^      WAITING,      \/\/\/ The get_next_tasks function did not return a new$/;"	e	enum:graphlab::sched_status::status_enum
WBOUND_KEY	apps/shooting/shooting.cpp	/^                     WBOUND_KEY,$/;"	e	enum:sdt_const_keys	file:
WCHANGE_KEY	apps/shooting/shooting.cpp	/^enum std_sync_keys { WCHANGE_KEY };$/;"	e	enum:std_sync_keys	file:
WHITE	src/graphlab/logger/logger.cpp	65;"	d	file:
WIN32	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	503;"	d
WIN32_LEAN_AND_MEAN	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	507;"	d
WRITE_TO_STDERR	src/graphlab/logger/assertions.hpp	57;"	d
WRLOCK	src/graphlab/distributed/lock_manager.hpp	/^  RDLOCK, WRLOCK, NOLOCK$/;"	e	enum:graphlab::lock_type
WorkSpaceType	src/graphlab/extern/metis/libmetis/struct.h	/^typedef struct workspacedef WorkSpaceType;$/;"	t	typeref:struct:workspacedef
WspaceAvail	src/graphlab/extern/metis/libmetis/memory.c	/^idxtype WspaceAvail(CtrlType *ctrl)$/;"	f
WspaceAvail	src/graphlab/extern/metis/libmetis/rename.h	167;"	d
XOR	src/graphlab/extern/metis/libmetis/macros.h	21;"	d
YELLOW	src/graphlab/logger/logger.cpp	61;"	d	file:
_ASSERTIONS_H_	src/graphlab/logger/assertions.hpp	36;"	d
_GKLIB_H_	src/graphlab/extern/metis/GKlib/GKlib.h	11;"	d
_GKQSORT_MAX_THRESH	src/graphlab/extern/metis/GKlib/gk_sort.h	110;"	d
_GKQSORT_POP	src/graphlab/extern/metis/GKlib/gk_sort.h	115;"	d
_GKQSORT_PUSH	src/graphlab/extern/metis/GKlib/gk_sort.h	114;"	d
_GKQSORT_STACK_NOT_EMPTY	src/graphlab/extern/metis/GKlib/gk_sort.h	116;"	d
_GKQSORT_STACK_SIZE	src/graphlab/extern/metis/GKlib/gk_sort.h	113;"	d
_GKQSORT_SWAP	src/graphlab/extern/metis/GKlib/gk_sort.h	106;"	d
_GK_ARCH_H_	src/graphlab/extern/metis/GKlib/gk_arch.h	11;"	d
_GK_BLAS_H_	src/graphlab/extern/metis/GKlib/gk_blas.h	11;"	d
_GK_DEFS_H_	src/graphlab/extern/metis/GKlib/gk_defs.h	11;"	d
_GK_ERROR_C_	src/graphlab/extern/metis/GKlib/error.c	13;"	d	file:
_GK_EXTERNS_H_	src/graphlab/extern/metis/GKlib/gk_externs.h	11;"	d
_GK_GETOPT_H_	src/graphlab/extern/metis/GKlib/gk_getopt.h	11;"	d
_GK_MACROS_H_	src/graphlab/extern/metis/GKlib/gk_macros.h	11;"	d
_GK_MEMORY_H_	src/graphlab/extern/metis/GKlib/gk_memory.h	11;"	d
_GK_PROTO_H_	src/graphlab/extern/metis/GKlib/gk_proto.h	11;"	d
_GK_SORT_H_	src/graphlab/extern/metis/GKlib/gk_sort.h	12;"	d
_GK_STRUCT_H_	src/graphlab/extern/metis/GKlib/gk_struct.h	11;"	d
_GK_TYPES_H_	src/graphlab/extern/metis/GKlib/gk_types.h	11;"	d
_LIBMETIS_PROTO_H_	src/graphlab/extern/metis/libmetis/proto.h	16;"	d
_POSIX_SPIN_LOCKS	src/graphlab/parallel/pthread_tools.hpp	20;"	d
_POSIX_SPIN_LOCKS	src/graphlab/parallel/pthread_tools.hpp	21;"	d
_PRINTSTAT	src/graphlab/extern/metis/libmetis/cmetis.c	18;"	d	file:
_RENAME_H_	src/graphlab/extern/metis/libmetis/rename.h	18;"	d
_SC_PAGE_SIZE	src/graphlab/extern/metis/GKlib/dlmalloc.c	140;"	d	file:
_XOPEN_SOURCE	src/graphlab/extern/metis/GKlib/gk_arch.h	21;"	d
__ICC__	src/graphlab/extern/metis/GKlib/GKlib.h	19;"	d
__MSC__	src/graphlab/extern/metis/GKlib/GKlib.h	16;"	d
__USE_XOPEN	src/graphlab/extern/metis/GKlib/gk_arch.h	18;"	d
__USE_XOPEN2K	src/graphlab/extern/metis/GKlib/gk_arch.h	24;"	d
__any_placeholder	src/graphlab/util/generics/any.hpp	/^  class __any_placeholder {$/;"	c	namespace:graphlab
__any_registration_deserializer_type	src/graphlab/util/generics/any.hpp	/^  typedef __any_placeholder* (*__any_registration_deserializer_type)(iarchive &arc);$/;"	t	namespace:graphlab
__any_registration_map_type	src/graphlab/util/generics/any.hpp	/^      __any_registration_map_type;$/;"	t	namespace:graphlab
__at_exit__	apps/pagerank/pagerankmex.cpp	/^void __at_exit__() {$/;"	f
__cdecl	src/graphlab/extern/metis/metis.h	112;"	d
__g	apps/pagerank/pagerankapp.cpp	/^pagerank_graph * __g;$/;"	v
__get_next_task	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    sched_status::status_enum __get_next_task(size_t cpuid, $/;"	f	class:graphlab::distributed_phased_sweep_scheduler
__get_next_task	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    sched_status::status_enum __get_next_task(size_t cpuid, update_task_type &ret_task) {$/;"	f	class:graphlab::set_scheduler
__get_next_task	src/graphlab/schedulers/sweep_scheduler.hpp	/^    sched_status::status_enum __get_next_task(size_t cpuid, $/;"	f	class:graphlab::sweep_scheduler
__get_registration_map	src/graphlab/util/generics/any.cpp	/^    __any_registration_map_type& __get_registration_map() {$/;"	f	namespace:graphlab
__mexFunction__	apps/pagerank/pagerankmex.cpp	/^void __mexFunction__( int nlhs, mxArray *plhs[],$/;"	f
__registration	src/graphlab/util/generics/any.hpp	/^      static any_registration<ValueType> __registration;$/;"	m	class:graphlab::any::holder
__registration	src/graphlab/util/generics/any.hpp	/^  template<typename T> any::any_registration<T> any::holder<T>::__registration;$/;"	m	class:graphlab::any::holder
__thread	src/graphlab/extern/metis/GKlib/gk_arch.h	46;"	d
__thread	src/graphlab/extern/metis/GKlib/gk_arch.h	56;"	d
__thread	src/graphlab/extern/metis/GKlib/gk_arch.h	61;"	d
__thread	src/graphlab/extern/metis/metis.h	72;"	d
_args	src/graphlab/factors/table_factor.hpp	/^    domain_type _args;$/;"	m	class:graphlab::assignment
_args	src/graphlab/factors/table_factor.hpp	/^    domain_type _args;$/;"	m	class:graphlab::table_factor
_arity1	src/graphlab/factors/binary_factor.hpp	/^    uint16_t _arity1;$/;"	m	class:graphlab::binary_factor
_arity2	src/graphlab/factors/binary_factor.hpp	/^    uint16_t _arity2;$/;"	m	class:graphlab::binary_factor
_asgs	src/graphlab/factors/table_factor.hpp	/^    size_t _asgs[MAX_DIM];$/;"	m	class:graphlab::assignment
_block	src/graphlab/extern/bitmagic/bmfunc.h	/^    static all_set_block  _block;$/;"	m	struct:bm::all_set
_block	src/graphlab/extern/bitmagic/bmfunc.h	/^template<bool T> typename all_set<T>::all_set_block all_set<T>::_block;$/;"	m	class:bm::all_set
_bo	src/graphlab/extern/bitmagic/bmfunc.h	/^    static bo  _bo;$/;"	m	struct:bm::globals
_bo	src/graphlab/extern/bitmagic/bmfunc.h	/^template<bool T> typename globals<T>::bo globals<T>::_bo;$/;"	m	class:bm::globals
_byte_order	src/graphlab/extern/bitmagic/bmfunc.h	/^        ByteOrder  _byte_order;$/;"	m	struct:bm::globals::bo
_cols	apps/image_denoise/image.hpp	/^  size_t _rows, _cols;$/;"	m	class:image
_copyright	src/graphlab/extern/bitmagic/bmfunc.h	/^template<bool T> struct _copyright$/;"	s	namespace:bm
_count	src/graphlab/extern/bitmagic/bmconst.h	/^  static const unsigned char _count[256];$/;"	m	struct:bm::bit_count_table
_count	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned char bit_count_table<T>::_count[256] = {$/;"	m	class:bm::bit_count_table
_data	src/graphlab/factors/binary_factor.hpp	/^    std::vector<double> _data;$/;"	m	class:graphlab::binary_factor
_data	src/graphlab/factors/table_factor.hpp	/^    std::vector<double> _data;$/;"	m	class:graphlab::table_factor
_data	src/graphlab/factors/unary_factor.hpp	/^    std::vector<double> _data;$/;"	m	class:graphlab::unary_factor
_data	src/graphlab/graph/graph.hpp	/^      EdgeData _data;$/;"	m	class:graphlab::graph::edge
_destgraph	src/graphlab/scope/synchronous_scope.hpp	/^    Graph* _destgraph;$/;"	m	class:graphlab::synchronous_scope
_destgraph	src/graphlab/scope/synchronous_scope_factory.hpp	/^    Graph* _destgraph;$/;"	m	class:graphlab::synchronous_scope_factory
_distgraph	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    DistGraph& _distgraph;$/;"	m	class:graphlab::pushy_distributed_engine
_factors	apps/factor_graph_inference/factor_graph.hpp	/^  std::vector<factor_type> _factors;$/;"	m	class:factor_graph
_gm_	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static struct malloc_state _gm_;$/;"	v	typeref:struct:malloc_state	file:
_graph	src/graphlab/engine/sim_thread_engine.hpp	/^    Graph& _graph;$/;"	m	class:graphlab::sim_thread_engine
_graph	src/graphlab/engine/threaded_engine.hpp	/^    Graph& _graph;$/;"	m	class:graphlab::threaded_engine
_graph_ptr	src/graphlab/scope/iscope.hpp	/^    Graph* _graph_ptr;$/;"	m	class:graphlab::iscope
_idx	src/graphlab/extern/bitmagic/bmconst.h	/^    static const char _idx[256];$/;"	m	struct:bm::first_bit_table
_idx	src/graphlab/extern/bitmagic/bmconst.h	/^const char first_bit_table<T>::_idx[256] = {$/;"	m	class:bm::first_bit_table
_index	src/graphlab/factors/table_factor.hpp	/^    size_t _index;$/;"	m	class:graphlab::assignment
_left	src/graphlab/extern/bitmagic/bmfunc.h	/^    static const unsigned _left[32];$/;"	m	struct:bm::block_set_table
_left	src/graphlab/extern/bitmagic/bmfunc.h	/^const unsigned block_set_table<T>::_left[32] = {$/;"	m	class:bm::block_set_table
_len	src/graphlab/extern/bitmagic/bmfunc.h	/^    static const gap_word_t _len[bm::gap_levels];$/;"	m	struct:bm::gap_len_table
_len	src/graphlab/extern/bitmagic/bmfunc.h	/^    static const gap_word_t _len[bm::gap_levels];$/;"	m	struct:bm::gap_len_table_min
_len	src/graphlab/extern/bitmagic/bmfunc.h	/^const gap_word_t gap_len_table<T>::_len[bm::gap_levels] = $/;"	m	class:bm::gap_len_table
_len	src/graphlab/extern/bitmagic/bmfunc.h	/^const gap_word_t gap_len_table_min<T>::_len[bm::gap_levels] = $/;"	m	class:bm::gap_len_table_min
_log	src/graphlab/logger/logger.cpp	/^void file_logger::_log(int lineloglevel,const char* file,const char* function,$/;"	f	class:file_logger
_logbuf	src/graphlab/logger/logger.cpp	/^void file_logger::_logbuf(int lineloglevel,const char* file,const char* function,$/;"	f	class:file_logger
_lograw	src/graphlab/logger/logger.cpp	/^void file_logger::_lograw(int lineloglevel, const char* buf, int len) {$/;"	f	class:file_logger
_multiply	src/graphlab/extern/bitmagic/bmconst.h	/^    static const unsigned _multiply[32];$/;"	m	struct:bm::DeBruijn_bit_position
_multiply	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned DeBruijn_bit_position<T>::_multiply[32] = { $/;"	m	class:bm::DeBruijn_bit_position
_num_vars	src/graphlab/factors/table_factor.hpp	/^    size_t _num_vars;$/;"	m	class:graphlab::domain
_p	src/graphlab/extern/bitmagic/bmfunc.h	/^    static const char _p[];$/;"	m	struct:bm::_copyright
_p	src/graphlab/extern/bitmagic/bmfunc.h	/^template<bool T> const char _copyright<T>::_p[] = $/;"	m	class:bm::_copyright
_queue	src/graphlab/util/synchronized_queue.hpp	/^    std::queue<T> _queue;$/;"	m	class:graphlab::synchronized_queue
_queuelock	src/graphlab/util/synchronized_queue.hpp	/^    spinlock _queuelock;$/;"	m	class:graphlab::synchronized_queue
_right	src/graphlab/extern/bitmagic/bmfunc.h	/^    static const unsigned _right[32];$/;"	m	struct:bm::block_set_table
_right	src/graphlab/extern/bitmagic/bmfunc.h	/^const unsigned block_set_table<T>::_right[32] = {$/;"	m	class:bm::block_set_table
_rows	apps/image_denoise/image.hpp	/^  size_t _rows, _cols;$/;"	m	class:image
_size	src/graphlab/factors/table_factor.hpp	/^    size_t _size;$/;"	m	class:graphlab::domain
_source	src/graphlab/graph/graph.hpp	/^      vertex_id_t _source;$/;"	m	class:graphlab::graph::edge
_srcgraph	src/graphlab/scope/synchronous_scope.hpp	/^    Graph* _srcgraph;$/;"	m	class:graphlab::synchronous_scope
_srcgraph	src/graphlab/scope/synchronous_scope_factory.hpp	/^    Graph* _srcgraph;$/;"	m	class:graphlab::synchronous_scope_factory
_target	src/graphlab/graph/graph.hpp	/^      vertex_id_t _target;$/;"	m	class:graphlab::graph::edge
_timer	src/graphlab/distributed/distributed_engine.hpp	/^    timer _timer;   $/;"	m	class:graphlab::distributed_engine
_timer	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    timer * _timer;$/;"	m	class:graphlab::pushy_distributed_engine
_timer	src/graphlab/engine/sim_thread_engine.hpp	/^    timer * _timer;$/;"	m	class:graphlab::sim_thread_engine
_timer	src/graphlab/engine/synchronous_engine.hpp	/^    timer _timer;$/;"	m	class:graphlab::synchronous_engine
_var	src/graphlab/factors/unary_factor.hpp	/^    uint32_t _var;$/;"	m	class:graphlab::unary_factor
_var1	src/graphlab/factors/binary_factor.hpp	/^    uint32_t _var1;$/;"	m	class:graphlab::binary_factor
_var2	src/graphlab/factors/binary_factor.hpp	/^    uint32_t _var2;$/;"	m	class:graphlab::binary_factor
_var_name	apps/factor_graph_inference/factor_graph.hpp	/^  std::vector<std::string> _var_name;$/;"	m	class:factor_graph
_variables	apps/factor_graph_inference/factor_graph.hpp	/^  std::set<variable_type> _variables;$/;"	m	class:factor_graph
_vars	src/graphlab/factors/table_factor.hpp	/^    variable _vars[MAX_DIM];$/;"	m	class:graphlab::domain
_vertex	src/graphlab/scope/iscope.hpp	/^    vertex_id_t _vertex;$/;"	m	class:graphlab::iscope
_vertexdatagraph	src/graphlab/scope/synchronous_scope.hpp	/^    Graph* _vertexdatagraph;$/;"	m	class:graphlab::synchronous_scope
_vertexdatagraph	src/graphlab/scope/synchronous_scope_factory.hpp	/^    Graph* _vertexdatagraph;$/;"	m	class:graphlab::synchronous_scope_factory
abort	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    void abort() { $/;"	f	class:graphlab::distributed_collaborative_scheduler_wrapper
abort	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    void abort() {aborted = true; }$/;"	f	class:graphlab::distributed_phased_sweep_scheduler
abort	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  void abort(){ terminator.abort(); }$/;"	f	class:graphlab::distributed_round_robin_scheduler
abort	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  void abort(){ terminator.abort(); }$/;"	f	class:graphlab::distributed_round_robin_scheduler2
abort	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    void abort() { $/;"	f	class:graphlab::distributed_scheduler_wrapper
abort	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    void abort() { aborted=true; }$/;"	f	class:graphlab::clustered_priority_scheduler
abort	src/graphlab/schedulers/colored_scheduler.hpp	/^    void abort() { $/;"	f	class:graphlab::colored_scheduler
abort	src/graphlab/schedulers/fifo_scheduler.hpp	/^    void abort() { terminator.abort(); }$/;"	f	class:graphlab::fifo_scheduler
abort	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    void abort() { terminator.abort(); }$/;"	f	class:graphlab::multiqueue_fifo_scheduler
abort	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    void abort() { terminator.abort(); }$/;"	f	class:graphlab::multiqueue_priority_scheduler
abort	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^    void abort() { terminator.abort(); }$/;"	f	class:graphlab::multiqueue_scheduler
abort	src/graphlab/schedulers/priority_scheduler.hpp	/^    void abort() { terminator.abort(); }$/;"	f	class:graphlab::priority_scheduler
abort	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    void abort(){ terminator.abort(); }$/;"	f	class:graphlab::round_robin_scheduler
abort	src/graphlab/schedulers/sampling_scheduler.hpp	/^    void abort() { terminator.abort(); }$/;"	f	class:graphlab::sampling_scheduler
abort	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    void abort() {$/;"	f	class:graphlab::set_scheduler
abort	src/graphlab/schedulers/splash_scheduler.hpp	/^    void abort() { aborted = true; }$/;"	f	class:graphlab::splash_scheduler
abort	src/graphlab/schedulers/sweep_scheduler.hpp	/^    void abort() {aborted = true; }$/;"	f	class:graphlab::sweep_scheduler
abort	src/graphlab/util/task_count_termination.hpp	/^    void abort(){$/;"	f	class:graphlab::task_count_termination
aborted	src/graphlab/distributed/distributed_engine.hpp	/^    bool aborted;$/;"	m	class:graphlab::distributed_engine
aborted	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    bool aborted;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
aborted	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    bool aborted;$/;"	m	class:graphlab::pushy_distributed_engine
aborted	src/graphlab/engine/sim_thread_engine.hpp	/^    bool aborted;$/;"	m	class:graphlab::sim_thread_engine
aborted	src/graphlab/engine/synchronous_engine.hpp	/^    bool aborted;$/;"	m	class:graphlab::synchronous_engine
aborted	src/graphlab/engine/threaded_engine.hpp	/^    bool   aborted;$/;"	m	class:graphlab::threaded_engine
aborted	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    bool aborted;$/;"	m	class:graphlab::clustered_priority_scheduler
aborted	src/graphlab/schedulers/splash_scheduler.hpp	/^    bool aborted;$/;"	m	class:graphlab::splash_scheduler
aborted	src/graphlab/schedulers/sweep_scheduler.hpp	/^    bool aborted;$/;"	m	class:graphlab::sweep_scheduler
acc	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      std::vector< any > acc;$/;"	m	struct:graphlab::distributed_fullsweep_sdm::sync_state
acc	src/graphlab/distributed/distributed_shared_data.hpp	/^      any acc;$/;"	m	struct:graphlab::distributed_shared_data::sync_state
accum_	src/graphlab/extern/bitmagic/encoding.h	/^    unsigned            accum_;      \/\/\/< read bit accumulator$/;"	m	class:bm::bit_in
accum_	src/graphlab/extern/bitmagic/encoding.h	/^    unsigned       accum_;     \/\/\/< write bit accumulator $/;"	m	class:bm::bit_out
acquire_as_much_as_possible	src/graphlab/distributed/lock_manager.hpp	/^  bool acquire_as_much_as_possible(lock_descriptor &lockset) {$/;"	f	class:graphlab::distributed_lock_manager
acquiringfromproc	src/graphlab/distributed/graph_lock_manager.hpp	/^      procid_t acquiringfromproc;$/;"	m	struct:graphlab::graph_lock_manager::request_descriptor
active	src/graphlab/distributed/distributed_shared_data.hpp	/^      bool active;$/;"	m	struct:graphlab::distributed_shared_data::sync_state
active	src/graphlab/engine/asynchronous_engine.hpp	/^    bool active;$/;"	m	class:graphlab::asynchronous_engine
active	src/graphlab/parallel/pthread_tools.hpp	/^    bool active() const { return m_active; }$/;"	f	class:graphlab::thread
active_set	src/graphlab/schedulers/splash_scheduler.hpp	/^    dense_bitset active_set;    $/;"	m	class:graphlab::splash_scheduler
active_sync_progressions	src/graphlab/distributed/distributed_shared_data.hpp	/^    blocking_queue<size_t> active_sync_progressions;$/;"	m	class:graphlab::distributed_shared_data
activerequests	src/graphlab/distributed/graph_lock_manager.hpp	/^    reqdesc_container activerequests;$/;"	m	class:graphlab::graph_lock_manager
activeset	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    int activeset; \/\/\/The active set scheduled in schedule_rep$/;"	m	class:graphlab::set_scheduler
add	src/graphlab/monitoring/monitor_multiplexer.hpp	/^    void add(const Monitor& child) {$/;"	f	class:graphlab::monitor_multiplexer
add	src/graphlab/schedulers/support/binary_vertex_task_set.hpp	/^    bool add(const update_task_type& task) {$/;"	f	class:graphlab::binary_vertex_task_set
add	src/graphlab/schedulers/support/vertex_task_set.hpp	/^    bool add(const update_task_type& task) {$/;"	f	class:graphlab::vertex_task_set
add	src/graphlab/schedulers/support/vertex_task_set.hpp	/^    bool add(const update_task_type& task, double priority) {$/;"	f	class:graphlab::vertex_task_set
add	src/graphlab/util/fast_multinomial.hpp	/^    void add(size_t asg, float_t value) {$/;"	f	class:graphlab::fast_multinomial
add_bit_block	src/graphlab/extern/bitmagic/bmfunc.h	/^    void add_bit_block()$/;"	f	struct:bm::bv_statistics
add_checkpoint	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    void add_checkpoint(vertex_id_t vid) {$/;"	f	class:graphlab::distributed_phased_sweep_scheduler
add_edge	src/graphlab/distributed/graph/cloned_graph.hpp	/^    edge_id_t add_edge(vertex_id_t source, vertex_id_t target, $/;"	f	class:graphlab::cloned_graph
add_edge	src/graphlab/distributed/graph/distributed_graph.hpp	/^    edge_id_t add_edge(vertex_id_t source, vertex_id_t target, $/;"	f	class:graphlab::distributed_graph
add_edge	src/graphlab/graph/graph.hpp	/^    edge_id_t add_edge(vertex_id_t source, vertex_id_t target, $/;"	f	class:graphlab::graph
add_event_target	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	/^    virtual void add_event_target(ivertex_set *ev) {$/;"	f	class:graphlab::ivertex_set
add_factor	apps/factor_graph_inference/factor_graph.hpp	/^  void add_factor(const factor_type& factor) {$/;"	f	class:factor_graph
add_gap_block	src/graphlab/extern/bitmagic/bmfunc.h	/^    void add_gap_block(unsigned capacity, unsigned length)$/;"	f	struct:bm::bv_statistics
add_positional	src/graphlab/util/command_line_options.hpp	/^    void add_positional(const std::string& str) {$/;"	f	class:graphlab::command_line_options
add_segment	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void add_segment(mstate m, char* tbase, size_t tsize, flag_t mmapped) {$/;"	f	file:
add_task	src/graphlab/core.hpp	/^    void add_task(typename types::update_task task, double priority) {$/;"	f	class:graphlab::core
add_task	src/graphlab/core.hpp	/^    void add_task(vertex_id_t vertex,$/;"	f	class:graphlab::core
add_task	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    void add_task(update_task_type task, double priority) {$/;"	f	class:graphlab::distributed_collaborative_scheduler_wrapper
add_task	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    void add_task(update_task_type task, double priority) {$/;"	f	class:graphlab::distributed_phased_sweep_scheduler
add_task	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    void add_task(update_task_type task, double priority, $/;"	f	class:graphlab::distributed_phased_sweep_scheduler
add_task	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  void add_task(update_task_type task, double priority) {$/;"	f	class:graphlab::distributed_round_robin_scheduler
add_task	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  void add_task(update_task_type task, double priority) {$/;"	f	class:graphlab::distributed_round_robin_scheduler2
add_task	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    void add_task(update_task_type task, double priority) {$/;"	f	class:graphlab::distributed_scheduler_wrapper
add_task	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    void add_task(update_task_type task, double priority) {$/;"	f	class:graphlab::clustered_priority_scheduler
add_task	src/graphlab/schedulers/colored_scheduler.hpp	/^    void add_task(update_task_type task, double priority) {$/;"	f	class:graphlab::colored_scheduler
add_task	src/graphlab/schedulers/fifo_scheduler.hpp	/^    void add_task(update_task_type task, double priority) {$/;"	f	class:graphlab::fifo_scheduler
add_task	src/graphlab/schedulers/icallback.hpp	/^    void add_task(vertex_id_t vertex,$/;"	f	class:graphlab::icallback
add_task	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    void add_task(update_task_type task, double priority) {$/;"	f	class:graphlab::multiqueue_fifo_scheduler
add_task	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    void add_task(update_task_type task, double priority) {$/;"	f	class:graphlab::multiqueue_priority_scheduler
add_task	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^    void add_task(update_task_type task, double priority) {$/;"	f	class:graphlab::multiqueue_scheduler
add_task	src/graphlab/schedulers/priority_scheduler.hpp	/^    void add_task(update_task_type task, double priority) {$/;"	f	class:graphlab::priority_scheduler
add_task	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    void add_task(update_task_type task, double priority) {$/;"	f	class:graphlab::round_robin_scheduler
add_task	src/graphlab/schedulers/sampling_scheduler.hpp	/^    void add_task(update_task_type task, double priority) {$/;"	f	class:graphlab::sampling_scheduler
add_task	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    void add_task(update_task_type task, double priority) { $/;"	f	class:graphlab::set_scheduler
add_task	src/graphlab/schedulers/splash_scheduler.hpp	/^    void add_task(update_task_type task, double priority) {$/;"	f	class:graphlab::splash_scheduler
add_task	src/graphlab/schedulers/support/binary_scheduler_callback.hpp	/^    void add_task(update_task_type task, double priority) {$/;"	f	class:graphlab::binary_scheduler_callback
add_task	src/graphlab/schedulers/support/direct_callback.hpp	/^    void add_task(update_task_type task, double priority) {$/;"	f	class:graphlab::direct_callback
add_task	src/graphlab/schedulers/support/unused_scheduler_callback.hpp	/^    void add_task(update_task_type task, double priority) {$/;"	f	class:graphlab::unused_scheduler_callback
add_task	src/graphlab/schedulers/sweep_scheduler.hpp	/^    void add_task(update_task_type task, double priority) {$/;"	f	class:graphlab::sweep_scheduler
add_task	src/graphlab/schedulers/sweep_scheduler.hpp	/^    void add_task(update_task_type task, double priority, $/;"	f	class:graphlab::sweep_scheduler
add_task_called	src/graphlab/schedulers/support/binary_scheduler_callback.hpp	/^    bool add_task_called;$/;"	m	class:graphlab::binary_scheduler_callback
add_task_handler	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    static void add_task_handler(distributed_control& dc,$/;"	f	class:graphlab::distributed_collaborative_scheduler_wrapper
add_task_handler	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    static void add_task_handler(distributed_control& dc,$/;"	f	class:graphlab::distributed_scheduler_wrapper
add_task_to_all	src/graphlab/core.hpp	/^    void add_task_to_all(typename types::update_function func, $/;"	f	class:graphlab::core
add_task_to_all	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    void add_task_to_all(update_function_type func, $/;"	f	class:graphlab::distributed_collaborative_scheduler_wrapper
add_task_to_all	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    void add_task_to_all(update_function_type func, double priority) {$/;"	f	class:graphlab::distributed_phased_sweep_scheduler
add_task_to_all	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  void add_task_to_all(update_function_type func, double priority) {$/;"	f	class:graphlab::distributed_round_robin_scheduler
add_task_to_all	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  void add_task_to_all(update_function_type func, double priority) {$/;"	f	class:graphlab::distributed_round_robin_scheduler2
add_task_to_all	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    void add_task_to_all(update_function_type func, $/;"	f	class:graphlab::distributed_scheduler_wrapper
add_task_to_all	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    void add_task_to_all(update_function_type func, double priority) {$/;"	f	class:graphlab::clustered_priority_scheduler
add_task_to_all	src/graphlab/schedulers/colored_scheduler.hpp	/^    void add_task_to_all(update_function_type func, $/;"	f	class:graphlab::colored_scheduler
add_task_to_all	src/graphlab/schedulers/fifo_scheduler.hpp	/^    void add_task_to_all(update_function_type func, double priority) {$/;"	f	class:graphlab::fifo_scheduler
add_task_to_all	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    void add_task_to_all(update_function_type func, double priority)  {$/;"	f	class:graphlab::multiqueue_fifo_scheduler
add_task_to_all	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    void add_task_to_all(update_function_type func, double priority)  {$/;"	f	class:graphlab::multiqueue_priority_scheduler
add_task_to_all	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^    void add_task_to_all(update_function_type func, double priority) {$/;"	f	class:graphlab::multiqueue_scheduler
add_task_to_all	src/graphlab/schedulers/priority_scheduler.hpp	/^    void add_task_to_all(update_function_type func, double priority) {$/;"	f	class:graphlab::priority_scheduler
add_task_to_all	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    void add_task_to_all(update_function_type func, double priority) {$/;"	f	class:graphlab::round_robin_scheduler
add_task_to_all	src/graphlab/schedulers/sampling_scheduler.hpp	/^    void add_task_to_all(update_function_type func, $/;"	f	class:graphlab::sampling_scheduler
add_task_to_all	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    void add_task_to_all(update_function_type func, double priority) { $/;"	f	class:graphlab::set_scheduler
add_task_to_all	src/graphlab/schedulers/splash_scheduler.hpp	/^    void add_task_to_all(update_function_type func, double priority) {$/;"	f	class:graphlab::splash_scheduler
add_task_to_all	src/graphlab/schedulers/sweep_scheduler.hpp	/^    void add_task_to_all(update_function_type func, double priority) {$/;"	f	class:graphlab::sweep_scheduler
add_task_to_all_handler	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    static void add_task_to_all_handler(distributed_control& dc,$/;"	f	class:graphlab::distributed_collaborative_scheduler_wrapper
add_task_to_all_handler	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    static void add_task_to_all_handler(distributed_control& dc,$/;"	f	class:graphlab::distributed_scheduler_wrapper
add_tasks	src/graphlab/core.hpp	/^    void add_tasks(const std::vector<vertex_id_t>& vertices, $/;"	f	class:graphlab::core
add_tasks	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    void add_tasks(const std::vector<vertex_id_t>& vertices, $/;"	f	class:graphlab::distributed_collaborative_scheduler_wrapper
add_tasks	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    void add_tasks(const std::vector<vertex_id_t> &vertices,$/;"	f	class:graphlab::distributed_phased_sweep_scheduler
add_tasks	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  void add_tasks(const std::vector<vertex_id_t> &vertices,$/;"	f	class:graphlab::distributed_round_robin_scheduler
add_tasks	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  void add_tasks(const std::vector<vertex_id_t> &vertices,$/;"	f	class:graphlab::distributed_round_robin_scheduler2
add_tasks	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    void add_tasks(const std::vector<vertex_id_t>& vertices, $/;"	f	class:graphlab::distributed_scheduler_wrapper
add_tasks	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    void add_tasks(const std::vector<vertex_id_t> &vertices,$/;"	f	class:graphlab::clustered_priority_scheduler
add_tasks	src/graphlab/schedulers/colored_scheduler.hpp	/^    void add_tasks(const std::vector<vertex_id_t>& vertices, $/;"	f	class:graphlab::colored_scheduler
add_tasks	src/graphlab/schedulers/fifo_scheduler.hpp	/^    void add_tasks(const std::vector<vertex_id_t> &vertices,$/;"	f	class:graphlab::fifo_scheduler
add_tasks	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    void add_tasks(const std::vector<vertex_id_t> &vertices,$/;"	f	class:graphlab::multiqueue_fifo_scheduler
add_tasks	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    void add_tasks(const std::vector<vertex_id_t> &vertices,$/;"	f	class:graphlab::multiqueue_priority_scheduler
add_tasks	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^    void add_tasks(const std::vector<vertex_id_t> &vertices,$/;"	f	class:graphlab::multiqueue_scheduler
add_tasks	src/graphlab/schedulers/priority_scheduler.hpp	/^    void add_tasks(const std::vector<vertex_id_t> &vertices,$/;"	f	class:graphlab::priority_scheduler
add_tasks	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    void add_tasks(const std::vector<vertex_id_t> &vertices,$/;"	f	class:graphlab::round_robin_scheduler
add_tasks	src/graphlab/schedulers/sampling_scheduler.hpp	/^    void add_tasks(const std::vector<vertex_id_t> &vertices,$/;"	f	class:graphlab::sampling_scheduler
add_tasks	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    void add_tasks(const std::vector<vertex_id_t> &vertices,$/;"	f	class:graphlab::set_scheduler
add_tasks	src/graphlab/schedulers/splash_scheduler.hpp	/^    void add_tasks(const std::vector<vertex_id_t>& vertices, $/;"	f	class:graphlab::splash_scheduler
add_tasks	src/graphlab/schedulers/support/binary_scheduler_callback.hpp	/^    void add_tasks(const std::vector<vertex_id_t>& vertices, $/;"	f	class:graphlab::binary_scheduler_callback
add_tasks	src/graphlab/schedulers/support/direct_callback.hpp	/^    void add_tasks(const std::vector<vertex_id_t> &vertices,$/;"	f	class:graphlab::direct_callback
add_tasks	src/graphlab/schedulers/support/unused_scheduler_callback.hpp	/^    void add_tasks(const std::vector<vertex_id_t>& vertices, $/;"	f	class:graphlab::unused_scheduler_callback
add_tasks	src/graphlab/schedulers/sweep_scheduler.hpp	/^    void add_tasks(const std::vector<vertex_id_t> &vertices,$/;"	f	class:graphlab::sweep_scheduler
add_terminator	src/graphlab/distributed/distributed_engine.hpp	/^    void add_terminator(termination_function_type term) {$/;"	f	class:graphlab::distributed_engine
add_terminator	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    void add_terminator(termination_function_type term) {$/;"	f	class:graphlab::pushy_distributed_engine
add_terminator	src/graphlab/engine/asynchronous_engine.hpp	/^    void add_terminator(termination_function_type term) {$/;"	f	class:graphlab::asynchronous_engine
add_terminator	src/graphlab/engine/sim_thread_engine.hpp	/^    void add_terminator(termination_function_type term) {$/;"	f	class:graphlab::sim_thread_engine
add_terminator	src/graphlab/engine/synchronous_engine.hpp	/^    void add_terminator(termination_function_type term) {$/;"	f	class:graphlab::synchronous_engine
add_terminator	src/graphlab/engine/threaded_engine.hpp	/^    void add_terminator(termination_function_type term) {$/;"	f	class:graphlab::threaded_engine
add_vertex	src/graphlab/distributed/graph/cloned_graph.hpp	/^    vertex_id_t add_vertex(const VertexData& vdata = VertexData() ) {$/;"	f	class:graphlab::cloned_graph
add_vertex	src/graphlab/distributed/graph/distributed_graph.hpp	/^    vertex_id_t add_vertex(int procid, const VertexData& vdata = VertexData()) {$/;"	f	class:graphlab::distributed_graph
add_vertex	src/graphlab/graph/graph.hpp	/^    vertex_id_t add_vertex(const VertexData& vdata = VertexData() ) {$/;"	f	class:graphlab::graph
adjncy	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *adjncy;		\/* Array that stores the adjacency lists of nvtxs *\/$/;"	m	struct:graphdef
adjwgt	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *adjwgt;		\/* Array that stores the weights of the adjacency lists *\/$/;"	m	struct:graphdef
adjwgtsum	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *adjwgtsum;		\/* The sum of the adjacency weight of each vertex *\/$/;"	m	struct:graphdef
alarm_wakeup	src/graphlab/util/timer.cpp	/^  void alarm_wakeup(int i) {$/;"	f	namespace:graphlab
align_as_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	783;"	d	file:
align_offset	src/graphlab/extern/metis/GKlib/dlmalloc.c	209;"	d	file:
all_addrs	src/graphlab/distributed/distributed_control.hpp	/^  uint32_t *all_addrs;$/;"	m	class:graphlab::distributed_control
all_bits_mask	src/graphlab/extern/bitmagic/bmconst.h	/^const id64_t    all_bits_mask = 0xffffffffffffffff;$/;"	m	namespace:bm
all_bits_mask	src/graphlab/extern/bitmagic/bmconst.h	/^const word_t all_bits_mask = 0xffffffff;$/;"	m	namespace:bm
all_children	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	/^    std::vector<ivertex_set*> all_children;$/;"	m	class:graphlab::ivertex_set
all_dependent_events	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	/^    virtual size_t all_dependent_events() {$/;"	f	class:graphlab::ivertex_set
all_set	src/graphlab/extern/bitmagic/bmfunc.h	/^template<bool T> struct all_set$/;"	s	namespace:bm
all_set_block	src/graphlab/extern/bitmagic/bmfunc.h	/^        all_set_block()$/;"	f	struct:bm::all_set::all_set_block
all_set_block	src/graphlab/extern/bitmagic/bmfunc.h	/^    struct BM_ALIGN16 all_set_block$/;"	s	struct:bm::all_set
allmaps	src/graphlab/distributed/distributed_hash_table.cpp	/^static std::vector<distributed_hash_table*> allmaps;$/;"	m	namespace:graphlab	file:
alloc_	src/graphlab/extern/bitmagic/bmblocks.h	/^    allocator_type                         alloc_;$/;"	m	class:bm::blocks_manager
alloc_	src/graphlab/extern/bitmagic/bmserial.h	/^    allocator_type alloc_;$/;"	m	class:bm::serializer
alloc_bit_block	src/graphlab/extern/bitmagic/bmalloc.h	/^    bm::word_t* alloc_bit_block(unsigned alloc_factor = 1)$/;"	f	class:bm::mem_alloc
alloc_gap_block	src/graphlab/extern/bitmagic/bmalloc.h	/^    bm::gap_word_t* alloc_gap_block(unsigned level, $/;"	f	class:bm::mem_alloc
alloc_ptr	src/graphlab/extern/bitmagic/bmalloc.h	/^    void* alloc_ptr(unsigned size = bm::set_array_size)$/;"	f	class:bm::mem_alloc
allocate	src/graphlab/extern/bitmagic/bmalloc.h	/^    static bm::word_t* allocate(size_t n, const void *)$/;"	f	class:bm::block_allocator
allocate	src/graphlab/extern/bitmagic/bmalloc.h	/^    static void* allocate(size_t n, const void *)$/;"	f	class:bm::ptr_allocator
allocate	src/graphlab/extern/bitmagic/bmblocks.h	/^    bm::word_t* allocate()$/;"	f	class:bm::bit_block_guard
allocate_gap_block	src/graphlab/extern/bitmagic/bmblocks.h	/^    bm::gap_word_t* allocate_gap_block(unsigned level, $/;"	f	class:bm::blocks_manager
allocate_tempblock	src/graphlab/extern/bitmagic/bm.h	/^    bm::word_t* allocate_tempblock() const$/;"	f	class:bm::bvector
allocator_type	src/graphlab/extern/bitmagic/bm.h	/^    typedef Alloc  allocator_type;$/;"	t	class:bm::bvector
allocator_type	src/graphlab/extern/bitmagic/bmblocks.h	/^    typedef Alloc allocator_type;$/;"	t	class:bm::blocks_manager
allocator_type	src/graphlab/extern/bitmagic/bmserial.h	/^    typedef typename BV::allocator_type      allocator_type;$/;"	t	class:bm::serializer
allocator_type	src/graphlab/extern/bitmagic/bmserial.h	/^   typedef typename BV::allocator_type allocator_type;$/;"	t	class:bm::deserializer
alpha	src/graphlab/util/optimal_termination.hpp	/^    volatile size_t* alpha;$/;"	m	class:graphlab::optimal_termination
altLoc	src/graphlab/extern/metis/GKlib/gk_struct.h	/^	char			altLoc;$/;"	m	struct:__anon12
amax	src/graphlab/extern/metis/GKlib/gk_macros.h	16;"	d
amax3	src/graphlab/extern/metis/GKlib/gk_macros.h	18;"	d
amin	src/graphlab/extern/metis/GKlib/gk_macros.h	17;"	d
and_bit_no_check	src/graphlab/extern/bitmagic/bm.h	/^bool bvector<Alloc, MS>::and_bit_no_check(bm::id_t n, bool val)$/;"	f	class:bm::bvector
and_op	src/graphlab/extern/bitmagic/bmfunc.h	/^inline unsigned and_op(unsigned v1, unsigned v2)$/;"	f	namespace:bm
any	src/graphlab/extern/bitmagic/bm.h	/^    bool any() const$/;"	f	class:bm::bvector
any	src/graphlab/util/generics/any.hpp	/^    any() : content(NULL) { }$/;"	f	class:graphlab::any
any	src/graphlab/util/generics/any.hpp	/^    any(const ValueType & value)$/;"	f	class:graphlab::any
any	src/graphlab/util/generics/any.hpp	/^    any(const any & other)$/;"	f	class:graphlab::any
any	src/graphlab/util/generics/any.hpp	/^  class any {$/;"	c	namespace:graphlab
any_and	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^bm::id_t any_and(const BV& bv1, const BV& bv2)$/;"	f	namespace:bm
any_detail	src/graphlab/util/generics/any.hpp	/^namespace any_detail {$/;"	n	namespace:graphlab
any_inedge_set	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    any_inedge_set(bool (*sel)(vertex_id_t, vertex_id_t, const blob&), $/;"	f	class:graphlab::any_inedge_set
any_inedge_set	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    any_inedge_set(edge_selector_function sel, post_update_probe_function probe = NULL) {$/;"	f	class:graphlab::any_inedge_set
any_inedge_set	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^  class any_inedge_set: public ivertex_set {$/;"	c	namespace:graphlab
any_lru_list	src/graphlab/distributed/distributed_hash_table.hpp	/^  explicit any_lru_list(size_t k = 0, const any &i = any()) : key(k) {$/;"	f	class:graphlab::any_lru_list
any_lru_list	src/graphlab/distributed/distributed_hash_table.hpp	/^class any_lru_list{$/;"	c	namespace:graphlab
any_or	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^bm::id_t any_or(const BV& bv1, const BV& bv2)$/;"	f	namespace:bm
any_registration	src/graphlab/util/generics/any.hpp	/^      any_registration() {$/;"	f	class:graphlab::any::any_registration
any_registration	src/graphlab/util/generics/any.hpp	/^    class any_registration {$/;"	c	class:graphlab::any
any_sub	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^bm::id_t any_sub(const BV& bv1, const BV& bv2)$/;"	f	namespace:bm
any_xor	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^bm::id_t any_xor(const BV& bv1, const BV& bv2)$/;"	f	namespace:bm
app_set_vertex_value	src/graphlab/monitoring/imonitor.hpp	/^    virtual void app_set_vertex_value(vertex_id_t vid, double value) { }$/;"	f	class:graphlab::imonitor
app_set_vertex_value	src/graphlab/monitoring/monitor_multiplexer.hpp	/^    void app_set_vertex_value(vertex_id_t vid, double value) { $/;"	f	class:graphlab::monitor_multiplexer
app_set_vertex_value_scale	src/graphlab/monitoring/imonitor.hpp	/^    virtual void app_set_vertex_value_scale(double min, double max) { }$/;"	f	class:graphlab::imonitor
app_set_vertex_value_scale	src/graphlab/monitoring/monitor_multiplexer.hpp	/^    void app_set_vertex_value_scale(double min, double max) { $/;"	f	class:graphlab::monitor_multiplexer
apply_fun	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      apply_function_type apply_fun;$/;"	m	struct:graphlab::distributed_fullsweep_sdm::sync_params
apply_fun	src/graphlab/distributed/distributed_shared_data.hpp	/^      apply_function_type apply_fun;$/;"	m	struct:graphlab::distributed_shared_data::sync_params
apply_fun	src/graphlab/shared_data/thread_shared_data.hpp	/^      apply_function_type apply_fun;$/;"	m	struct:graphlab::thread_shared_data::sync_task
apply_func_real	apps/gabp/gabp.cpp	/^static void apply_func_real(size_t index,$/;"	f	file:
apply_func_relative	apps/gabp/gabp.cpp	/^static void apply_func_relative(size_t index,$/;"	f	file:
apply_function_type	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    typedef typename base::apply_function_type apply_function_type;$/;"	t	class:graphlab::distributed_fullsweep_sdm
apply_function_type	src/graphlab/distributed/distributed_shared_data.hpp	/^    typedef typename base::apply_function_type apply_function_type;$/;"	t	class:graphlab::distributed_shared_data
apply_function_type	src/graphlab/shared_data/ishared_data.hpp	/^    typedef void(*apply_function_type)(size_t index,$/;"	t	class:graphlab::ishared_data
apply_function_type	src/graphlab/shared_data/ishared_data_manager.hpp	/^    typedef typename base::apply_function_type apply_function_type;$/;"	t	class:graphlab::ishared_data_manager
apply_function_type	src/graphlab/shared_data/thread_shared_data.hpp	/^    typedef typename base::apply_function_type apply_function_type;$/;"	t	class:graphlab::thread_shared_data
apply_ops	src/graphlab.hpp	/^    typedef graphlab::apply_ops<Graph> apply_ops;$/;"	t	struct:graphlab::types
apply_ops	src/graphlab/shared_data/shared_data_ops.hpp	/^  struct apply_ops {$/;"	s	namespace:graphlab
apply_red_proportion	apps/demo/concise_demo.cpp	/^static void apply_red_proportion(size_t index,$/;"	f	file:
apply_red_proportion	apps/demo/demo.cpp	/^static void apply_red_proportion(size_t index,$/;"	f	file:
arena	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	/^  MALLINFO_FIELD_TYPE arena;    \/* non-mmapped space allocated from system *\/$/;"	m	struct:mallinfo
args	src/graphlab/distributed/dc_packet_headers.hpp	/^  handlerarg_t args[0];$/;"	m	struct:graphlab::remotecall_packdata
args	src/graphlab/factors/table_factor.hpp	/^    const domain_type& args() const { return _args; }$/;"	f	class:graphlab::assignment
args	src/graphlab/factors/table_factor.hpp	/^    const domain_type& args() const {$/;"	f	class:graphlab::table_factor
arity	src/graphlab/factors/table_factor.hpp	/^    uint32_t arity;$/;"	m	struct:graphlab::variable
arity	src/graphlab/factors/unary_factor.hpp	/^    uint16_t arity() const { return _data.size(); }$/;"	f	class:graphlab::unary_factor
arity1	src/graphlab/factors/binary_factor.hpp	/^    const uint16_t& arity1() const { return _arity1; }$/;"	f	class:graphlab::binary_factor
arity2	src/graphlab/factors/binary_factor.hpp	/^    const uint16_t& arity2() const { return _arity2; } $/;"	f	class:graphlab::binary_factor
arr_	src/graphlab/extern/bitmagic/bmblocks.h	/^        unsigned*  arr_;$/;"	m	class:bm::blocks_manager::block_count_arr_func
array	src/graphlab/util/dense_bitset.hpp	/^    size_t array[len \/ sizeof(size_t) + 1];$/;"	m	class:graphlab::fixed_dense_bitset
array	src/graphlab/util/dense_bitset.hpp	/^    size_t* array;$/;"	m	class:graphlab::dense_bitset
arrlen	src/graphlab/util/dense_bitset.hpp	/^    size_t arrlen;$/;"	m	class:graphlab::dense_bitset
arrlen	src/graphlab/util/dense_bitset.hpp	/^    static const size_t arrlen;$/;"	m	class:graphlab::fixed_dense_bitset
arrlen	src/graphlab/util/dense_bitset.hpp	/^  const size_t fixed_dense_bitset<len>::arrlen = len \/ sizeof(size_t) + 1;$/;"	m	class:graphlab::fixed_dense_bitset
as	src/graphlab/util/generics/any.hpp	/^    ValueType& as() {$/;"	f	class:graphlab::any
as	src/graphlab/util/generics/any.hpp	/^    inline const ValueType& as() const{$/;"	f	class:graphlab::any
as	src/graphlab/util/generics/blob.hpp	/^    T& as() {$/;"	f	class:graphlab::blob
as	src/graphlab/util/generics/blob.hpp	/^    const T& as() const {$/;"	f	class:graphlab::blob
as_ptr	src/graphlab/util/generics/blob.hpp	/^    T* as_ptr() {$/;"	f	class:graphlab::blob
as_ptr	src/graphlab/util/generics/blob.hpp	/^    const T* as_ptr() const {$/;"	f	class:graphlab::blob
asg	apps/factor_graph_inference/factor_gibbs.hpp	/^  uint16_t asg;$/;"	m	struct:vertex_data
asg	apps/image_denoise/gibbs_denoise.cpp	/^  size_t asg;$/;"	m	struct:vertex_data	file:
asg	src/graphlab/factors/table_factor.hpp	/^    size_t asg(size_t var_id) const {$/;"	f	class:graphlab::assignment
asg_at	src/graphlab/factors/table_factor.hpp	/^    size_t asg_at(size_t index) const {$/;"	f	class:graphlab::assignment
asg_from_tree_loc	src/graphlab/util/fast_multinomial.hpp	/^    size_t asg_from_tree_loc(size_t i) const {$/;"	f	class:graphlab::fast_multinomial
assert	src/graphlab/extern/metis/GKlib/dlmalloc.c	49;"	d	file:
assert	src/graphlab/extern/metis/GKlib/dlmalloc.c	54;"	d	file:
assignment	src/graphlab/factors/table_factor.hpp	/^    assignment() : _index(0) { }  $/;"	f	class:graphlab::assignment
assignment	src/graphlab/factors/table_factor.hpp	/^    assignment(const domain_type& args) :$/;"	f	class:graphlab::assignment
assignment	src/graphlab/factors/table_factor.hpp	/^    assignment(const domain_type& args, size_t index) :$/;"	f	class:graphlab::assignment
assignment	src/graphlab/factors/table_factor.hpp	/^    assignment(const domain_type& args,$/;"	f	class:graphlab::assignment
assignment	src/graphlab/factors/table_factor.hpp	/^    assignment(const variable& v1, size_t asg1) :$/;"	f	class:graphlab::assignment
assignment	src/graphlab/factors/table_factor.hpp	/^    assignment(const variable& v1, size_t asg1, $/;"	f	class:graphlab::assignment
assignment	src/graphlab/factors/table_factor.hpp	/^  class assignment {$/;"	c	namespace:graphlab
assignment_type	apps/factor_graph_inference/factor_bp.hpp	/^typedef factor_type::assignment_type  assignment_type;$/;"	t
assignment_type	apps/factor_graph_inference/factor_graph.hpp	/^  typedef factor_type::assignment_type     assignment_type;$/;"	t	class:factor_graph
assignment_type	src/graphlab/factors/table_factor.hpp	/^    typedef assignment<MAX_DIM> assignment_type;$/;"	t	class:graphlab::domain
assignment_type	src/graphlab/factors/table_factor.hpp	/^    typedef assignment<MAX_DIM> assignment_type;$/;"	t	class:graphlab::table_factor
associatedids	src/graphlab/distributed/graph_lock_manager.hpp	/^      std::queue<size_t> associatedids;$/;"	m	struct:graphlab::graph_lock_manager::request_descriptor
asynchronous	src/graphlab.hpp	/^      asynchronous_engine<graph, Scheduler, ScopeFactory> asynchronous;$/;"	t	struct:graphlab::types::engines
asynchronous_engine	src/graphlab/engine/asynchronous_engine.hpp	/^    asynchronous_engine(Graph& graph,$/;"	f	class:graphlab::asynchronous_engine
asynchronous_engine	src/graphlab/engine/asynchronous_engine.hpp	/^  class asynchronous_engine : $/;"	c	namespace:graphlab
at_exit	cmake/Mex_stub.cpp	/^static void at_exit()$/;"	f	file:
atom	src/graphlab/extern/metis/GKlib/gk_struct.h	/^} atom;$/;"	t	typeref:struct:__anon12
atomic	src/graphlab/parallel/atomic.hpp	/^    atomic(const T& value = 0) : value(value) { }$/;"	f	class:graphlab::atomic
atomic	src/graphlab/parallel/atomic.hpp	/^  class atomic{$/;"	c	namespace:graphlab
atomic_apply	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    void atomic_apply(size_t index,$/;"	f	class:graphlab::distributed_fullsweep_sdm
atomic_apply	src/graphlab/distributed/distributed_shared_data.hpp	/^    void atomic_apply(size_t index,$/;"	f	class:graphlab::distributed_shared_data
atomic_apply	src/graphlab/shared_data/thread_shared_data.hpp	/^    void atomic_apply(size_t index,$/;"	f	class:graphlab::thread_shared_data
atomic_compare_and_swap	src/graphlab/parallel/atomic.hpp	/^  bool atomic_compare_and_swap(T& a, const T &oldval, const T &newval) {$/;"	f	namespace:graphlab
atomic_compare_and_swap	src/graphlab/parallel/atomic.hpp	/^  inline bool atomic_compare_and_swap(double& a, const double &oldval, const double &newval) {$/;"	f	namespace:graphlab
atomic_compare_and_swap	src/graphlab/parallel/atomic.hpp	/^  inline bool atomic_compare_and_swap(float& a, const float &oldval, const float &newval) {$/;"	f	namespace:graphlab
atomic_entry	src/graphlab/shared_data/thread_shared_data.hpp	/^    struct atomic_entry {$/;"	s	class:graphlab::thread_shared_data
atomic_exchange	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    any atomic_exchange(size_t index, const any& data) {$/;"	f	class:graphlab::distributed_fullsweep_sdm
atomic_exchange	src/graphlab/distributed/distributed_shared_data.hpp	/^    any atomic_exchange(size_t index, const any& data) {$/;"	f	class:graphlab::distributed_shared_data
atomic_exchange	src/graphlab/parallel/atomic.hpp	/^  void atomic_exchange(T& a, T& b) {$/;"	f	namespace:graphlab
atomic_exchange	src/graphlab/shared_data/thread_shared_data.hpp	/^    any atomic_exchange(size_t index, const any& data) {$/;"	f	class:graphlab::thread_shared_data
atomic_get	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    any atomic_get(size_t index) const {$/;"	f	class:graphlab::distributed_fullsweep_sdm
atomic_get	src/graphlab/distributed/distributed_shared_data.hpp	/^    any atomic_get(size_t index) const {$/;"	f	class:graphlab::distributed_shared_data
atomic_get	src/graphlab/shared_data/thread_shared_data.hpp	/^    any atomic_get(size_t index) const {$/;"	f	class:graphlab::thread_shared_data
atomic_inc	src/graphlab/parallel/pthread_tools.hpp	534;"	d
atomic_inc	src/graphlab/parallel/pthread_tools.hpp	599;"	d
atomic_map	src/graphlab/shared_data/thread_shared_data.hpp	/^    atomic_map_type atomic_map;$/;"	m	class:graphlab::thread_shared_data
atomic_map_type	src/graphlab/shared_data/thread_shared_data.hpp	/^    typedef std::map<size_t, atomic_entry> atomic_map_type;$/;"	t	class:graphlab::thread_shared_data
atomic_set	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    void atomic_set(size_t index, const any& data) {$/;"	f	class:graphlab::distributed_fullsweep_sdm
atomic_set	src/graphlab/distributed/distributed_shared_data.hpp	/^    void atomic_set(size_t index, const any& data) {$/;"	f	class:graphlab::distributed_shared_data
atomic_set	src/graphlab/shared_data/thread_shared_data.hpp	/^    void atomic_set(size_t index, const any& data) {$/;"	f	class:graphlab::thread_shared_data
atomic_xadd	src/graphlab/parallel/pthread_tools.hpp	532;"	d
atomic_xadd	src/graphlab/parallel/pthread_tools.hpp	597;"	d
atomics	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    std::vector<atomic<size_t> > atomics;$/;"	m	class:graphlab::execution_plan
atomics_initial_value	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    std::vector<size_t> atomics_initial_value;$/;"	m	class:graphlab::execution_plan
atomics_reduction	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    void atomics_reduction() {$/;"	f	class:graphlab::execution_plan
atoms	src/graphlab/extern/metis/GKlib/gk_struct.h	/^	atom *atoms;$/;"	m	struct:__anon13
attach	src/graphlab/extern/bitmagic/bmblocks.h	/^    void attach(bm::word_t* blk)$/;"	f	class:bm::bit_block_guard
attach	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    SetType& attach(const SetType& destset, ivertex_set_type &srcset) {$/;"	f	class:graphlab::set_scheduler
attach_option	src/graphlab/util/command_line_options.hpp	/^    void attach_option(const std::string& option,$/;"	f	class:graphlab::command_line_options
auto_build_engine	src/graphlab/core.hpp	/^    bool auto_build_engine() {$/;"	f	class:graphlab::core
auxcore	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *auxcore;			\/* This points to the memory of the edegrees *\/$/;"	m	struct:workspacedef
b_	src/graphlab/extern/bitmagic/bmfunc.h	/^    bm::word_t* b_;$/;"	m	class:bm::bitblock_store_adapter
b_	src/graphlab/extern/bitmagic/bmfunc.h	/^    const bm::word_t*  b_;$/;"	m	class:bm::bitblock_get_adapter
background_send_thread	src/graphlab/distributed/distributed_control.hpp	/^    background_send_thread(distributed_control &dc):dc(dc),bytes_sent(0) { }$/;"	f	class:graphlab::distributed_control::background_send_thread
background_send_thread	src/graphlab/distributed/distributed_control.hpp	/^  class background_send_thread:public thread {$/;"	c	class:graphlab::distributed_control
background_unlock_thread	src/graphlab/distributed/graph_lock_manager.hpp	/^      background_unlock_thread(graph_lock_manager<Graph> &glm):thread(NULL, 0), $/;"	f	class:graphlab::graph_lock_manager::background_unlock_thread
background_unlock_thread	src/graphlab/distributed/graph_lock_manager.hpp	/^    class background_unlock_thread:public thread {$/;"	c	class:graphlab::graph_lock_manager
backlog	src/graphlab/distributed/distributed_engine.hpp	/^    atomic<size_t> backlog;$/;"	m	class:graphlab::distributed_engine
barrier	src/graphlab/distributed/distributed_control.hpp	/^  inline void barrier() {$/;"	f	class:graphlab::distributed_control
barrier	src/graphlab/parallel/pthread_tools.hpp	/^    barrier(size_t numthreads) { pthread_barrier_init(&m_barrier, NULL, numthreads); }$/;"	f	class:graphlab::barrier
barrier	src/graphlab/parallel/pthread_tools.hpp	/^    barrier(size_t numthreads) {$/;"	f	class:graphlab::barrier
barrier	src/graphlab/parallel/pthread_tools.hpp	/^  class barrier {$/;"	c	namespace:graphlab
barrier_fn	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  void (*barrier_fn)(void);$/;"	m	class:graphlab::distributed_round_robin_scheduler2
barrier_wait_secs	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  double barrier_wait_secs;$/;"	m	class:graphlab::distributed_round_robin_scheduler
barrier_wait_secs	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  double barrier_wait_secs;$/;"	m	class:graphlab::distributed_round_robin_scheduler2
base	src/graphlab/distributed/distributed_engine.hpp	/^    typedef iengine<Graph> base;$/;"	t	class:graphlab::distributed_engine
base	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    typedef distributed_fullsweep_sdm<Graph> base;$/;"	t	class:graphlab::distributed_fullsweep_sdm
base	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    typedef ischeduler<Graph> base;$/;"	t	class:graphlab::distributed_phased_sweep_scheduler
base	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^   typedef ischeduler<Graph> base;$/;"	t	class:graphlab::distributed_round_robin_scheduler
base	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^   typedef ischeduler<Graph> base;$/;"	t	class:graphlab::distributed_round_robin_scheduler2
base	src/graphlab/distributed/distributed_scope.hpp	/^    typedef iscope<Graph> base;$/;"	t	class:graphlab::distributed_scope
base	src/graphlab/distributed/distributed_shared_data.hpp	/^    typedef distributed_shared_data<Graph> base;$/;"	t	class:graphlab::distributed_shared_data
base	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    typedef iengine<DistGraph> base;$/;"	t	class:graphlab::pushy_distributed_engine
base	src/graphlab/engine/asynchronous_engine.hpp	/^    typedef iengine<Graph> base;$/;"	t	class:graphlab::asynchronous_engine
base	src/graphlab/engine/sim_thread_engine.hpp	/^    typedef iengine<Graph> base;$/;"	t	class:graphlab::sim_thread_engine
base	src/graphlab/engine/synchronous_engine.hpp	/^    typedef iengine<Graph> base;$/;"	t	class:graphlab::synchronous_engine
base	src/graphlab/engine/threaded_engine.hpp	/^    typedef iengine<Graph> base;$/;"	t	class:graphlab::threaded_engine
base	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  char*        base;             \/* base address *\/$/;"	m	struct:malloc_segment	file:
base	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    typedef ischeduler<Graph> base;$/;"	t	class:graphlab::clustered_priority_scheduler
base	src/graphlab/schedulers/colored_scheduler.hpp	/^    typedef ischeduler<Graph> base;$/;"	t	class:graphlab::colored_scheduler
base	src/graphlab/schedulers/fifo_scheduler.hpp	/^    typedef ischeduler<Graph> base;$/;"	t	class:graphlab::fifo_scheduler
base	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    typedef ischeduler<Graph> base;$/;"	t	class:graphlab::multiqueue_fifo_scheduler
base	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    typedef ischeduler<Graph> base;$/;"	t	class:graphlab::multiqueue_priority_scheduler
base	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^    typedef ischeduler<Graph> base;$/;"	t	class:graphlab::multiqueue_scheduler
base	src/graphlab/schedulers/priority_scheduler.hpp	/^    typedef ischeduler<Graph> base;$/;"	t	class:graphlab::priority_scheduler
base	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    typedef ischeduler<Graph> base;$/;"	t	class:graphlab::round_robin_scheduler
base	src/graphlab/schedulers/sampling_scheduler.hpp	/^    typedef ischeduler<Graph> base;$/;"	t	class:graphlab::sampling_scheduler
base	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    typedef ivertex_set<Graph> base;$/;"	t	class:graphlab::multinomial_vertex_set
base	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    typedef ivertex_set<Graph> base;$/;"	t	class:graphlab::restricted_vertex_set
base	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    typedef ischeduler<Graph> base;$/;"	t	class:graphlab::set_scheduler
base	src/graphlab/schedulers/splash_scheduler.hpp	/^    typedef ischeduler<Graph> base;$/;"	t	class:graphlab::splash_scheduler
base	src/graphlab/schedulers/support/binary_scheduler_callback.hpp	/^    typedef icallback<Graph> base;$/;"	t	class:graphlab::binary_scheduler_callback
base	src/graphlab/schedulers/support/direct_callback.hpp	/^    typedef icallback<Graph> base;$/;"	t	class:graphlab::direct_callback
base	src/graphlab/schedulers/support/unused_scheduler_callback.hpp	/^    typedef icallback<Graph> base;$/;"	t	class:graphlab::unused_scheduler_callback
base	src/graphlab/schedulers/sweep_scheduler.hpp	/^    typedef ischeduler<Graph> base;$/;"	t	class:graphlab::sweep_scheduler
base	src/graphlab/scope/general_scope.hpp	/^    typedef iscope<Graph> base;$/;"	t	class:graphlab::general_scope
base	src/graphlab/scope/general_scope_factory.hpp	/^    typedef iscope_factory<Graph> base;$/;"	t	class:graphlab::general_scope_factory
base	src/graphlab/scope/synchronous_scope.hpp	/^    typedef iscope<Graph> base;$/;"	t	class:graphlab::synchronous_scope
base	src/graphlab/scope/synchronous_scope_factory.hpp	/^    typedef iscope_factory<Graph> base;$/;"	t	class:graphlab::synchronous_scope_factory
base	src/graphlab/shared_data/ishared_data_manager.hpp	/^    typedef ishared_data<Graph> base;$/;"	t	class:graphlab::ishared_data_manager
base	src/graphlab/shared_data/thread_shared_data.hpp	/^    typedef thread_shared_data<Graph> base;$/;"	t	class:graphlab::thread_shared_data
base_idx_	src/graphlab/extern/bitmagic/bmfunc.h	/^	unsigned  base_idx_; \/\/\/< Base increment factor$/;"	m	class:bm::copy_to_array_functor_inc
base_load	src/graphlab/util/generics/any.cpp	/^  __any_placeholder* __any_placeholder::base_load(iarchive &arc) {$/;"	f	class:graphlab::__any_placeholder
base_save	src/graphlab/util/generics/any.cpp	/^  void __any_placeholder::base_save(oarchive &arc) const {$/;"	f	class:graphlab::__any_placeholder
base_type	src/graphlab/util/binary_parser.hpp	/^    typedef std::ifstream base_type;$/;"	t	class:graphlab::binary_input_stream
base_type	src/graphlab/util/binary_parser.hpp	/^  typedef std::ofstream base_type;$/;"	t	class:graphlab::binary_output_stream
basic_color_schedule	apps/factor_graph_inference/factor_gibbs.hpp	/^void basic_color_schedule(gl_types::set_scheduler &sched) { $/;"	f
basicselector	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    bool basicselector;$/;"	m	class:graphlab::restricted_vertex_set
bbs	src/graphlab/extern/metis/GKlib/gk_struct.h	/^	atom **bbs;$/;"	m	struct:__anon13
bdescr_	src/graphlab/extern/bitmagic/bm.h	/^        } bdescr_;$/;"	m	class:bm::bvector::iterator_base	typeref:union:bm::bvector::iterator_base::block_descr
begin	src/graphlab/factors/table_factor.hpp	/^    const double* begin() const { return _data.begin(); }$/;"	f	class:graphlab::table_factor
begin	src/graphlab/factors/table_factor.hpp	/^    double* begin() { return _data.begin(); }$/;"	f	class:graphlab::table_factor
begin	src/graphlab/factors/table_factor.hpp	/^  assignment<MAX_DIM> domain<MAX_DIM>::begin() const {$/;"	f	class:graphlab::domain
begin	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^  inline ss_set_type_iterator begin(const ss_set_type &s) {$/;"	f	namespace:graphlab
begin	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^  inline ss_small_set_type_iterator begin(const ss_small_set_type &s) {$/;"	f	namespace:graphlab
begin_local_sync_handler	src/graphlab/distributed/distributed_shared_data.hpp	/^    static void begin_local_sync_handler(distributed_control &dc,$/;"	f	class:graphlab::distributed_shared_data
begin_schedule	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    void begin_schedule()  {$/;"	f	class:graphlab::set_scheduler
begin_sleep_critical_section	src/graphlab/util/shared_termination.hpp	/^    void begin_sleep_critical_section(size_t cpuid) {$/;"	f	class:graphlab::shared_termination
belief	apps/factor_graph_inference/factor_bp.hpp	/^  factor_type belief;$/;"	m	struct:vertex_data
belief	apps/factor_graph_inference/factor_gibbs.hpp	/^  factor_graph::factor_type belief;$/;"	m	struct:vertex_data
belief	apps/image_denoise/gibbs_denoise.cpp	/^  graphlab::unary_factor belief;$/;"	m	struct:vertex_data	file:
belief	apps/image_denoise/loopybp_denoise.cpp	/^  graphlab::unary_factor belief;$/;"	m	struct:vertex_data	file:
beliefs_filename	apps/factor_graph_inference/factor_bp.cpp	/^  std::string beliefs_filename;$/;"	m	struct:options	file:
beliefs_filename	apps/factor_graph_inference/factor_gibbs.cpp	/^  std::string beliefs_filename;$/;"	m	struct:options	file:
beta	src/graphlab/util/optimal_termination.hpp	/^    volatile size_t* beta;$/;"	m	class:graphlab::optimal_termination
bfs_partition	src/graphlab/distributed/graph/cloned_graph.hpp	/^    void bfs_partition(size_t nparts, std::vector<uint32_t> &vertex2part) {$/;"	f	class:graphlab::cloned_graph
bfs_partition	src/graphlab/graph/graph.hpp	/^    void bfs_partition(size_t nparts, std::vector<uint32_t> &vertex2part) {$/;"	f	class:graphlab::graph
bin_	src/graphlab/extern/bitmagic/bmgamma.h	/^    TBitIO&  bin_;$/;"	m	class:bm::gamma_decoder
bin_	src/graphlab/extern/bitmagic/encoding.h	/^    TBitIO&  bin_;$/;"	m	class:bm::gamma_decoder
bin_find	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static int bin_find(mstate m, mchunkptr x) {$/;"	f	file:
binary_callback_type	src/graphlab/engine/synchronous_engine.hpp	/^    typedef binary_scheduler_callback<Graph> binary_callback_type;$/;"	t	class:graphlab::synchronous_engine
binary_factor	src/graphlab/factors/binary_factor.hpp	/^    binary_factor(const binary_factor& other) :$/;"	f	class:graphlab::binary_factor
binary_factor	src/graphlab/factors/binary_factor.hpp	/^    binary_factor(uint32_t var1 = 0,$/;"	f	class:graphlab::binary_factor
binary_factor	src/graphlab/factors/binary_factor.hpp	/^  class binary_factor {$/;"	c	namespace:graphlab
binary_input_stream	src/graphlab/util/binary_parser.hpp	/^    binary_input_stream(const char* fname) :$/;"	f	class:graphlab::binary_input_stream
binary_input_stream	src/graphlab/util/binary_parser.hpp	/^  class binary_input_stream : public std::ifstream {$/;"	c	namespace:graphlab
binary_output_stream	src/graphlab/util/binary_parser.hpp	/^    binary_output_stream(const char* fname) : $/;"	f	class:graphlab::binary_output_stream
binary_output_stream	src/graphlab/util/binary_parser.hpp	/^  class binary_output_stream : public std::ofstream {$/;"	c	namespace:graphlab
binary_scheduler_callback	src/graphlab/schedulers/support/binary_scheduler_callback.hpp	/^    binary_scheduler_callback() {add_task_called= false; }$/;"	f	class:graphlab::binary_scheduler_callback
binary_scheduler_callback	src/graphlab/schedulers/support/binary_scheduler_callback.hpp	/^  class binary_scheduler_callback : $/;"	c	namespace:graphlab
binary_search	src/graphlab/graph/graph.hpp	/^    size_t binary_search(const std::vector<edge_id_t>& vec,$/;"	f	class:graphlab::graph
binary_vertex_task_set	src/graphlab/schedulers/support/binary_vertex_task_set.hpp	/^    binary_vertex_task_set(size_t numvertices) :$/;"	f	class:graphlab::binary_vertex_task_set
binary_vertex_task_set	src/graphlab/schedulers/support/binary_vertex_task_set.hpp	/^  class binary_vertex_task_set {    $/;"	c	namespace:graphlab
binary_vertex_tasks	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    binary_vertex_task_set<Graph> binary_vertex_tasks;$/;"	m	class:graphlab::multiqueue_fifo_scheduler
binary_vertex_tasks	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    binary_vertex_task_set<Graph> binary_vertex_tasks;$/;"	m	class:graphlab::multiqueue_priority_scheduler
bindex_t	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^typedef unsigned int bindex_t;         \/* Described below *\/$/;"	t	file:
binmap_t	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^typedef unsigned int binmap_t;         \/* Described below *\/$/;"	t	file:
binoutfile	apps/pagerank/pagerankapp.hpp	/^    std::string binoutfile;$/;"	m	class:pagerankapp
bit_	src/graphlab/extern/bitmagic/bm.h	/^            bitblock_descr   bit_;  \/\/!< BitBlock related info.$/;"	m	union:bm::bvector::iterator_base::block_descr
bit_AND	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename W> struct bit_AND$/;"	s	namespace:bm
bit_ASSIGN	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename W> struct bit_ASSIGN$/;"	s	namespace:bm
bit_COUNT	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename W> struct bit_COUNT$/;"	s	namespace:bm
bit_COUNT_A	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename W> struct bit_COUNT_A$/;"	s	namespace:bm
bit_COUNT_AND	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename W> struct bit_COUNT_AND$/;"	s	namespace:bm
bit_COUNT_B	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename W> struct bit_COUNT_B$/;"	s	namespace:bm
bit_COUNT_OR	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename W> struct bit_COUNT_OR$/;"	s	namespace:bm
bit_COUNT_SUB_AB	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename W> struct bit_COUNT_SUB_AB$/;"	s	namespace:bm
bit_COUNT_SUB_BA	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename W> struct bit_COUNT_SUB_BA$/;"	s	namespace:bm
bit_COUNT_XOR	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename W> struct bit_COUNT_XOR$/;"	s	namespace:bm
bit_OR	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename W> struct bit_OR$/;"	s	namespace:bm
bit_SUB	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename W> struct bit_SUB$/;"	s	namespace:bm
bit_XOR	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename W> struct bit_XOR$/;"	s	namespace:bm
bit_and	src/graphlab/extern/bitmagic/bm.h	/^    bm::bvector<Alloc, MS>& bit_and(const bm::bvector<Alloc, MS>& vect)$/;"	f	class:bm::bvector
bit_block_and	src/graphlab/extern/bitmagic/bmfunc.h	/^void bit_block_and(bm::word_t* BMRESTRICT dst, const bm::word_t* BMRESTRICT src)$/;"	f	namespace:bm
bit_block_and_any	src/graphlab/extern/bitmagic/bmfunc.h	/^unsigned bit_block_and_any(const bm::word_t* src1, $/;"	f	namespace:bm
bit_block_and_count	src/graphlab/extern/bitmagic/bmfunc.h	/^unsigned bit_block_and_count(const bm::word_t* src1, $/;"	f	namespace:bm
bit_block_any_range	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t bit_block_any_range(const bm::word_t* block,$/;"	f	namespace:bm
bit_block_calc_count	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t bit_block_calc_count(const bm::word_t* block, $/;"	f	namespace:bm
bit_block_calc_count_change	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t bit_block_calc_count_change(const bm::word_t* block, $/;"	f	namespace:bm
bit_block_calc_count_range	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t bit_block_calc_count_range(const bm::word_t* block,$/;"	f	namespace:bm
bit_block_copy	src/graphlab/extern/bitmagic/bmfunc.h	/^void bit_block_copy(bm::word_t* BMRESTRICT dst, const bm::word_t* BMRESTRICT src)$/;"	f	namespace:bm
bit_block_guard	src/graphlab/extern/bitmagic/bmblocks.h	/^    bit_block_guard(BlocksManager& bman, bm::word_t* blk=0) $/;"	f	class:bm::bit_block_guard
bit_block_guard	src/graphlab/extern/bitmagic/bmblocks.h	/^class bit_block_guard$/;"	c	namespace:bm
bit_block_or	src/graphlab/extern/bitmagic/bmfunc.h	/^inline void bit_block_or(bm::word_t* BMRESTRICT dst, $/;"	f	namespace:bm
bit_block_or_any	src/graphlab/extern/bitmagic/bmfunc.h	/^unsigned bit_block_or_any(const bm::word_t* BMRESTRICT src1,$/;"	f	namespace:bm
bit_block_or_count	src/graphlab/extern/bitmagic/bmfunc.h	/^unsigned bit_block_or_count(const bm::word_t* src1, $/;"	f	namespace:bm
bit_block_set	src/graphlab/extern/bitmagic/bmfunc.h	/^void bit_block_set(bm::word_t* BMRESTRICT dst, bm::word_t value)$/;"	f	namespace:bm
bit_block_sub	src/graphlab/extern/bitmagic/bmfunc.h	/^void bit_block_sub(bm::word_t* BMRESTRICT dst, $/;"	f	namespace:bm
bit_block_sub_any	src/graphlab/extern/bitmagic/bmfunc.h	/^unsigned bit_block_sub_any(const bm::word_t* BMRESTRICT src1,$/;"	f	namespace:bm
bit_block_sub_count	src/graphlab/extern/bitmagic/bmfunc.h	/^unsigned bit_block_sub_count(const bm::word_t* BMRESTRICT src1, $/;"	f	namespace:bm
bit_block_xor	src/graphlab/extern/bitmagic/bmfunc.h	/^void bit_block_xor(bm::word_t* BMRESTRICT dst, $/;"	f	namespace:bm
bit_block_xor_any	src/graphlab/extern/bitmagic/bmfunc.h	/^unsigned bit_block_xor_any(const bm::word_t* BMRESTRICT src1,$/;"	f	namespace:bm
bit_block_xor_count	src/graphlab/extern/bitmagic/bmfunc.h	/^unsigned bit_block_xor_count(const bm::word_t* BMRESTRICT src1,$/;"	f	namespace:bm
bit_blocks	src/graphlab/extern/bitmagic/bmfunc.h	/^    unsigned bit_blocks; $/;"	m	struct:bm::bv_statistics
bit_convert_to_arr	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename T> T bit_convert_to_arr(T* BMRESTRICT dest, $/;"	f	namespace:bm
bit_convert_to_gap	src/graphlab/extern/bitmagic/bmfunc.h	/^    unsigned bit_convert_to_gap(T* BMRESTRICT dest, $/;"	f	namespace:bm
bit_count	src/graphlab/extern/bitmagic/bmvmin.h	/^    unsigned bit_count() const$/;"	f	class:bm::bvector_mini
bit_count_	src/graphlab/extern/bitmagic/bm.h	/^        bm::id_t   bit_count_;$/;"	m	class:bm::bvector::counted_enumerator
bit_count_change	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t bit_count_change(bm::word_t w)$/;"	f	namespace:bm
bit_count_nonzero_size	src/graphlab/extern/bitmagic/bmfunc.h	/^unsigned bit_count_nonzero_size(const T*     blk, $/;"	f	namespace:bm
bit_count_table	src/graphlab/extern/bitmagic/bmconst.h	/^template<bool T> struct bit_count_table $/;"	s	namespace:bm
bit_find_in_block	src/graphlab/extern/bitmagic/bmfunc.h	/^int bit_find_in_block(const bm::word_t* data, $/;"	f	namespace:bm
bit_for_each	src/graphlab/extern/bitmagic/bmfunc.h	/^void bit_for_each(T w, F& func)$/;"	f	namespace:bm
bit_for_each_4	src/graphlab/extern/bitmagic/bmfunc.h	/^void bit_for_each_4(T w, F& func)$/;"	f	namespace:bm
bit_for_tree_index	src/graphlab/extern/metis/GKlib/dlmalloc.c	1430;"	d	file:
bit_func_table_	src/graphlab/extern/bitmagic/bmserial.h	/^    get_bit_func_type  bit_func_table_[bm::set_END];$/;"	m	class:bm::serial_stream_iterator
bit_grabber	src/graphlab/extern/bitmagic/bmtrans.h	/^struct bit_grabber$/;"	s	namespace:bm
bit_grabber	src/graphlab/extern/bitmagic/bmtrans.h	/^struct bit_grabber<unsigned char, 8>$/;"	s	namespace:bm
bit_grabber	src/graphlab/extern/bitmagic/bmtrans.h	/^struct bit_grabber<unsigned short, 16>$/;"	s	namespace:bm
bit_grabber	src/graphlab/extern/bitmagic/bmtrans.h	/^struct bit_grabber<unsigned, 32>$/;"	s	namespace:bm
bit_iblock_make_pcv	src/graphlab/extern/bitmagic/bmtrans.h	/^void bit_iblock_make_pcv($/;"	f	namespace:bm
bit_iblock_pcv_stat	src/graphlab/extern/bitmagic/bmtrans.h	/^void bit_iblock_pcv_stat(const unsigned char* BMRESTRICT pc_vector,$/;"	f	namespace:bm
bit_iblock_reduce	src/graphlab/extern/bitmagic/bmtrans.h	/^void bit_iblock_reduce($/;"	f	namespace:bm
bit_in	src/graphlab/extern/bitmagic/encoding.h	/^    bit_in(TDecoder& decoder)$/;"	f	class:bm::bit_in
bit_in	src/graphlab/extern/bitmagic/encoding.h	/^class bit_in$/;"	c	namespace:bm
bit_invert	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename T> void bit_invert(T* start, T* end)$/;"	f	namespace:bm
bit_is_all_zero	src/graphlab/extern/bitmagic/bmfunc.h	/^inline bool bit_is_all_zero(const bm::wordop_t* start, $/;"	f	namespace:bm
bit_list	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename T,typename B> unsigned bit_list(T w, B* bits)$/;"	f	namespace:bm
bit_list_	src/graphlab/extern/bitmagic/bmrandom.h	/^    bm::gap_word_t    bit_list_[bm::gap_max_bits];$/;"	m	class:bm::random_subset
bit_list_4	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename T,typename B> unsigned bit_list_4(T w, B* bits)$/;"	f	namespace:bm
bit_op_count_table_	src/graphlab/extern/bitmagic/bmfunc.h	/^        bit_operation_count_func_type bit_op_count_table_[bm::set_END];$/;"	m	struct:bm::operation_functions
bit_op_count_table_	src/graphlab/extern/bitmagic/bmfunc.h	/^operation_functions<T>::bit_op_count_table_[bm::set_END] = {$/;"	m	class:bm::operation_functions
bit_operation_and	src/graphlab/extern/bitmagic/bmfunc.h	/^inline bm::word_t* bit_operation_and(bm::word_t* BMRESTRICT dst, $/;"	f	namespace:bm
bit_operation_and_any	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t bit_operation_and_any(const bm::word_t* BMRESTRICT src1,$/;"	f	namespace:bm
bit_operation_and_count	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t bit_operation_and_count(const bm::word_t* BMRESTRICT src1,$/;"	f	namespace:bm
bit_operation_count	src/graphlab/extern/bitmagic/bmfunc.h	/^    bit_operation_count_func_type bit_operation_count(unsigned i)$/;"	f	struct:bm::operation_functions
bit_operation_count_func_type	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t (*bit_operation_count_func_type)(const bm::word_t* BMRESTRICT,$/;"	t	class:bm::bm
bit_operation_or	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::word_t* bit_operation_or(bm::word_t* BMRESTRICT dst, $/;"	f	namespace:bm
bit_operation_or_any	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t bit_operation_or_any(const bm::word_t* BMRESTRICT src1,$/;"	f	namespace:bm
bit_operation_or_count	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t bit_operation_or_count(const bm::word_t* BMRESTRICT src1,$/;"	f	namespace:bm
bit_operation_sub	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::word_t* bit_operation_sub(bm::word_t* BMRESTRICT dst, $/;"	f	namespace:bm
bit_operation_sub_any	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t bit_operation_sub_any(const bm::word_t* BMRESTRICT src1, $/;"	f	namespace:bm
bit_operation_sub_count	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t bit_operation_sub_count(const bm::word_t* BMRESTRICT src1, $/;"	f	namespace:bm
bit_operation_sub_count_inv	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t bit_operation_sub_count_inv(const bm::word_t* BMRESTRICT src1, $/;"	f	namespace:bm
bit_operation_xor	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::word_t* bit_operation_xor(bm::word_t* BMRESTRICT dst, $/;"	f	namespace:bm
bit_operation_xor_any	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t bit_operation_xor_any(const bm::word_t* BMRESTRICT src1,$/;"	f	namespace:bm
bit_operation_xor_count	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t bit_operation_xor_count(const bm::word_t* BMRESTRICT src1,$/;"	f	namespace:bm
bit_or	src/graphlab/extern/bitmagic/bm.h	/^    bm::bvector<Alloc, MS>& bit_or(const  bm::bvector<Alloc, MS>& vect)$/;"	f	class:bm::bvector
bit_out	src/graphlab/extern/bitmagic/encoding.h	/^    bit_out(TEncoder& dest)$/;"	f	class:bm::bit_out
bit_out	src/graphlab/extern/bitmagic/encoding.h	/^class bit_out$/;"	c	namespace:bm
bit_out_type	src/graphlab/extern/bitmagic/bmserial.h	/^    typedef bm::bit_out<bm::encoder>  bit_out_type;$/;"	t	class:bm::serializer
bit_recomb	src/graphlab/extern/bitmagic/bmfunc.h	/^void bit_recomb(It1& it1, It2& it2, $/;"	f	namespace:bm
bit_scan_fwd	src/graphlab/extern/bitmagic/bmutil.h	/^T bit_scan_fwd(T v)$/;"	f	namespace:bm
bit_sub	src/graphlab/extern/bitmagic/bm.h	/^    bm::bvector<Alloc, MS>& bit_sub(const bm::bvector<Alloc, MS>& vect)$/;"	f	class:bm::bvector
bit_to_pos	src/graphlab/util/dense_bitset.hpp	/^    inline static void bit_to_pos(uint32_t b, uint32_t &arrpos, uint32_t &bitpos) {$/;"	f	class:graphlab::fixed_dense_bitset
bit_to_pos	src/graphlab/util/dense_bitset.hpp	/^    inline static void bit_to_pos(uint32_t b, uint32_t& arrpos, uint32_t& bitpos) {$/;"	f	class:graphlab::dense_bitset
bit_trans_grabber	src/graphlab/extern/bitmagic/bmtrans.h	/^struct bit_trans_grabber$/;"	s	namespace:bm
bit_xor	src/graphlab/extern/bitmagic/bm.h	/^    bm::bvector<Alloc, MS>& bit_xor(const bm::bvector<Alloc, MS>& vect)$/;"	f	class:bm::bvector
bitblock_descr	src/graphlab/extern/bitmagic/bm.h	/^        struct bitblock_descr$/;"	s	class:bm::bvector::iterator_base
bitblock_get_adapter	src/graphlab/extern/bitmagic/bmfunc.h	/^    bitblock_get_adapter(const bm::word_t* bit_block) : b_(bit_block) {}$/;"	f	class:bm::bitblock_get_adapter
bitblock_get_adapter	src/graphlab/extern/bitmagic/bmfunc.h	/^class bitblock_get_adapter$/;"	c	namespace:bm
bitblock_store_adapter	src/graphlab/extern/bitmagic/bmfunc.h	/^    bitblock_store_adapter(bm::word_t* bit_block) : b_(bit_block) {}$/;"	f	class:bm::bitblock_store_adapter
bitblock_store_adapter	src/graphlab/extern/bitmagic/bmfunc.h	/^class bitblock_store_adapter$/;"	c	namespace:bm
bitblock_sum_adapter	src/graphlab/extern/bitmagic/bmfunc.h	/^    bitblock_sum_adapter() : sum_(0) {}$/;"	f	class:bm::bitblock_sum_adapter
bitblock_sum_adapter	src/graphlab/extern/bitmagic/bmfunc.h	/^class bitblock_sum_adapter$/;"	c	namespace:bm
bitcmp	src/graphlab/extern/bitmagic/bmfunc.h	/^int bitcmp(const T* buf1, const T* buf2, unsigned len)$/;"	f	namespace:bm
bits	src/graphlab/extern/bitmagic/bm.h	/^            unsigned            bits[32]; \/\/!< Unpacked list of ON bits$/;"	m	struct:bm::bvector::iterator_base::bitblock_descr
bits_in_array	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned bits_in_array = bm::bits_in_block * bm::set_array_size;$/;"	m	namespace:bm
bits_in_block	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned bits_in_block = bm::set_block_size * sizeof(bm::word_t) * 8;$/;"	m	namespace:bm
bk	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  struct malloc_chunk* bk;$/;"	m	struct:malloc_chunk	typeref:struct:malloc_chunk::malloc_chunk	file:
bk	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  struct malloc_tree_chunk* bk;$/;"	m	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk	file:
blob	src/graphlab/util/generics/blob.hpp	/^    blob() : size_(0), data_(NULL) { }$/;"	f	class:graphlab::blob
blob	src/graphlab/util/generics/blob.hpp	/^    blob(const blob &b) : size_(0), data_(NULL) { $/;"	f	class:graphlab::blob
blob	src/graphlab/util/generics/blob.hpp	/^    blob(size_t new_size) : $/;"	f	class:graphlab::blob
blob	src/graphlab/util/generics/blob.hpp	/^    blob(size_t osize, void* odata) : size_(0), data_(NULL) { $/;"	f	class:graphlab::blob
blob	src/graphlab/util/generics/blob.hpp	/^  class blob {$/;"	c	namespace:graphlab
blob_cloned_graph	src/graphlab/distributed/graph/cloned_graph.hpp	/^  typedef cloned_graph<blob, blob> blob_cloned_graph;$/;"	t	namespace:graphlab
blob_distributed_graph	src/graphlab/distributed/graph/distributed_graph.hpp	/^  typedef distributed_graph<blob, blob> blob_distributed_graph;$/;"	t	namespace:graphlab
block_	src/graphlab/extern/bitmagic/bm.h	/^        const bm::word_t*       block_;      \/\/!< Block pointer.(NULL-invalid)$/;"	m	class:bm::bvector::iterator_base
block_	src/graphlab/extern/bitmagic/bmblocks.h	/^    bm::word_t*    block_;$/;"	m	class:bm::bit_block_guard
block_add_deferred_lock	src/graphlab/distributed/graph_lock_manager.hpp	/^  void block_add_deferred_lock(size_t blockid, const dist_scope_request& req) {$/;"	f	class:graphlab::graph_lock_manager
block_add_deferred_lock	src/graphlab/distributed/graph_lock_manager.hpp	/^  void block_add_deferred_lock(size_t blockid, const std::vector<dist_scope_request>& reqs) {$/;"	f	class:graphlab::graph_lock_manager
block_alloc_	src/graphlab/extern/bitmagic/bmalloc.h	/^    BA            block_alloc_;$/;"	m	class:bm::mem_alloc
block_allocator	src/graphlab/extern/bitmagic/bmalloc.h	/^class block_allocator$/;"	c	namespace:bm
block_allocator_type	src/graphlab/extern/bitmagic/bmalloc.h	/^    typedef BA  block_allocator_type;$/;"	t	class:bm::mem_alloc
block_any_func	src/graphlab/extern/bitmagic/bmblocks.h	/^        block_any_func(const blocks_manager& bm) $/;"	f	class:bm::blocks_manager::block_any_func
block_any_func	src/graphlab/extern/bitmagic/bmblocks.h	/^    class block_any_func : public bm_func_base_const$/;"	c	class:bm::blocks_manager
block_bitcount	src/graphlab/extern/bitmagic/bmblocks.h	/^    bm::id_t block_bitcount(const bm::word_t* block, unsigned idx) const$/;"	f	class:bm::blocks_manager
block_bits_take_	src/graphlab/extern/bitmagic/bmrandom.h	/^    unsigned short*   block_bits_take_;$/;"	m	class:bm::random_subset
block_candidates_	src/graphlab/extern/bitmagic/bmrandom.h	/^    unsigned*         block_candidates_;$/;"	m	class:bm::random_subset
block_copy_func	src/graphlab/extern/bitmagic/bmblocks.h	/^        block_copy_func(blocks_manager&        bm_target, $/;"	f	class:bm::blocks_manager::block_copy_func
block_copy_func	src/graphlab/extern/bitmagic/bmblocks.h	/^    class block_copy_func : public bm_func_base$/;"	c	class:bm::blocks_manager
block_count	src/graphlab/extern/bitmagic/bmblocks.h	/^        bm::id_t block_count(const bm::word_t* block, unsigned idx) const$/;"	f	class:bm::blocks_manager::block_count_base
block_count	src/graphlab/extern/bitmagic/bmblocks.h	/^        bm::id_t block_count(const bm::word_t* block, unsigned idx)$/;"	f	class:bm::blocks_manager::block_count_change_func
block_count_arr_func	src/graphlab/extern/bitmagic/bmblocks.h	/^        block_count_arr_func(const blocks_manager& bm, unsigned* arr) $/;"	f	class:bm::blocks_manager::block_count_arr_func
block_count_arr_func	src/graphlab/extern/bitmagic/bmblocks.h	/^    class block_count_arr_func : public block_count_base$/;"	c	class:bm::blocks_manager
block_count_base	src/graphlab/extern/bitmagic/bmblocks.h	/^        block_count_base(const blocks_manager& bm) $/;"	f	class:bm::blocks_manager::block_count_base
block_count_base	src/graphlab/extern/bitmagic/bmblocks.h	/^    class block_count_base : public bm_func_base_const$/;"	c	class:bm::blocks_manager
block_count_change_func	src/graphlab/extern/bitmagic/bmblocks.h	/^        block_count_change_func(const blocks_manager& bm) $/;"	f	class:bm::blocks_manager::block_count_change_func
block_count_change_func	src/graphlab/extern/bitmagic/bmblocks.h	/^    class block_count_change_func : public bm_func_base_const$/;"	c	class:bm::blocks_manager
block_count_func	src/graphlab/extern/bitmagic/bmblocks.h	/^        block_count_func(const blocks_manager& bm) $/;"	f	class:bm::blocks_manager::block_count_func
block_count_func	src/graphlab/extern/bitmagic/bmblocks.h	/^    class block_count_func : public block_count_base$/;"	c	class:bm::blocks_manager
block_counts_	src/graphlab/extern/bitmagic/bmrandom.h	/^    unsigned*         block_counts_; $/;"	m	class:bm::random_subset
block_deferred_lock	src/graphlab/distributed/graph_lock_manager.hpp	/^  size_t block_deferred_lock(const std::vector<dist_scope_request>& reqs, size_t throttle_rate = 500) {$/;"	f	class:graphlab::graph_lock_manager
block_descr	src/graphlab/extern/bitmagic/bm.h	/^        union block_descr$/;"	u	class:bm::bvector::iterator_base
block_free_func	src/graphlab/extern/bitmagic/bmblocks.h	/^        block_free_func(blocks_manager& bm) : bm_func_base(bm) {}$/;"	f	class:bm::blocks_manager::block_free_func
block_free_func	src/graphlab/extern/bitmagic/bmblocks.h	/^    class block_free_func : public bm_func_base$/;"	c	class:bm::blocks_manager
block_idx	src/graphlab/extern/bitmagic/bmserial.h	/^    unsigned block_idx() const { return this->block_idx_; }$/;"	f	class:bm::serial_stream_iterator
block_idx_	src/graphlab/extern/bitmagic/bm.h	/^        unsigned                block_idx_;  \/\/!< Block index$/;"	m	class:bm::bvector::iterator_base
block_idx_	src/graphlab/extern/bitmagic/bmserial.h	/^    unsigned           block_idx_;  \/\/\/< current block index$/;"	m	class:bm::serial_stream_iterator
block_invert_func	src/graphlab/extern/bitmagic/bmblocks.h	/^        block_invert_func(blocks_manager& bm) $/;"	f	class:bm::blocks_manager::block_invert_func
block_invert_func	src/graphlab/extern/bitmagic/bmblocks.h	/^    class block_invert_func : public bm_func_base$/;"	c	class:bm::blocks_manager
block_one_func	src/graphlab/extern/bitmagic/bmblocks.h	/^        block_one_func(blocks_manager& bm) : bm_func_base(bm) {}$/;"	f	class:bm::blocks_manager::block_one_func
block_one_func	src/graphlab/extern/bitmagic/bmblocks.h	/^    class block_one_func : public bm_func_base$/;"	c	class:bm::blocks_manager
block_opt_func	src/graphlab/extern/bitmagic/bmblocks.h	/^        block_opt_func(blocks_manager& bm, $/;"	f	class:bm::blocks_manager::block_opt_func
block_opt_func	src/graphlab/extern/bitmagic/bmblocks.h	/^    class block_opt_func : public bm_func_base$/;"	c	class:bm::blocks_manager
block_range_scan	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^It block_range_scan(It  first, It last, unsigned nblock, unsigned* max_id)$/;"	f	namespace:bm
block_release	src/graphlab/distributed/graph_lock_manager.hpp	/^  void block_release(size_t blockid) {$/;"	f	class:graphlab::graph_lock_manager
block_release_partial	src/graphlab/distributed/graph_lock_manager.hpp	/^  void block_release_partial(size_t blockid,$/;"	f	class:graphlab::graph_lock_manager
block_request	src/graphlab/distributed/graph_lock_manager.hpp	/^    struct block_request {$/;"	s	class:graphlab::graph_lock_manager
block_set_table	src/graphlab/extern/bitmagic/bmfunc.h	/^template<bool T> struct block_set_table$/;"	s	namespace:bm
block_status	src/graphlab/distributed/graph_lock_manager.hpp	/^  size_t block_status(size_t blockid, dist_scope_request &newlock) {$/;"	f	class:graphlab::graph_lock_manager
block_status	src/graphlab/distributed/graph_lock_manager.hpp	/^  size_t block_status(size_t blockid, std::vector<dist_scope_request> &newlocks) {$/;"	f	class:graphlab::graph_lock_manager
block_try_acquire_from_pending_queue	src/graphlab/distributed/graph_lock_manager.hpp	/^  void block_try_acquire_from_pending_queue(block_request & blockreq) {$/;"	f	class:graphlab::graph_lock_manager
block_type_	src/graphlab/extern/bitmagic/bm.h	/^        unsigned                block_type_; \/\/!< Type of block. 0-Bit, 1-GAP$/;"	m	class:bm::bvector::iterator_base
block_type_	src/graphlab/extern/bitmagic/bmserial.h	/^    unsigned           block_type_; \/\/\/< current block type$/;"	m	class:bm::serial_stream_iterator
block_zero_func	src/graphlab/extern/bitmagic/bmblocks.h	/^        block_zero_func(blocks_manager& bm, bool free_mem) $/;"	f	class:bm::blocks_manager::block_zero_func
block_zero_func	src/graphlab/extern/bitmagic/bmblocks.h	/^    class block_zero_func : public bm_func_base$/;"	c	class:bm::blocks_manager
blockid	src/graphlab/distributed/graph_lock_manager.hpp	/^      size_t blockid;$/;"	m	struct:graphlab::graph_lock_manager::block_request
blockid	src/graphlab/distributed/graph_lock_manager.hpp	/^      size_t blockid;$/;"	m	struct:graphlab::graph_lock_manager::request_descriptor
blocking_queue	src/graphlab/util/blocking_queue.hpp	/^    blocking_queue() : m_alive(true) { }$/;"	f	class:graphlab::blocking_queue
blocking_queue	src/graphlab/util/blocking_queue.hpp	/^  class blocking_queue {$/;"	c	namespace:graphlab
blockman_	src/graphlab/extern/bitmagic/bm.h	/^    blocks_manager_type  blockman_;         \/\/!< bitblocks manager$/;"	m	class:bm::bvector
blockreqid	src/graphlab/distributed/graph_lock_manager.hpp	/^    atomic<size_t> blockreqid; \/\/\/ Keep an incremental counter over block ids$/;"	m	class:graphlab::graph_lock_manager
blockreqs	src/graphlab/distributed/graph_lock_manager.hpp	/^    boost::unordered_map<size_t, block_request> blockreqs;$/;"	m	class:graphlab::graph_lock_manager
blockreqslock	src/graphlab/distributed/graph_lock_manager.hpp	/^    rwlock blockreqslock;$/;"	m	class:graphlab::graph_lock_manager
blocks_	src/graphlab/extern/bitmagic/bmblocks.h	/^    bm::word_t***                          blocks_;$/;"	m	class:bm::blocks_manager
blocks_	src/graphlab/extern/bitmagic/bmrandom.h	/^    unsigned          blocks_;$/;"	m	class:bm::random_subset
blocks_manager	src/graphlab/extern/bitmagic/bmblocks.h	/^    blocks_manager(const blocks_manager& blockman)$/;"	f	class:bm::blocks_manager
blocks_manager	src/graphlab/extern/bitmagic/bmblocks.h	/^    blocks_manager(const gap_word_t* glevel_len, $/;"	f	class:bm::blocks_manager
blocks_manager	src/graphlab/extern/bitmagic/bmblocks.h	/^class blocks_manager$/;"	c	namespace:bm
blocks_manager_type	src/graphlab/extern/bitmagic/bm.h	/^    typedef blocks_manager<Alloc, MS>  blocks_manager_type;$/;"	t	class:bm::bvector
blocks_manager_type	src/graphlab/extern/bitmagic/bmrandom.h	/^        typename BV::blocks_manager_type  blocks_manager_type;$/;"	t	class:bm::random_subset
blocks_manager_type	src/graphlab/extern/bitmagic/bmserial.h	/^        typename BV::blocks_manager_type               blocks_manager_type;$/;"	t	class:bm::operation_deserializer
blocks_manager_type	src/graphlab/extern/bitmagic/bmserial.h	/^    typedef typename BV::blocks_manager_type blocks_manager_type;$/;"	t	class:bm::iterator_deserializer
blocks_manager_type	src/graphlab/extern/bitmagic/bmserial.h	/^    typedef typename BV::blocks_manager_type blocks_manager_type;$/;"	t	class:bm::serializer
blocks_manager_type	src/graphlab/extern/bitmagic/bmserial.h	/^   typedef typename BV::blocks_manager_type blocks_manager_type;$/;"	t	class:bm::deserializer
blocks_root	src/graphlab/extern/bitmagic/bmblocks.h	/^    bm::word_t***  blocks_root()$/;"	f	class:bm::blocks_manager
bm	src/graphlab/extern/bitmagic/bm.h	/^namespace bm$/;"	n
bm	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^namespace bm$/;"	n
bm	src/graphlab/extern/bitmagic/bmalloc.h	/^namespace bm$/;"	n
bm	src/graphlab/extern/bitmagic/bmblocks.h	/^namespace bm$/;"	n
bm	src/graphlab/extern/bitmagic/bmconst.h	/^namespace bm$/;"	n
bm	src/graphlab/extern/bitmagic/bmfunc.h	/^namespace bm$/;"	n
bm	src/graphlab/extern/bitmagic/bmfwd.h	/^namespace bm$/;"	n
bm	src/graphlab/extern/bitmagic/bmgamma.h	/^namespace bm$/;"	n
bm	src/graphlab/extern/bitmagic/bmrandom.h	/^namespace bm$/;"	n
bm	src/graphlab/extern/bitmagic/bmserial.h	/^namespace bm$/;"	n
bm	src/graphlab/extern/bitmagic/bmsse2.h	/^namespace bm$/;"	n
bm	src/graphlab/extern/bitmagic/bmsse4.h	/^namespace bm$/;"	n
bm	src/graphlab/extern/bitmagic/bmsse_util.h	/^namespace bm$/;"	n
bm	src/graphlab/extern/bitmagic/bmtrans.h	/^namespace bm$/;"	n
bm	src/graphlab/extern/bitmagic/bmutil.h	/^namespace bm$/;"	n
bm	src/graphlab/extern/bitmagic/bmvmin.h	/^namespace bm$/;"	n
bm	src/graphlab/extern/bitmagic/encoding.h	/^namespace bm$/;"	n
bm_	src/graphlab/extern/bitmagic/bmblocks.h	/^        blocks_manager&  bm_;$/;"	m	class:bm::blocks_manager::bm_func_base
bm_	src/graphlab/extern/bitmagic/bmblocks.h	/^        const blocks_manager&  bm_;$/;"	m	class:bm::blocks_manager::bm_func_base_const
bm_func_base	src/graphlab/extern/bitmagic/bmblocks.h	/^        bm_func_base(blocks_manager& bman) : bm_(bman) {}$/;"	f	class:bm::blocks_manager::bm_func_base
bm_func_base	src/graphlab/extern/bitmagic/bmblocks.h	/^    class bm_func_base$/;"	c	class:bm::blocks_manager
bm_func_base_const	src/graphlab/extern/bitmagic/bmblocks.h	/^        bm_func_base_const(const blocks_manager& bman) : bm_(bman) {}$/;"	f	class:bm::blocks_manager::bm_func_base_const
bm_func_base_const	src/graphlab/extern/bitmagic/bmblocks.h	/^    class bm_func_base_const$/;"	c	class:bm::blocks_manager
bm_src_	src/graphlab/extern/bitmagic/bmblocks.h	/^        const blocks_manager&  bm_src_;$/;"	m	class:bm::blocks_manager::block_copy_func
bman_	src/graphlab/extern/bitmagic/bmblocks.h	/^    BlocksManager& bman_;$/;"	m	class:bm::bit_block_guard
bmfor_each	src/graphlab/extern/bitmagic/bmfunc.h	/^template<class T, class F> F bmfor_each(T first, T last, F f)$/;"	f	namespace:bm
bndind	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *bndptr, *bndind;$/;"	m	struct:graphdef
bndptr	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *bndptr, *bndind;$/;"	m	struct:graphdef
bo	src/graphlab/extern/bitmagic/bmfunc.h	/^        bo()$/;"	f	struct:bm::globals::bo
bo	src/graphlab/extern/bitmagic/bmfunc.h	/^    struct bo$/;"	s	struct:bm::globals
book_is_scheduled	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    std::vector< bool > book_is_scheduled;$/;"	m	class:graphlab::distributed_collaborative_scheduler_wrapper
book_waiting_to_execute	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    std::vector< atomic<int> > book_waiting_to_execute;$/;"	m	class:graphlab::distributed_collaborative_scheduler_wrapper
book_waitlist	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    std::vector< std::vector< vertex_id_t > > book_waitlist;$/;"	m	class:graphlab::distributed_collaborative_scheduler_wrapper
booklock	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^	std::vector< spinlock >  booklock;$/;"	m	class:graphlab::distributed_collaborative_scheduler_wrapper
boost	src/graphlab/util/command_line_options.cpp	/^namespace boost {  $/;"	n	file:
boost	src/graphlab/util/command_line_options.hpp	/^namespace boost {$/;"	n
bound	apps/factor_graph_inference/factor_bp.cpp	/^  double bound;$/;"	m	struct:options	file:
bound	apps/image_denoise/loopybp_denoise.cpp	/^  double bound;$/;"	m	struct:options	file:
bout_	src/graphlab/extern/bitmagic/encoding.h	/^    TBitIO&  bout_;$/;"	m	class:bm::gamma_encoder
bp_	src/graphlab/extern/bitmagic/bmfunc.h	/^	B*        bp_;$/;"	m	class:bm::copy_to_array_functor_inc
bp_	src/graphlab/extern/bitmagic/bmfunc.h	/^	B* bp_;$/;"	m	class:bm::copy_to_array_functor
bp_update	apps/factor_graph_inference/factor_bp.hpp	/^void bp_update(gl_types::iscope& scope, $/;"	f
bp_update	apps/image_denoise/loopybp_denoise.cpp	/^void bp_update(gl_types::iscope& scope, $/;"	f
broadcast	src/graphlab/parallel/pthread_tools.hpp	/^    inline void broadcast() const {$/;"	f	class:graphlab::conditional
bsf_asm32	src/graphlab/extern/bitmagic/bmutil.h	/^BMFORCEINLINE unsigned int bsf_asm32(register unsigned int value)$/;"	f	namespace:bm
bsf_asm32	src/graphlab/extern/bitmagic/bmutil.h	/^BMFORCEINLINE unsigned int bsf_asm32(unsigned int value)$/;"	f	namespace:bm
bsf_asm32	src/graphlab/extern/bitmagic/bmutil.h	/^unsigned bsf_asm32(unsigned int v)$/;"	f	namespace:bm
bsr_asm32	src/graphlab/extern/bitmagic/bmutil.h	/^BMFORCEINLINE unsigned bsr_asm32(register unsigned int v)$/;"	f	namespace:bm
bsr_asm32	src/graphlab/extern/bitmagic/bmutil.h	/^BMFORCEINLINE unsigned int bsr_asm32(register unsigned int value)$/;"	f	namespace:bm
bsr_asm32	src/graphlab/extern/bitmagic/bmutil.h	/^BMFORCEINLINE unsigned int bsr_asm32(unsigned int value)$/;"	f	namespace:bm
buckets	src/graphlab/extern/metis/libmetis/struct.h	/^  ListNodeType **buckets;$/;"	m	struct:PQueueType
buf	src/graphlab/distributed/distributed_control.hpp	/^    char* buf;$/;"	m	struct:graphlab::distributed_control::dispatch_req_data
buf	src/graphlab/distributed/distributed_control.hpp	/^    char* buf;$/;"	m	struct:graphlab::distributed_control::send_req_data
buf_	src/graphlab/extern/bitmagic/encoding.h	/^    unsigned char*  buf_;$/;"	m	class:bm::encoder
buf_	src/graphlab/extern/bitmagic/encoding.h	/^   const unsigned char*   buf_;$/;"	m	class:bm::decoder_base
buffer	src/graphlab/distributed/distributed_control.hpp	/^    char* buffer;$/;"	m	struct:graphlab::distributed_control::recv_buffer
buffer	src/graphlab/distributed/distributed_control.hpp	/^  std::vector<recv_buffer> buffer;$/;"	m	class:graphlab::distributed_control
buffered_priority_updates	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^      std::vector<double> buffered_priority_updates;$/;"	m	struct:graphlab::clustered_priority_scheduler::cpustate
buffered_task_creations	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^      std::vector<update_task_type> buffered_task_creations;$/;"	m	struct:graphlab::clustered_priority_scheduler::cpustate
buffering_enabled	src/graphlab/schedulers/support/direct_callback.hpp	/^    bool buffering_enabled;$/;"	m	class:graphlab::direct_callback
buflen	src/graphlab/distributed/distributed_control.hpp	/^    size_t buflen;$/;"	m	struct:graphlab::distributed_control::recv_buffer
buftail	src/graphlab/distributed/distributed_control.hpp	/^    size_t buftail;$/;"	m	struct:graphlab::distributed_control::recv_buffer
build_graph	apps/shooting/shooting.cpp	/^bool build_graph(graph_type& graph,$/;"	f
build_metis_plan	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    void build_metis_plan(const Graph& g, $/;"	f	class:graphlab::execution_plan
build_plan_from_partition	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    void build_plan_from_partition(const Graph& g, $/;"	f	class:graphlab::execution_plan
build_plan_graph	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    void build_plan_graph(const Graph& g,$/;"	f	class:graphlab::execution_plan
build_topsort_plan	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    void build_topsort_plan(const Graph& g, $/;"	f	class:graphlab::execution_plan
bv_	src/graphlab/extern/bitmagic/bm.h	/^        bm::bvector<Alloc, MS>* bv_;         \/\/!< Pointer on parent bitvector$/;"	m	class:bm::bvector::iterator_base
bv_	src/graphlab/extern/bitmagic/bm.h	/^        bvector<Alloc, MS>& bv_;       \/\/!< Reference variable on the parent.$/;"	m	class:bm::bvector::reference
bv_size	src/graphlab/extern/bitmagic/bmserial.h	/^    unsigned bv_size() const { return bv_size_; }$/;"	f	class:bm::serial_stream_iterator
bv_size_	src/graphlab/extern/bitmagic/bmserial.h	/^    unsigned           bv_size_;$/;"	m	class:bm::serial_stream_iterator
bv_statistics	src/graphlab/extern/bitmagic/bmfunc.h	/^struct bv_statistics$/;"	s	namespace:bm
bvect_	src/graphlab/extern/bitmagic/bm.h	/^        bm::bvector<Alloc, MS>&   bvect_;$/;"	m	class:bm::bvector::insert_iterator
bvector	src/graphlab/extern/bitmagic/bm.h	/^    bvector(const bm::bvector<Alloc, MS>& bvect)$/;"	f	class:bm::bvector
bvector	src/graphlab/extern/bitmagic/bm.h	/^    bvector(const bvector<Alloc, MS>& bvect)$/;"	f	class:bm::bvector
bvector	src/graphlab/extern/bitmagic/bm.h	/^    bvector(size_type         bv_size,$/;"	f	class:bm::bvector
bvector	src/graphlab/extern/bitmagic/bm.h	/^    bvector(strategy          strat      = BM_BIT,$/;"	f	class:bm::bvector
bvector	src/graphlab/extern/bitmagic/bm.h	/^class bvector$/;"	c	namespace:bm
bvector_mini	src/graphlab/extern/bitmagic/bmvmin.h	/^    bvector_mini(const bvector_mini& bvect)$/;"	f	class:bm::bvector_mini
bvector_mini	src/graphlab/extern/bitmagic/bmvmin.h	/^    bvector_mini(unsigned size) $/;"	f	class:bm::bvector_mini
bvector_mini	src/graphlab/extern/bitmagic/bmvmin.h	/^template<class A> class bvector_mini$/;"	c	namespace:bm
bvector_type	src/graphlab/extern/bitmagic/bmserial.h	/^    typedef BV              bvector_type;$/;"	t	class:bm::iterator_deserializer
bvector_type	src/graphlab/extern/bitmagic/bmserial.h	/^    typedef BV bvector_type;$/;"	t	class:bm::deserializer
bvector_type	src/graphlab/extern/bitmagic/bmserial.h	/^    typedef BV bvector_type;$/;"	t	class:bm::operation_deserializer
bvmini	src/graphlab/extern/bitmagic/bmvmin.h	/^    bvmini(const bvmini& mset)$/;"	f	class:bm::bvmini
bvmini	src/graphlab/extern/bitmagic/bmvmin.h	/^    bvmini(int start_strategy = 0) $/;"	f	class:bm::bvmini
bvmini	src/graphlab/extern/bitmagic/bmvmin.h	/^template<size_t N> class bvmini$/;"	c	namespace:bm
byte_order	src/graphlab/extern/bitmagic/bmfunc.h	/^    static ByteOrder byte_order() { return _bo._byte_order; }$/;"	f	struct:bm::globals
byte_order_serial_	src/graphlab/extern/bitmagic/bmserial.h	/^    bool           byte_order_serial_;$/;"	m	class:bm::serializer
byte_order_serialization	src/graphlab/extern/bitmagic/bmserial.h	/^void serializer<BV>::byte_order_serialization(bool value)$/;"	f	class:bm::serializer
bytes_sent	src/graphlab/distributed/distributed_control.hpp	/^    size_t bytes_sent;$/;"	m	class:graphlab::distributed_control::background_send_thread
c	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  volatile unsigned int c;$/;"	m	struct:pthread_mlock_t	file:
c	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  volatile unsigned int c;$/;"	m	struct:win32_mlock_t	file:
c	src/graphlab/parallel/pthread_tools.hpp	/^    conditional c;$/;"	m	class:graphlab::barrier
c2i	src/graphlab/extern/metis/GKlib/gk_struct.h	/^    int *c2i;$/;"	m	struct:__anon14
cache	src/graphlab/distributed/distributed_hash_table.hpp	/^  cache_type cache;   \/\/\/ The cache table$/;"	m	class:graphlab::distributed_hash_table
cache_miss_rate	src/graphlab/distributed/distributed_hash_table.cpp	/^double distributed_hash_table::cache_miss_rate() {$/;"	f	class:graphlab::distributed_hash_table
cache_size	src/graphlab/distributed/distributed_hash_table.hpp	/^  size_t cache_size() const {$/;"	f	class:graphlab::distributed_hash_table
cache_type	src/graphlab/distributed/distributed_hash_table.hpp	/^  typedef boost::unordered_map<size_t, any_lru_list*> cache_type;$/;"	t	class:graphlab::distributed_hash_table
cache_write_handler	src/graphlab/distributed/distributed_hash_table.cpp	/^void cache_write_handler(distributed_control& dc,$/;"	f	namespace:graphlab
cached_any	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    	cached_any() {valid=false;}$/;"	f	struct:graphlab::distributed_fullsweep_sdm::cached_any
cached_any	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    struct cached_any {$/;"	s	class:graphlab::distributed_fullsweep_sdm
cachelock	src/graphlab/distributed/distributed_hash_table.hpp	/^  spinlock cachelock; \/\/\/ lock for the cache datastructures$/;"	m	class:graphlab::distributed_hash_table
caching	src/graphlab/distributed/graph_lock_manager.hpp	/^    bool caching;$/;"	m	class:graphlab::graph_lock_manager
caching	src/graphlab/distributed/lock_manager.hpp	/^  bool caching;$/;"	m	class:graphlab::distributed_lock_manager
calc_stat	src/graphlab/extern/bitmagic/bm.h	/^void bvector<Alloc, MS>::calc_stat(struct bvector<Alloc, MS>::statistics* st) const$/;"	f	class:bm::bvector
callback	src/graphlab/engine/synchronous_engine.hpp	/^    binary_callback_type callback;$/;"	m	class:graphlab::synchronous_engine
callback	src/graphlab/schedulers/colored_scheduler.hpp	/^    unused_scheduler_callback<Graph> callback;$/;"	m	class:graphlab::colored_scheduler
callback	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    unused_scheduler_callback<Graph> callback;$/;"	m	class:graphlab::round_robin_scheduler
callback	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    unused_scheduler_callback<Graph> callback;$/;"	m	class:graphlab::set_scheduler
callback_type	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    typedef icallback<Graph> callback_type;$/;"	t	class:graphlab::distributed_collaborative_scheduler_wrapper
callback_type	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    typedef typename base::callback_type callback_type;$/;"	t	class:graphlab::distributed_phased_sweep_scheduler
callback_type	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^    typedef typename base::callback_type callback_type;$/;"	t	class:graphlab::distributed_round_robin_scheduler
callback_type	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^    typedef typename base::callback_type callback_type;$/;"	t	class:graphlab::distributed_round_robin_scheduler2
callback_type	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    typedef icallback<Graph> callback_type;$/;"	t	class:graphlab::distributed_scheduler_wrapper
callback_type	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    typedef typename base::callback_type callback_type;$/;"	t	class:graphlab::clustered_priority_scheduler
callback_type	src/graphlab/schedulers/colored_scheduler.hpp	/^    typedef typename base::callback_type        callback_type;$/;"	t	class:graphlab::colored_scheduler
callback_type	src/graphlab/schedulers/fifo_scheduler.hpp	/^    typedef typename base::callback_type callback_type;$/;"	t	class:graphlab::fifo_scheduler
callback_type	src/graphlab/schedulers/ischeduler.hpp	/^    typedef icallback<Graph> callback_type;$/;"	t	class:graphlab::ischeduler
callback_type	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    typedef typename base::callback_type callback_type;$/;"	t	class:graphlab::multiqueue_fifo_scheduler
callback_type	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    typedef typename base::callback_type        callback_type;$/;"	t	class:graphlab::multiqueue_priority_scheduler
callback_type	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^    typedef typename base::callback_type callback_type;$/;"	t	class:graphlab::multiqueue_scheduler
callback_type	src/graphlab/schedulers/priority_scheduler.hpp	/^    typedef typename base::callback_type callback_type;$/;"	t	class:graphlab::priority_scheduler
callback_type	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    typedef typename base::callback_type callback_type;$/;"	t	class:graphlab::round_robin_scheduler
callback_type	src/graphlab/schedulers/sampling_scheduler.hpp	/^    typedef typename base::callback_type callback_type;$/;"	t	class:graphlab::sampling_scheduler
callback_type	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    typedef typename base::callback_type callback_type;$/;"	t	class:graphlab::set_scheduler
callback_type	src/graphlab/schedulers/splash_scheduler.hpp	/^    typedef typename base::callback_type callback_type;$/;"	t	class:graphlab::splash_scheduler
callback_type	src/graphlab/schedulers/sweep_scheduler.hpp	/^    typedef typename base::callback_type callback_type;$/;"	t	class:graphlab::sweep_scheduler
callback_type	src/graphlab/tasks/update_task.hpp	/^    typedef icallback<Graph> callback_type;$/;"	t	class:graphlab::update_task
callbacks	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    std::vector<direct_callback<Graph> > callbacks;$/;"	m	class:graphlab::distributed_collaborative_scheduler_wrapper
callbacks	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    std::vector< direct_callback<Graph>* > callbacks;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
callbacks	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  std::vector< direct_callback<Graph> > callbacks;  \/\/\/ callback for each processor$/;"	m	class:graphlab::distributed_round_robin_scheduler
callbacks	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  std::vector< direct_callback<Graph> > callbacks;  \/\/\/ callback for each processor$/;"	m	class:graphlab::distributed_round_robin_scheduler2
callbacks	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    std::vector<direct_callback<Graph> > callbacks;$/;"	m	class:graphlab::distributed_scheduler_wrapper
callbacks	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    std::vector<direct_callback<Graph> > callbacks;$/;"	m	class:graphlab::clustered_priority_scheduler
callbacks	src/graphlab/schedulers/fifo_scheduler.hpp	/^    std::vector< direct_callback<Graph> > callbacks; $/;"	m	class:graphlab::fifo_scheduler
callbacks	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    std::vector<direct_callback<Graph> > callbacks; $/;"	m	class:graphlab::multiqueue_fifo_scheduler
callbacks	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    std::vector<direct_callback<Graph> > callbacks; $/;"	m	class:graphlab::multiqueue_priority_scheduler
callbacks	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^    std::vector< direct_callback<Graph> > callbacks; $/;"	m	class:graphlab::multiqueue_scheduler
callbacks	src/graphlab/schedulers/priority_scheduler.hpp	/^    std::vector<direct_callback<Graph> > callbacks;$/;"	m	class:graphlab::priority_scheduler
callbacks	src/graphlab/schedulers/sampling_scheduler.hpp	/^    std::vector< direct_callback<Graph> > callbacks;$/;"	m	class:graphlab::sampling_scheduler
callbacks	src/graphlab/schedulers/splash_scheduler.hpp	/^    std::vector<direct_callback<Graph> > callbacks;$/;"	m	class:graphlab::splash_scheduler
callbacks	src/graphlab/schedulers/sweep_scheduler.hpp	/^    std::vector< direct_callback<Graph>* > callbacks;$/;"	m	class:graphlab::sweep_scheduler
called	src/graphlab/parallel/pthread_tools.hpp	/^    int called;$/;"	m	class:graphlab::barrier
calloc_must_clear	src/graphlab/extern/metis/GKlib/dlmalloc.c	859;"	d	file:
calloc_must_clear	src/graphlab/extern/metis/GKlib/dlmalloc.c	861;"	d	file:
can_avoid_vtx_request	src/graphlab/distributed/graph_lock_manager.hpp	/^  inline bool can_avoid_vtx_request(vertex_id_t vid, lock_type locktype) {$/;"	f	class:graphlab::graph_lock_manager
cancel_sleep_critical_section	src/graphlab/util/shared_termination.hpp	/^    void cancel_sleep_critical_section(size_t cpuid) {$/;"	f	class:graphlab::shared_termination
cancel_stage1	src/graphlab/util/optimal_termination.hpp	/^    void cancel_stage1(size_t cpuid) {$/;"	f	class:graphlab::optimal_termination
cancel_stage2	src/graphlab/util/optimal_termination.hpp	/^    void cancel_stage2(size_t cpuid) {$/;"	f	class:graphlab::optimal_termination
candidates_count_	src/graphlab/extern/bitmagic/bmrandom.h	/^    unsigned          candidates_count_;$/;"	m	class:bm::random_subset
capacity	src/graphlab/extern/bitmagic/bm.h	/^    size_type capacity() const $/;"	f	class:bm::bvector
capacity	src/graphlab/extern/bitmagic/bmblocks.h	/^    bm::id_t capacity() const$/;"	f	class:bm::blocks_manager
cas	src/graphlab/extern/metis/GKlib/gk_struct.h	/^	atom **cas;$/;"	m	struct:__anon13
ccore	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype maxcore, ccore;$/;"	m	struct:workspacedef
cdegree	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype cdegree;$/;"	m	struct:workspacedef
chainid	src/graphlab/extern/metis/GKlib/gk_struct.h	/^	char			chainid;	$/;"	m	struct:__anon12
change_mparam	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static int change_mparam(int param_number, int value) {$/;"	f	file:
char_gt	src/graphlab/extern/metis/GKlib/sort.c	35;"	d	file:
char_lt	src/graphlab/extern/metis/GKlib/sort.c	25;"	d	file:
check_all_terminators	src/graphlab/distributed/distributed_engine.hpp	/^    bool check_all_terminators() {$/;"	f	class:graphlab::distributed_engine
check_all_terminators	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    bool check_all_terminators() {$/;"	f	class:graphlab::pushy_distributed_engine
check_all_terminators	src/graphlab/engine/sim_thread_engine.hpp	/^    bool check_all_terminators() {$/;"	f	class:graphlab::sim_thread_engine
check_all_terminators	src/graphlab/engine/synchronous_engine.hpp	/^    bool check_all_terminators() {$/;"	f	class:graphlab::synchronous_engine
check_all_terminators	src/graphlab/engine/threaded_engine.hpp	/^    bool check_all_terminators() {$/;"	f	class:graphlab::threaded_engine
check_allocate_block	src/graphlab/extern/bitmagic/bmblocks.h	/^    bm::word_t* check_allocate_block(unsigned nb, $/;"	f	class:bm::blocks_manager
check_allocate_tempblock	src/graphlab/extern/bitmagic/bmblocks.h	/^    bm::word_t* check_allocate_tempblock()$/;"	f	class:bm::blocks_manager
check_checksum	src/graphlab/distributed/graph/distributed_graph.hpp	/^    static void check_checksum(distributed_control& dc, size_t source, void * ptr, size_t len, size_t check) {$/;"	f	class:graphlab::distributed_graph
check_free_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	1339;"	d	file:
check_free_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	1347;"	d	file:
check_inuse_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	1340;"	d	file:
check_inuse_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	1348;"	d	file:
check_malloc_state	src/graphlab/extern/metis/GKlib/dlmalloc.c	1343;"	d	file:
check_malloc_state	src/graphlab/extern/metis/GKlib/dlmalloc.c	1352;"	d	file:
check_malloced_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	1341;"	d	file:
check_malloced_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	1350;"	d	file:
check_mmapped_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	1342;"	d	file:
check_mmapped_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	1351;"	d	file:
check_or_next	src/graphlab/extern/bitmagic/bm.h	/^bm::id_t bvector<Alloc, MS>::check_or_next(bm::id_t prev) const$/;"	f	class:bm::bvector
check_or_next_extract	src/graphlab/extern/bitmagic/bm.h	/^bm::id_t bvector<Alloc, MS>::check_or_next_extract(bm::id_t prev)$/;"	f	class:bm::bvector
check_top_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	1344;"	d	file:
check_top_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	1349;"	d	file:
checkpoint_cond	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^	conditional checkpoint_cond;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
checkpoint_cond	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^	conditional checkpoint_cond;$/;"	m	class:graphlab::distributed_round_robin_scheduler
checkpoint_cond	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  conditional checkpoint_cond;$/;"	m	class:graphlab::distributed_round_robin_scheduler2
checkpoint_iter	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^	std::list< vertex_id_t > checkpoint_iter;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
checkpoint_iter	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^	std::list< vertex_id_t > checkpoint_iter;$/;"	m	class:graphlab::distributed_round_robin_scheduler
checkpoint_iter	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  std::list< vertex_id_t > checkpoint_iter;$/;"	m	class:graphlab::distributed_round_robin_scheduler2
checkpoint_lock	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^	mutex checkpoint_lock;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
checkpoint_lock	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^	mutex checkpoint_lock;$/;"	m	class:graphlab::distributed_round_robin_scheduler
checkpoint_lock	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  mutex checkpoint_lock;$/;"	m	class:graphlab::distributed_round_robin_scheduler2
checkpoint_on	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^	bool checkpoint_on;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
checkpoint_on	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^	bool checkpoint_on;$/;"	m	class:graphlab::distributed_round_robin_scheduler
checkpoint_on	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  bool checkpoint_on;$/;"	m	class:graphlab::distributed_round_robin_scheduler2
checkpoints	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^	std::vector< vertex_id_t > checkpoints;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
checkpoints	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^    std::vector< vertex_id_t > checkpoints;$/;"	m	class:graphlab::distributed_round_robin_scheduler
checkpoints	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^    std::vector< vertex_id_t > checkpoints;$/;"	m	class:graphlab::distributed_round_robin_scheduler2
checksum	src/graphlab/distributed/graph/distributed_graph.hpp	/^    size_t checksum;$/;"	m	class:graphlab::distributed_graph
child	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  struct malloc_tree_chunk* child[2];$/;"	m	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk	file:
childof	src/graphlab/distributed/graph_lock_manager.hpp	/^      size_t childof;$/;"	m	struct:graphlab::graph_lock_manager::request_descriptor
children	src/graphlab/monitoring/monitor_multiplexer.hpp	/^    std::vector< imonitor_type* > children;$/;"	m	class:graphlab::monitor_multiplexer
chunk2mem	src/graphlab/extern/metis/GKlib/dlmalloc.c	780;"	d	file:
chunk_minus_offset	src/graphlab/extern/metis/GKlib/dlmalloc.c	829;"	d	file:
chunk_plus_offset	src/graphlab/extern/metis/GKlib/dlmalloc.c	828;"	d	file:
chunksize	src/graphlab/extern/metis/GKlib/dlmalloc.c	822;"	d	file:
cinuse	src/graphlab/extern/metis/GKlib/dlmalloc.c	820;"	d	file:
ckey_gt	src/graphlab/extern/metis/GKlib/sort.c	137;"	d	file:
ckey_lt	src/graphlab/extern/metis/GKlib/sort.c	127;"	d	file:
classify	apps/svm/svm.cpp	/^bool classify(graph_type &g, vertex_id_t vertexid){$/;"	f
clear	src/graphlab/distributed/graph/cloned_graph.hpp	/^    void clear() {$/;"	f	class:graphlab::cloned_graph
clear	src/graphlab/distributed/graph/distributed_graph.hpp	/^    void clear() {$/;"	f	class:graphlab::distributed_graph
clear	src/graphlab/extern/bitmagic/bm.h	/^    void clear(bool free_mem = false)$/;"	f	class:bm::bvector
clear	src/graphlab/graph/graph.hpp	/^    void clear() {$/;"	f	class:graphlab::graph
clear	src/graphlab/util/dense_bitset.hpp	/^    inline void clear() {$/;"	f	class:graphlab::dense_bitset
clear	src/graphlab/util/dense_bitset.hpp	/^    inline void clear() {$/;"	f	class:graphlab::fixed_dense_bitset
clear	src/graphlab/util/fast_multinomial.hpp	/^    void clear() {$/;"	f	class:graphlab::fast_multinomial
clear	src/graphlab/util/generics/blob.hpp	/^    void clear() {$/;"	f	class:graphlab::blob
clear	src/graphlab/util/mutable_queue.hpp	/^    void clear() {$/;"	f	class:graphlab::mutable_queue
clear	src/graphlab/util/synchronized_unordered_map.hpp	/^   void clear() {$/;"	f	class:graphlab::synchronized_unordered_map
clear_bit	src/graphlab/extern/bitmagic/bm.h	/^    void clear_bit(bm::id_t n)$/;"	f	class:bm::bvector
clear_bit	src/graphlab/extern/bitmagic/bmvmin.h	/^    void clear_bit(unsigned pos)$/;"	f	class:bm::bvector_mini
clear_bit	src/graphlab/util/dense_bitset.hpp	/^    inline bool clear_bit(uint32_t b) {$/;"	f	class:graphlab::dense_bitset
clear_bit	src/graphlab/util/dense_bitset.hpp	/^    inline bool clear_bit(uint32_t b) {$/;"	f	class:graphlab::fixed_dense_bitset
clear_bit_unsync	src/graphlab/util/dense_bitset.hpp	/^    inline bool clear_bit_unsync(uint32_t b) {$/;"	f	class:graphlab::dense_bitset
clear_bit_unsync	src/graphlab/util/dense_bitset.hpp	/^    inline bool clear_bit_unsync(uint32_t b) {$/;"	f	class:graphlab::fixed_dense_bitset
clear_cinuse	src/graphlab/extern/metis/GKlib/dlmalloc.c	825;"	d	file:
clear_dirty_flags	src/graphlab/distributed/lock_manager.hpp	/^  void clear_dirty_flags() {$/;"	f	class:graphlab::distributed_lock_manager
clear_pinuse	src/graphlab/extern/metis/GKlib/dlmalloc.c	824;"	d	file:
clear_smallmap	src/graphlab/extern/metis/GKlib/dlmalloc.c	1451;"	d	file:
clear_terminators	src/graphlab/distributed/distributed_engine.hpp	/^    void clear_terminators() {$/;"	f	class:graphlab::distributed_engine
clear_terminators	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    void clear_terminators() {$/;"	f	class:graphlab::pushy_distributed_engine
clear_terminators	src/graphlab/engine/asynchronous_engine.hpp	/^    void clear_terminators() {$/;"	f	class:graphlab::asynchronous_engine
clear_terminators	src/graphlab/engine/sim_thread_engine.hpp	/^    void clear_terminators() {$/;"	f	class:graphlab::sim_thread_engine
clear_terminators	src/graphlab/engine/synchronous_engine.hpp	/^    void clear_terminators() {$/;"	f	class:graphlab::synchronous_engine
clear_terminators	src/graphlab/engine/threaded_engine.hpp	/^    void clear_terminators() {$/;"	f	class:graphlab::threaded_engine
clear_treemap	src/graphlab/extern/metis/GKlib/dlmalloc.c	1455;"	d	file:
clone	src/graphlab/util/generics/any.hpp	/^      __any_placeholder * clone() const {$/;"	f	class:graphlab::any::holder
cloned_graph	src/graphlab/distributed/graph/cloned_graph.hpp	/^    cloned_graph():distributed(false), constant_edges(false) {    }$/;"	f	class:graphlab::cloned_graph
cloned_graph	src/graphlab/distributed/graph/cloned_graph.hpp	/^    cloned_graph(const graph<VertexData, EdgeData> &g): distributed(false), constant_edges(false) { $/;"	f	class:graphlab::cloned_graph
cloned_graph	src/graphlab/distributed/graph/cloned_graph.hpp	/^    cloned_graph(size_t nverts) : $/;"	f	class:graphlab::cloned_graph
cloned_graph	src/graphlab/distributed/graph/cloned_graph.hpp	/^  class cloned_graph {$/;"	c	namespace:graphlab
cloneedges	src/graphlab/engine/synchronous_engine.hpp	/^    bool cloneedges;$/;"	m	class:graphlab::synchronous_engine
close_all_connections	src/graphlab/distributed/distributed_control.cpp	/^void distributed_control::close_all_connections() {$/;"	f	class:graphlab::distributed_control
cluster	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    void cluster(size_t verticespercluster,$/;"	f	class:graphlab::clustered_priority_scheduler
cluster_offset	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^      size_t cluster_offset;  \/\/ the next "unread" offset in the$/;"	m	struct:graphlab::clustered_priority_scheduler::cpustate
clustered_priority_scheduler	src/graphlab.hpp	/^    typedef graphlab::clustered_priority_scheduler<graph> clustered_priority_scheduler;$/;"	t	struct:graphlab::types
clustered_priority_scheduler	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    clustered_priority_scheduler(iengine_type* engine,$/;"	f	class:graphlab::clustered_priority_scheduler
clustered_priority_scheduler	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^  class clustered_priority_scheduler : $/;"	c	namespace:graphlab
clusterid	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^      int clusterid; \/\/ the cluster ID this cpu is currently running$/;"	m	struct:graphlab::clustered_priority_scheduler::cpustate
clustersize	apps/image_denoise/loopybp_denoise.cpp	/^  size_t clustersize;$/;"	m	struct:options	file:
cmap	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *cmap;$/;"	m	struct:graphdef
cmpxchg	src/graphlab/parallel/pthread_tools.hpp	533;"	d
cmpxchg	src/graphlab/parallel/pthread_tools.hpp	598;"	d
cnt	src/graphlab/extern/bitmagic/bm.h	/^            unsigned            cnt;      \/\/!< Number of ON bits$/;"	m	struct:bm::bvector::iterator_base::bitblock_descr
cnt_	src/graphlab/extern/bitmagic/bmfunc.h	/^    unsigned cnt_;$/;"	m	class:bm::decoder_range_adapter
coarser	src/graphlab/extern/metis/libmetis/struct.h	/^  struct graphdef *coarser, *finer;$/;"	m	struct:graphdef	typeref:struct:graphdef::graphdef
colind	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  int *rowind, *colind;$/;"	m	struct:__anon7
color	apps/demo/concise_demo.cpp	/^  bool color; \/\/ black == FALSE, red == TRUE,$/;"	m	struct:vertex_data	file:
color	apps/demo/demo.cpp	/^  bool color;     \/\/ black == FALSE, red == TRUE,$/;"	m	struct:vertex_data	file:
color	apps/factor_graph_inference/factor_gibbs.hpp	/^  uint16_t color;$/;"	m	struct:vertex_data
color	apps/image_denoise/gibbs_denoise.cpp	/^  unsigned char color;$/;"	m	struct:vertex_data	file:
color	src/graphlab/graph/graph.hpp	/^    const vertex_color_type& color(vertex_id_t vertex) const {$/;"	f	class:graphlab::graph
color	src/graphlab/graph/graph.hpp	/^    vertex_color_type& color(vertex_id_t vertex) {$/;"	f	class:graphlab::graph
color	src/graphlab/schedulers/colored_scheduler.hpp	/^    atomic<size_t> color;$/;"	m	class:graphlab::colored_scheduler
color_blocks	src/graphlab/schedulers/colored_scheduler.hpp	/^    std::vector< std::vector< vertex_id_t> > color_blocks;$/;"	m	class:graphlab::colored_scheduler
color_schedule	apps/image_denoise/gibbs_denoise.cpp	/^void color_schedule(gl::set_scheduler &sched) {$/;"	f
color_update	apps/factor_graph_inference/factor_gibbs.hpp	/^void color_update(gl_types::iscope& scope, $/;"	f
colored_scheduler	src/graphlab.hpp	/^    typedef graphlab::colored_scheduler<graph> colored_scheduler;$/;"	t	struct:graphlab::types
colored_scheduler	src/graphlab/schedulers/colored_scheduler.hpp	/^    colored_scheduler(iengine_type* engine,$/;"	f	class:graphlab::colored_scheduler
colored_scheduler	src/graphlab/schedulers/colored_scheduler.hpp	/^  class colored_scheduler : public ischeduler<Graph> {$/;"	c	namespace:graphlab
colptr	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  int *rowptr, *colptr;$/;"	m	struct:__anon7
cols	apps/image_denoise/gibbs_denoise.cpp	/^  size_t cols;$/;"	m	struct:options	file:
cols	apps/image_denoise/image.hpp	/^  size_t cols() const { return _cols; }$/;"	f	class:image
cols	apps/image_denoise/loopybp_denoise.cpp	/^  size_t cols;$/;"	m	struct:options	file:
cols	src/graphlab/extern/bitmagic/bmtrans.h	/^    static unsigned cols() { return COLS; }$/;"	f	struct:bm::tmatrix
combine_and	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^void combine_and(BV& bv, It  first, It last)$/;"	f	namespace:bm
combine_and	src/graphlab/extern/bitmagic/bmvmin.h	/^    void combine_and(const bvector_mini& bvect)$/;"	f	class:bm::bvector_mini
combine_and_sorted	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^void combine_and_sorted(BV& bv, It  first, It last)$/;"	f	namespace:bm
combine_any_operation_with_block	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^unsigned combine_any_operation_with_block(const bm::word_t* blk,$/;"	f	namespace:bm
combine_any_operation_with_block	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^void combine_any_operation_with_block(const bm::word_t* blk,$/;"	f	namespace:bm
combine_count_operation_with_block	src/graphlab/extern/bitmagic/bm.h	/^    void combine_count_operation_with_block(unsigned nb,$/;"	f	class:bm::bvector
combine_count_operation_with_block	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^unsigned combine_count_operation_with_block(const bm::word_t* blk,$/;"	f	namespace:bm
combine_count_operation_with_block	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^void combine_count_operation_with_block(const bm::word_t* blk,$/;"	f	namespace:bm
combine_operation	src/graphlab/extern/bitmagic/bm.h	/^void bvector<Alloc, MS>::combine_operation($/;"	f	class:bm::bvector
combine_operation_with_block	src/graphlab/extern/bitmagic/bm.h	/^    void combine_operation_with_block(unsigned nb,$/;"	f	class:bm::bvector
combine_operation_with_block	src/graphlab/extern/bitmagic/bm.h	/^bvector<Alloc, MS>::combine_operation_with_block(unsigned          nb,$/;"	f	class:bm::bvector
combine_or	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^void combine_or(BV& bv, It  first, It last)$/;"	f	namespace:bm
combine_or	src/graphlab/extern/bitmagic/bmvmin.h	/^    void combine_or(const bvector_mini& bvect)$/;"	f	class:bm::bvector_mini
combine_sub	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^void combine_sub(BV& bv, It  first, It last)$/;"	f	namespace:bm
combine_sub	src/graphlab/extern/bitmagic/bmvmin.h	/^    void combine_sub(const bvector_mini& bvect)$/;"	f	class:bm::bvector_mini
combine_xor	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^void combine_xor(BV& bv, It  first, It last)$/;"	f	namespace:bm
combine_xor	src/graphlab/extern/bitmagic/bmvmin.h	/^    void combine_xor(const bvector_mini& bvect)$/;"	f	class:bm::bvector_mini
command_line_options	src/graphlab.hpp	/^    typedef graphlab::command_line_options command_line_options;$/;"	t	struct:graphlab::types
command_line_options	src/graphlab/util/command_line_options.hpp	/^    command_line_options(const std::string& desc_str = "A GraphLab program.",$/;"	f	class:graphlab::command_line_options
command_line_options	src/graphlab/util/command_line_options.hpp	/^  class command_line_options : public engine_options {$/;"	c	namespace:graphlab
commit	src/graphlab/distributed/distributed_scope.hpp	/^    void commit() {$/;"	f	class:graphlab::distributed_scope
commit	src/graphlab/schedulers/icallback.hpp	/^     virtual void commit() {}$/;"	f	class:graphlab::icallback
commit	src/graphlab/schedulers/support/binary_scheduler_callback.hpp	/^    void commit() { };$/;"	f	class:graphlab::binary_scheduler_callback
commit	src/graphlab/schedulers/support/direct_callback.hpp	/^    void commit() {$/;"	f	class:graphlab::direct_callback
commit	src/graphlab/schedulers/support/unused_scheduler_callback.hpp	/^    void commit() { };$/;"	f	class:graphlab::unused_scheduler_callback
commit	src/graphlab/scope/general_scope.hpp	/^    void commit() {}$/;"	f	class:graphlab::general_scope
commit	src/graphlab/scope/synchronous_scope.hpp	/^    void commit() {};$/;"	f	class:graphlab::synchronous_scope
comms_barrier	src/graphlab/distributed/distributed_control.cpp	/^void distributed_control::comms_barrier() {$/;"	f	class:graphlab::distributed_control
compare	src/graphlab/extern/bitmagic/bm.h	/^int bvector<Alloc, MS>::compare(const bvector<Alloc, MS>& bvect) const$/;"	f	class:bm::bvector
compare	src/graphlab/extern/bitmagic/bmvmin.h	/^    int compare(const bvector_mini& bvect)$/;"	f	class:bm::bvector_mini
compile_flags	src/graphlab/engine/engine_options.hpp	/^    std::string compile_flags;$/;"	m	struct:graphlab::engine_options
complete	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    bool complete;$/;"	m	class:graphlab::set_scheduler
completed	src/graphlab/schedulers/colored_scheduler.hpp	/^    bool completed;$/;"	m	class:graphlab::colored_scheduler
completed	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    bool completed() const {$/;"	f	class:graphlab::set_scheduler
completed_job	src/graphlab/util/task_count_termination.hpp	/^    void completed_job() {$/;"	f	class:graphlab::task_count_termination
completed_task	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    void completed_task(size_t cpuid, $/;"	f	class:graphlab::distributed_collaborative_scheduler_wrapper
completed_task	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    void completed_task(size_t cpuid, const update_task_type &task) { $/;"	f	class:graphlab::distributed_phased_sweep_scheduler
completed_task	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  void completed_task(size_t cpuid, const update_task_type &task){ };$/;"	f	class:graphlab::distributed_round_robin_scheduler
completed_task	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  void completed_task(size_t cpuid, const update_task_type &task){ };$/;"	f	class:graphlab::distributed_round_robin_scheduler2
completed_task	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    void completed_task(size_t cpuid, $/;"	f	class:graphlab::distributed_scheduler_wrapper
completed_task	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    void completed_task(size_t cpuid, const update_task_type &task) {$/;"	f	class:graphlab::clustered_priority_scheduler
completed_task	src/graphlab/schedulers/colored_scheduler.hpp	/^    void completed_task(size_t cpuid, $/;"	f	class:graphlab::colored_scheduler
completed_task	src/graphlab/schedulers/fifo_scheduler.hpp	/^    void completed_task(size_t cpuid, const update_task_type &task) {$/;"	f	class:graphlab::fifo_scheduler
completed_task	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    void completed_task(size_t cpuid, const update_task_type &task) {$/;"	f	class:graphlab::multiqueue_fifo_scheduler
completed_task	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    void completed_task(size_t cpuid, const update_task_type &task) {$/;"	f	class:graphlab::multiqueue_priority_scheduler
completed_task	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^    void completed_task(size_t cpuid, const update_task_type &task) {$/;"	f	class:graphlab::multiqueue_scheduler
completed_task	src/graphlab/schedulers/priority_scheduler.hpp	/^    void completed_task(size_t cpuid, const update_task_type& task) {$/;"	f	class:graphlab::priority_scheduler
completed_task	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    void completed_task(size_t cpuid, const update_task_type &task){ };$/;"	f	class:graphlab::round_robin_scheduler
completed_task	src/graphlab/schedulers/sampling_scheduler.hpp	/^    void completed_task(size_t cpuid, const update_task_type& task) {$/;"	f	class:graphlab::sampling_scheduler
completed_task	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    void completed_task(size_t cpuid) {$/;"	f	class:graphlab::execution_plan
completed_task	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    void completed_task(size_t cpuid, const update_task_type& task) {$/;"	f	class:graphlab::set_scheduler
completed_task	src/graphlab/schedulers/splash_scheduler.hpp	/^    void completed_task(size_t cpuid, const update_task_type &task) { }$/;"	f	class:graphlab::splash_scheduler
completed_task	src/graphlab/schedulers/sweep_scheduler.hpp	/^    void completed_task(size_t cpuid, const update_task_type &task) { }$/;"	f	class:graphlab::sweep_scheduler
compression_level_	src/graphlab/extern/bitmagic/bmserial.h	/^    unsigned       compression_level_;$/;"	m	class:bm::serializer
compute_bit2idx	src/graphlab/extern/metis/GKlib/dlmalloc.c	1461;"	d	file:
compute_bit2idx	src/graphlab/extern/metis/GKlib/dlmalloc.c	1468;"	d	file:
compute_bit2idx	src/graphlab/extern/metis/GKlib/dlmalloc.c	1477;"	d	file:
compute_bit2idx	src/graphlab/extern/metis/GKlib/dlmalloc.c	1480;"	d	file:
compute_coloring	src/graphlab/graph/graph.hpp	/^    size_t compute_coloring() {$/;"	f	class:graphlab::graph
compute_deserializer_id	src/graphlab/util/generics/any.hpp	/^      static void compute_deserializer_id() {$/;"	f	class:graphlab::any::any_registration
compute_top_block_size	src/graphlab/extern/bitmagic/bmblocks.h	/^    unsigned compute_top_block_size(bm::id_t bits_to_store)$/;"	f	class:bm::blocks_manager
compute_tree_index	src/graphlab/extern/metis/GKlib/dlmalloc.c	1381;"	d	file:
compute_tree_index	src/graphlab/extern/metis/GKlib/dlmalloc.c	1396;"	d	file:
compute_tree_index	src/graphlab/extern/metis/GKlib/dlmalloc.c	1410;"	d	file:
compute_vertex_priority	apps/pagerank/pagerankapp.cpp	/^bool compute_vertex_priority(graphlab::vertex_id_t v,$/;"	f
concomp_graph	apps/concomp/concomp.cpp	/^typedef graphlab::graph<vertex_data, edge_data> concomp_graph;$/;"	t	file:
concomp_graph	apps/concomp/lock_concomp.cpp	/^typedef graphlab::graph<vertex_data, edge_data> concomp_graph;$/;"	t	file:
concomp_graph	apps/concomp/rlx_concomp.cpp	/^typedef graphlab::graph<vertex_data, edge_data> concomp_graph;$/;"	t	file:
concomp_graph	apps/concomp/seq_concomp.cpp	/^typedef graphlab::graph<vertex_data, edge_data> concomp_graph;$/;"	t	file:
concomp_graph	apps/concomp/sync_concomp.cpp	/^typedef graphlab::graph<vertex_data, edge_data> concomp_graph;$/;"	t	file:
concomp_init	apps/concomp/concomp.cpp	/^void concomp_init(gl_types::iscope &scope,$/;"	f
concomp_init	apps/concomp/lock_concomp.cpp	/^void concomp_init(gl_types::iscope &scope,$/;"	f
concomp_init	apps/concomp/rlx_concomp.cpp	/^void concomp_init(gl_types::iscope &scope,$/;"	f
concomp_init	apps/concomp/seq_concomp.cpp	/^void concomp_init(gl_types::iscope &scope,$/;"	f
concomp_init	apps/concomp/sync_concomp.cpp	/^void concomp_init(gl_types::iscope &scope,$/;"	f
concomp_update	apps/concomp/concomp.cpp	/^void concomp_update(gl_types::iscope &scope,$/;"	f
concomp_update	apps/concomp/lock_concomp.cpp	/^void concomp_update(gl_types::iscope &scope,$/;"	f
concomp_update	apps/concomp/rlx_concomp.cpp	/^void concomp_update(gl_types::iscope &scope,$/;"	f
concomp_update	apps/concomp/seq_concomp.cpp	/^void concomp_update(gl_types::iscope &scope,$/;"	f
concomp_update	apps/concomp/sync_concomp.cpp	/^void concomp_update(gl_types::iscope &scope,$/;"	f
cond	src/graphlab/util/shared_termination.hpp	/^    conditional cond;$/;"	m	class:graphlab::shared_termination
condition	src/graphlab/factors/table_factor.hpp	/^    inline void condition(const table_factor& other,$/;"	f	class:graphlab::table_factor
condition	src/graphlab/factors/unary_factor.hpp	/^    inline void condition(const binary_factor& bin_fact,$/;"	f	class:graphlab::unary_factor
conditional	src/graphlab/parallel/pthread_tools.hpp	/^    conditional() {$/;"	f	class:graphlab::conditional
conditional	src/graphlab/parallel/pthread_tools.hpp	/^  class conditional {$/;"	c	namespace:graphlab
connect_udt	src/graphlab/distributed/distributed_control.cpp	/^void distributed_control::connect_udt() {$/;"	f	class:graphlab::distributed_control
console_monitor	src/graphlab/monitoring/console_monitor.hpp	/^    console_monitor(unsigned long output_priority_freq_tasks = 1000) :$/;"	f	class:graphlab::console_monitor
console_monitor	src/graphlab/monitoring/console_monitor.hpp	/^  class console_monitor : $/;"	c	namespace:graphlab
const_datapointer	src/graphlab/util/synchronized_unordered_map.hpp	/^  typedef std::pair<bool, const Data*> const_datapointer;$/;"	t	class:graphlab::synchronized_unordered_map
const_edge_data	src/graphlab/distributed/distributed_scope.hpp	/^    const edge_data_type& const_edge_data(edge_id_t eid) const {$/;"	f	class:graphlab::distributed_scope
const_edge_data	src/graphlab/scope/general_scope.hpp	/^    const edge_data_type& const_edge_data(edge_id_t eid) const {$/;"	f	class:graphlab::general_scope
const_edge_data	src/graphlab/scope/synchronous_scope.hpp	/^    const edge_data_type& const_edge_data(edge_id_t eid) const { $/;"	f	class:graphlab::synchronous_scope
const_edges	src/graphlab/distributed/graph_lock_manager.hpp	/^    bool const_edges;$/;"	m	class:graphlab::graph_lock_manager
const_iterator	src/graphlab/util/synchronized_unordered_map.hpp	/^  typedef typename container::const_iterator const_iterator;$/;"	t	class:graphlab::synchronized_unordered_map
const_neighbor_vertex_data	src/graphlab/distributed/distributed_scope.hpp	/^    const vertex_data_type& const_neighbor_vertex_data(vertex_id_t vertex) const {    $/;"	f	class:graphlab::distributed_scope
const_neighbor_vertex_data	src/graphlab/scope/general_scope.hpp	/^    const vertex_data_type& const_neighbor_vertex_data(vertex_id_t vertex) const {$/;"	f	class:graphlab::general_scope
const_neighbor_vertex_data	src/graphlab/scope/synchronous_scope.hpp	/^    const vertex_data_type& const_neighbor_vertex_data(vertex_id_t vertex) const {$/;"	f	class:graphlab::synchronous_scope
const_reference	src/graphlab/extern/bitmagic/bm.h	/^    typedef bool const_reference;$/;"	t	class:bm::bvector
const_vertex_data	src/graphlab/distributed/distributed_scope.hpp	/^    const vertex_data_type& const_vertex_data() const {$/;"	f	class:graphlab::distributed_scope
const_vertex_data	src/graphlab/scope/general_scope.hpp	/^    const vertex_data_type& const_vertex_data() const {$/;"	f	class:graphlab::general_scope
const_vertex_data	src/graphlab/scope/synchronous_scope.hpp	/^    const vertex_data_type& const_vertex_data() const  {$/;"	f	class:graphlab::synchronous_scope
constant_edges	src/graphlab/distributed/graph/cloned_graph.hpp	/^    bool constant_edges;$/;"	m	class:graphlab::cloned_graph
constant_edges	src/graphlab/distributed/graph/distributed_graph.hpp	/^    bool constant_edges;$/;"	m	class:graphlab::distributed_graph
constant_map	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    constant_map_type constant_map;$/;"	m	class:graphlab::distributed_fullsweep_sdm
constant_map	src/graphlab/distributed/distributed_shared_data.hpp	/^    constant_map_type constant_map;$/;"	m	class:graphlab::distributed_shared_data
constant_map_type	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    typedef synchronized_unordered_map<any> constant_map_type;$/;"	t	class:graphlab::distributed_fullsweep_sdm
constant_map_type	src/graphlab/distributed/distributed_shared_data.hpp	/^    typedef synchronized_unordered_map<any> constant_map_type;$/;"	t	class:graphlab::distributed_shared_data
constant_map_type	src/graphlab/shared_data/thread_shared_data.hpp	/^    typedef std::vector<any> constant_map_type;$/;"	t	class:graphlab::thread_shared_data
constant_offsets	apps/gabp/gabp.cpp	/^enum constant_offsets {GABP_PRIOR_MEAN_OFFSET = 0, \/\/prior mean (b_i \/ A_ii)$/;"	g	file:
constants	apps/factor_graph_inference/factor_bp.hpp	/^enum constants {BOUND_ID, DAMPING_ID};$/;"	g
constants	apps/image_denoise/gibbs_denoise.cpp	/^enum constants {EDGE_FACTOR_ID, NUM_SAMPLES_ID};$/;"	g	file:
constants	apps/image_denoise/loopybp_denoise.cpp	/^enum constants {EDGE_FACTOR_ID, BOUND_ID, DAMPING_ID};$/;"	g	file:
constants	src/graphlab/shared_data/thread_shared_data.hpp	/^    constant_map_type constants;$/;"	m	class:graphlab::thread_shared_data
construct_graph	apps/image_denoise/gibbs_denoise.cpp	/^void construct_graph(image& img,$/;"	f
construct_graph	apps/image_denoise/loopybp_denoise.cpp	/^void construct_graph(image& img,$/;"	f
container	src/graphlab/util/synchronized_unordered_map.hpp	/^  typedef boost::unordered_map<size_t, Data> container;$/;"	t	class:graphlab::synchronized_unordered_map
contains	src/graphlab/util/mutable_queue.hpp	/^    bool contains(const T& item) const {$/;"	f	class:graphlab::mutable_queue
contains	src/graphlab/util/mutable_queue.hpp	/^    bool contains(const size_t& item) const {$/;"	f	class:graphlab::mutable_queue
content	src/graphlab/util/generics/any.hpp	/^    __any_placeholder* content;$/;"	m	class:graphlab::any
controldef	src/graphlab/extern/metis/libmetis/struct.h	/^struct controldef {$/;"	s
convert_buf	src/graphlab/extern/bitmagic/bmvmin.h	/^    void convert_buf()$/;"	f	class:bm::miniset
convert_gap2bitset	src/graphlab/extern/bitmagic/bmblocks.h	/^    bm::word_t* convert_gap2bitset(unsigned nb, gap_word_t* gap_block=0)$/;"	f	class:bm::blocks_manager
convolve	src/graphlab/factors/table_factor.hpp	/^    inline void convolve(const table_factor& joint,$/;"	f	class:graphlab::table_factor
convolve	src/graphlab/factors/unary_factor.hpp	/^    inline void convolve(const binary_factor& bin_fact,$/;"	f	class:graphlab::unary_factor
coords	src/graphlab/extern/metis/libmetis/struct.h	/^  double *coords;               \/* x, y, and z, Coordinates *\/$/;"	m	struct:graphdef
copy	src/graphlab/util/generics/blob.hpp	/^    blob copy() const{$/;"	f	class:graphlab::blob
copy	src/graphlab/util/generics/blob.hpp	/^    void copy(const blob& other) {$/;"	f	class:graphlab::blob
copy	src/graphlab/util/generics/blob.hpp	/^    void copy(size_t osize, void* odata) {$/;"	f	class:graphlab::blob
copy_to_array_functor	src/graphlab/extern/bitmagic/bmfunc.h	/^	copy_to_array_functor(B* bits): bp_(bits)$/;"	f	class:bm::copy_to_array_functor
copy_to_array_functor	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename B> class copy_to_array_functor$/;"	c	namespace:bm
copy_to_array_functor_inc	src/graphlab/extern/bitmagic/bmfunc.h	/^	copy_to_array_functor_inc(B* bits, unsigned base_idx)$/;"	f	class:bm::copy_to_array_functor_inc
copy_to_array_functor_inc	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename B> class copy_to_array_functor_inc$/;"	c	namespace:bm
core	src/graphlab.hpp	/^                           typename graph::edge_data_type> core;$/;"	t	struct:graphlab::types
core	src/graphlab/core.hpp	/^    core() : mengine(NULL) { }$/;"	f	class:graphlab::core
core	src/graphlab/core.hpp	/^  class core {$/;"	c	namespace:graphlab
core	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *core;			\/* Where pairs, indices, and degrees are coming from *\/$/;"	m	struct:workspacedef
corrupt	apps/image_denoise/image.hpp	/^void image::corrupt(double sigma) {$/;"	f	class:image
corruption	src/graphlab/extern/metis/GKlib/gk_struct.h	/^	int corruption;$/;"	m	struct:__anon13
count	apps/pagerank/tsv_to_graphlab_bin.cpp	/^  uint32_t count;$/;"	m	struct:tripple	file:
count	src/graphlab/extern/bitmagic/bm.h	/^        bm::id_t count() const { return bit_count_; }$/;"	f	class:bm::bvector::counted_enumerator
count	src/graphlab/extern/bitmagic/bm.h	/^bm::id_t bvector<Alloc, MS>::count() const$/;"	f	class:bm::bvector
count	src/graphlab/extern/bitmagic/bmblocks.h	/^        bm::id_t count() const { return count_; }$/;"	f	class:bm::blocks_manager::block_count_change_func
count	src/graphlab/extern/bitmagic/bmblocks.h	/^        bm::id_t count() const { return count_; }$/;"	f	class:bm::blocks_manager::block_count_func
count_	src/graphlab/extern/bitmagic/bm.h	/^    mutable id_t      count_;            \/\/!< number of 1 bits in the vector$/;"	m	class:bm::bvector
count_	src/graphlab/extern/bitmagic/bmblocks.h	/^        bm::id_t   count_;$/;"	m	class:bm::blocks_manager::block_count_change_func
count_	src/graphlab/extern/bitmagic/bmblocks.h	/^        bm::id_t count_;$/;"	m	class:bm::blocks_manager::block_count_func
count_and	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^bm::id_t count_and(const BV& bv1, const BV& bv2)$/;"	f	namespace:bm
count_blocks	src/graphlab/extern/bitmagic/bm.h	/^    unsigned count_blocks(unsigned* arr) const$/;"	f	class:bm::bvector
count_intervals	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^bm::id_t count_intervals(const BV& bv)$/;"	f	namespace:bm
count_is_valid_	src/graphlab/extern/bitmagic/bm.h	/^    mutable bool      count_is_valid_;   \/\/!< actualization flag$/;"	m	class:bm::bvector
count_or	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^bm::id_t count_or(const BV& bv1, const BV& bv2)$/;"	f	namespace:bm
count_range	src/graphlab/extern/bitmagic/bm.h	/^bm::id_t bvector<Alloc, MS>::count_range(bm::id_t left, $/;"	f	class:bm::bvector
count_sub	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^bm::id_t count_sub(const BV& bv1, const BV& bv2)$/;"	f	namespace:bm
count_xor	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^bm::id_t count_xor(const BV& bv1, const BV& bv2)$/;"	f	namespace:bm
counted_enumerator	src/graphlab/extern/bitmagic/bm.h	/^        counted_enumerator() : bit_count_(0){}$/;"	f	class:bm::bvector::counted_enumerator
counted_enumerator	src/graphlab/extern/bitmagic/bm.h	/^        counted_enumerator(const enumerator& en)$/;"	f	class:bm::bvector::counted_enumerator
counted_enumerator	src/graphlab/extern/bitmagic/bm.h	/^    class counted_enumerator : public enumerator$/;"	c	class:bm::bvector
counter	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      atomic< size_t > counter;$/;"	m	struct:graphlab::distributed_fullsweep_sdm::sync_state
counts	apps/factor_graph_inference/factor_gibbs.hpp	/^  std::vector<uint32_t> counts;$/;"	m	struct:vertex_data
counts	apps/image_denoise/gibbs_denoise.cpp	/^  std::vector<double> counts;$/;"	m	struct:vertex_data	file:
counts_pred_fn	apps/image_denoise/gibbs_denoise.cpp	/^  std::string counts_pred_fn;$/;"	m	struct:options	file:
cpu_color	src/graphlab/schedulers/colored_scheduler.hpp	/^    std::vector< size_t > cpu_color;$/;"	m	class:graphlab::colored_scheduler
cpu_count	src/graphlab/parallel/pthread_tools.cpp	/^  size_t thread::cpu_count() {$/;"	f	class:graphlab::thread
cpu_curloc	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    std::vector<size_t> cpu_curloc;$/;"	m	class:graphlab::execution_plan
cpu_index	src/graphlab/schedulers/colored_scheduler.hpp	/^    std::vector< size_t > cpu_index;$/;"	m	class:graphlab::colored_scheduler
cpu_plan_node	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    struct cpu_plan_node {$/;"	s	class:graphlab::execution_plan
cpu_state	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    std::vector<cpustate> cpu_state;$/;"	m	class:graphlab::clustered_priority_scheduler
cpu_waiting	src/graphlab/schedulers/colored_scheduler.hpp	/^    std::vector< size_t > cpu_waiting;$/;"	m	class:graphlab::colored_scheduler
cpuplans	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    std::vector<std::vector<cpu_plan_node> > cpuplans;$/;"	m	class:graphlab::execution_plan
cpustate	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    struct cpustate {$/;"	s	class:graphlab::clustered_priority_scheduler
create_atomic	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    void create_atomic(size_t index, const any& initial_value) {$/;"	f	class:graphlab::distributed_fullsweep_sdm
create_atomic	src/graphlab/distributed/distributed_shared_data.hpp	/^    void create_atomic(size_t index, const any& initial_value) {$/;"	f	class:graphlab::distributed_shared_data
create_atomic	src/graphlab/shared_data/thread_shared_data.hpp	/^    void create_atomic(size_t index, const any& initial_value) {$/;"	f	class:graphlab::thread_shared_data
create_engine	src/graphlab/engine/engine_options.hpp	/^    iengine<Graph>* create_engine(Graph& graph) {$/;"	f	struct:graphlab::engine_options
create_graph	apps/concomp/concomp.cpp	/^void create_graph(concomp_graph& graph) {$/;"	f
create_graph	apps/concomp/lock_concomp.cpp	/^void create_graph(concomp_graph& graph) {$/;"	f
create_graph	apps/concomp/rlx_concomp.cpp	/^void create_graph(concomp_graph& graph) {$/;"	f
create_graph	apps/concomp/seq_concomp.cpp	/^void create_graph(concomp_graph& graph) {$/;"	f
create_graph	apps/concomp/sync_concomp.cpp	/^void create_graph(concomp_graph& graph) {$/;"	f
create_graph	apps/pagerank/pagerank.cpp	/^void create_graph(pagerank_graph& graph) {$/;"	f
create_graph	apps/pagerank/sync_pagerank.cpp	/^void create_graph(pagerank_graph& graph) {$/;"	f
create_graph	apps/svm/svm.cpp	/^void create_graph(graph_type& g,$/;"	f
create_lock_blocks_handler	src/graphlab/distributed/distributed_shared_data.hpp	/^    static void create_lock_blocks_handler(distributed_control& dc, $/;"	f	class:graphlab::distributed_shared_data
create_mspace	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^mspace create_mspace(size_t capacity, int locked) {$/;"	f
create_mspace_with_base	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^mspace create_mspace_with_base(void* base, size_t capacity, int locked) {$/;"	f
create_receive_buffers	src/graphlab/distributed/distributed_control.cpp	/^void distributed_control::create_receive_buffers(size_t rcvbuflen) {$/;"	f	class:graphlab::distributed_control
create_thread_dc_buffer	src/graphlab/distributed/dc_internal.cpp	/^dc_thread_local_struct* create_thread_dc_buffer(size_t thread_id = 0) {$/;"	f	namespace:graphlab
create_thread_specific_data	src/graphlab/parallel/pthread_tools.cpp	/^  thread_specific_data* create_thread_specific_data(size_t thread_id = 0) {$/;"	f	namespace:graphlab
ctr	src/graphlab/util/timer.cpp	/^    size_t ctr; $/;"	m	class:graphlab::hundredms_timer	file:
cur_mean	apps/gabp/gabp.cpp	/^  sdouble cur_mean; \/\/intermediate value to store the mean \\mu_i $/;"	m	struct:vertex_data	file:
cur_prec	apps/gabp/gabp.cpp	/^  sdouble cur_prec; \/\/ \/\/current precision value P_i$/;"	m	struct:vertex_data	file:
cur_task	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  atomic<size_t> cur_task;  \/\/\/ Which vertex I am executing now.$/;"	m	class:graphlab::distributed_round_robin_scheduler
cur_task	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  atomic<size_t> cur_task;  \/\/\/ Which vertex I am executing now.$/;"	m	class:graphlab::distributed_round_robin_scheduler2
cur_task	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    atomic<size_t> cur_task;  \/\/\/ Which vertex I am executing now.$/;"	m	class:graphlab::round_robin_scheduler
cureplan	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    execution_plan_type* cureplan; \/\/\/ execution plan$/;"	m	class:graphlab::set_scheduler
current_max_priority	src/graphlab/monitoring/console_monitor.hpp	/^    double current_max_priority;$/;"	m	class:graphlab::console_monitor
current_time	src/graphlab/util/timer.hpp	/^    double current_time() const {$/;"	f	class:graphlab::timer
current_time_millis	src/graphlab/util/timer.hpp	/^    double current_time_millis() const {$/;"	f	class:graphlab::timer
curtoken	src/graphlab/distributed/distributed_terminator.hpp	/^    distributed_termination_token curtoken;$/;"	m	class:graphlab::distributed_terminator
curvertex	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    std::vector< vertex_id_t > curvertex;$/;"	m	class:graphlab::distributed_collaborative_scheduler_wrapper
d_copy_func	src/graphlab/extern/bitmagic/bmfunc.h	/^    d_copy_func(T* dg_buf) : dgap_buf_(dg_buf) {}$/;"	f	struct:bm::d_copy_func
d_copy_func	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename T> struct d_copy_func$/;"	s	namespace:bm
damp	src/graphlab/factors/table_factor.hpp	/^    inline void damp(const table_factor& other, double damping) {$/;"	f	class:graphlab::table_factor
damp	src/graphlab/factors/unary_factor.hpp	/^    inline void damp(const unary_factor& other, double damping) {$/;"	f	class:graphlab::unary_factor
damping	apps/factor_graph_inference/factor_bp.cpp	/^  double damping;$/;"	m	struct:options	file:
damping	apps/image_denoise/loopybp_denoise.cpp	/^  double damping;$/;"	m	struct:options	file:
damping_factor	apps/concomp/concomp.cpp	9;"	d	file:
damping_factor	apps/concomp/lock_concomp.cpp	10;"	d	file:
damping_factor	apps/concomp/rlx_concomp.cpp	9;"	d	file:
damping_factor	apps/concomp/seq_concomp.cpp	11;"	d	file:
damping_factor	apps/concomp/sync_concomp.cpp	10;"	d	file:
damping_factor	apps/pagerank/pagerank.cpp	20;"	d	file:
damping_factor	apps/pagerank/sync_pagerank.cpp	21;"	d	file:
dat	apps/svm/svm.cpp	/^    dat_vertex_data dat;$/;"	m	union:vertex_data::__anon1	file:
dat_update_function	apps/svm/svm.cpp	/^void dat_update_function(gl_types::iscope &scope,$/;"	f
dat_vertex_data	apps/svm/svm.cpp	/^struct dat_vertex_data {$/;"	s	file:
data	apps/image_denoise/image.hpp	/^  std::vector<double> data;$/;"	m	class:image
data	src/graphlab/distributed/distributed_hash_table.hpp	/^  map_type data;  \/\/\/ The actual table data that is distributed$/;"	m	class:graphlab::distributed_hash_table
data	src/graphlab/graph/graph.hpp	/^      inline EdgeData& data() { return _data; }$/;"	f	class:graphlab::graph::edge
data	src/graphlab/graph/graph.hpp	/^      inline const EdgeData& data() const { return _data; }$/;"	f	class:graphlab::graph::edge
data	src/graphlab/util/generics/blob.hpp	/^    const void* data() const { return data_; }$/;"	f	class:graphlab::blob
data	src/graphlab/util/generics/blob.hpp	/^    void* data() { return data_; }$/;"	f	class:graphlab::blob
data	src/graphlab/util/synchronized_unordered_map.hpp	/^   std::vector<container> data;$/;"	m	class:graphlab::synchronized_unordered_map
data_	src/graphlab/util/generics/blob.hpp	/^        void* data_;     \/\/\/ user information$/;"	m	class:graphlab::blob
data_manager	src/graphlab/distributed/distributed_engine.hpp	/^    distributed_shared_data<Graph>* data_manager;$/;"	m	class:graphlab::distributed_engine
data_manager	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    ishared_data_manager_type* data_manager;$/;"	m	class:graphlab::pushy_distributed_engine
data_manager	src/graphlab/engine/sim_thread_engine.hpp	/^    ishared_data_manager_type* data_manager;$/;"	m	class:graphlab::sim_thread_engine
data_manager	src/graphlab/engine/synchronous_engine.hpp	/^    ishared_data_manager_type* data_manager;$/;"	m	class:graphlab::synchronous_engine
data_manager	src/graphlab/engine/threaded_engine.hpp	/^    ishared_data_manager_type* data_manager;$/;"	m	class:graphlab::threaded_engine
datapointer	src/graphlab/util/synchronized_unordered_map.hpp	/^  typedef std::pair<bool, Data*> datapointer;$/;"	t	class:graphlab::synchronized_unordered_map
dbglvl	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype dbglvl;			\/* Controls the debuging output of the program *\/$/;"	m	struct:controldef
dc	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    distributed_control &dc;$/;"	m	class:graphlab::distributed_collaborative_scheduler_wrapper
dc	src/graphlab/distributed/distributed_control.hpp	/^    distributed_control &dc;$/;"	m	class:graphlab::distributed_control::background_send_thread
dc	src/graphlab/distributed/distributed_control.hpp	/^    distributed_control &dc;$/;"	m	class:graphlab::distributed_control::message_dispatch_thread
dc	src/graphlab/distributed/distributed_control.hpp	/^    distributed_control *dc;$/;"	m	class:graphlab::distributed_control::messageproc_thread
dc	src/graphlab/distributed/distributed_engine.hpp	/^    distributed_control &dc;$/;"	m	class:graphlab::distributed_engine
dc	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    distributed_control &dc;$/;"	m	class:graphlab::distributed_fullsweep_sdm
dc	src/graphlab/distributed/distributed_hash_table.hpp	/^  distributed_control &dc;$/;"	m	class:graphlab::distributed_hash_table
dc	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^	distributed_control dc;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
dc	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  	distributed_control * dc;$/;"	m	class:graphlab::distributed_round_robin_scheduler
dc	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^    distributed_control * dc;$/;"	m	class:graphlab::distributed_round_robin_scheduler2
dc	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    distributed_control &dc;$/;"	m	class:graphlab::distributed_scheduler_wrapper
dc	src/graphlab/distributed/distributed_shared_data.hpp	/^    distributed_control &dc;$/;"	m	class:graphlab::distributed_shared_data
dc	src/graphlab/distributed/distributed_terminator.hpp	/^    distributed_control &dc;$/;"	m	class:graphlab::distributed_terminator
dc	src/graphlab/distributed/graph_lock_manager.hpp	/^    distributed_control &dc;$/;"	m	class:graphlab::graph_lock_manager
dc	src/graphlab/distributed/lock_manager.hpp	/^  distributed_control &dc;  \/\/ reference to the communication later$/;"	m	class:graphlab::distributed_lock_manager
dc	src/graphlab/distributed/metrics/distributed_metrics.hpp	/^    distributed_control * dc;$/;"	m	class:graphlab::distributed_metrics
dc	src/graphlab/distributed/pushy_distributed_engine.hpp	/^	distributed_control &dc;$/;"	m	class:graphlab::pushy_distributed_engine
dc_singleton_ptr	src/graphlab/distributed/distributed_control.cpp	/^distributed_control *dc_singleton_ptr = NULL;$/;"	m	namespace:graphlab	file:
dc_thread_keys	src/graphlab/distributed/dc_internal.cpp	/^  dc_thread_keys() : GRAPHLAB_DC_BUFFER_ID(1){ $/;"	f	struct:graphlab::dc_thread_keys
dc_thread_keys	src/graphlab/distributed/dc_internal.cpp	/^struct dc_thread_keys {$/;"	s	namespace:graphlab	file:
dc_thread_local_struct	src/graphlab/distributed/dc_internal.hpp	/^struct dc_thread_local_struct{$/;"	s	namespace:graphlab
dckeys	src/graphlab/distributed/dc_internal.cpp	/^static const dc_thread_keys dckeys;$/;"	m	namespace:graphlab	file:
dcontrol	src/graphlab/distributed/graph/cloned_graph.hpp	/^    distributed_control *dcontrol;$/;"	m	class:graphlab::cloned_graph
dcontrol	src/graphlab/distributed/graph/distributed_graph.hpp	/^    distributed_control *dcontrol;$/;"	m	class:graphlab::distributed_graph
dead	src/graphlab/util/optimal_termination.hpp	/^    bool dead;$/;"	m	class:graphlab::optimal_termination
deallocate	src/graphlab/extern/bitmagic/bmalloc.h	/^    static void deallocate(bm::word_t* p, size_t)$/;"	f	class:bm::block_allocator
deallocate	src/graphlab/extern/bitmagic/bmalloc.h	/^    static void deallocate(void* p, size_t)$/;"	f	class:bm::ptr_allocator
dec	src/graphlab/parallel/atomic.hpp	/^    T dec() { return __sync_sub_and_fetch(&value, 1);  }$/;"	f	class:graphlab::atomic
dec	src/graphlab/parallel/atomic.hpp	/^    T dec(T val) { return __sync_sub_and_fetch(&value, val);  }$/;"	f	class:graphlab::atomic
dec_size	src/graphlab/extern/bitmagic/bmserial.h	/^    unsigned dec_size() const { return decoder_.size(); }$/;"	f	class:bm::serial_stream_iterator
decodeblock	src/graphlab/extern/metis/GKlib/b64.c	/^void decodeblock(unsigned char *in, unsigned char *out)$/;"	f
decoder	src/graphlab/extern/bitmagic/bmserial.h	/^    decoder_type& decoder() { return decoder_; }$/;"	f	class:bm::serial_stream_iterator
decoder	src/graphlab/extern/bitmagic/encoding.h	/^class decoder : public decoder_base$/;"	c	namespace:bm
decoder	src/graphlab/extern/bitmagic/encoding.h	/^inline decoder::decoder(const unsigned char* buf) $/;"	f	class:bm::decoder
decoder_	src/graphlab/extern/bitmagic/bmfunc.h	/^    DEC&     decoder_;$/;"	m	class:bm::decoder_range_adapter
decoder_	src/graphlab/extern/bitmagic/bmserial.h	/^    decoder_type       decoder_;$/;"	m	class:bm::serial_stream_iterator
decoder_base	src/graphlab/extern/bitmagic/encoding.h	/^    decoder_base(const unsigned char* buf) { buf_ = start_ = buf; }$/;"	f	class:bm::decoder_base
decoder_base	src/graphlab/extern/bitmagic/encoding.h	/^class decoder_base$/;"	c	namespace:bm
decoder_big_endian	src/graphlab/extern/bitmagic/encoding.h	/^typedef decoder decoder_big_endian;$/;"	t	namespace:bm
decoder_little_endian	src/graphlab/extern/bitmagic/encoding.h	/^class decoder_little_endian : public decoder_base$/;"	c	namespace:bm
decoder_little_endian	src/graphlab/extern/bitmagic/encoding.h	/^inline decoder_little_endian::decoder_little_endian(const unsigned char* buf)$/;"	f	class:bm::decoder_little_endian
decoder_range_adapter	src/graphlab/extern/bitmagic/bmfunc.h	/^    decoder_range_adapter(DEC& dec, unsigned from_idx, unsigned to_idx)$/;"	f	class:bm::decoder_range_adapter
decoder_range_adapter	src/graphlab/extern/bitmagic/bmfunc.h	/^template<class DEC> class decoder_range_adapter$/;"	c	namespace:bm
decoder_type	src/graphlab/extern/bitmagic/bmserial.h	/^    typedef DEC decoder_type;$/;"	t	class:bm::deseriaizer_base
decoder_type	src/graphlab/extern/bitmagic/bmserial.h	/^    typedef typename deseriaizer_base<DEC>::decoder_type decoder_type;$/;"	t	class:bm::deserializer
decoder_type	src/graphlab/extern/bitmagic/bmserial.h	/^    typedef typename deseriaizer_base<DEC>::decoder_type decoder_type;$/;"	t	class:bm::serial_stream_iterator
decrement	src/graphlab/shared_data/shared_data_ops.hpp	/^    static void decrement(size_t index,$/;"	f	struct:graphlab::apply_ops
decrementid	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^      std::vector<size_t> decrementid;$/;"	m	struct:graphlab::execution_plan::cpu_plan_node
deep_op_equal	src/graphlab/util/generics/any.hpp	/^      void deep_op_equal(__any_placeholder* c) {$/;"	f	class:graphlab::any::holder
default_mflags	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  flag_t default_mflags;$/;"	m	struct:malloc_params	file:
default_scope	src/graphlab/scope/general_scope_factory.hpp	/^    scope_range::scope_range_enum default_scope;$/;"	m	class:graphlab::general_scope_factory
deferred_lock	src/graphlab/distributed/graph_lock_manager.hpp	/^  size_t deferred_lock(const vertex_id_t &vertex,$/;"	f	class:graphlab::graph_lock_manager
deferred_lock_id	src/graphlab/distributed/distributed_scope.hpp	/^    size_t deferred_lock_id;$/;"	m	class:graphlab::distributed_scope
deferred_lock_private	src/graphlab/distributed/graph_lock_manager.hpp	/^  size_t deferred_lock_private(const vertex_id_t &vertex,$/;"	f	class:graphlab::graph_lock_manager
deinit_tree	src/graphlab/extern/bitmagic/bmblocks.h	/^    void deinit_tree()$/;"	f	class:bm::blocks_manager
delta_received	src/graphlab/distributed/distributed_terminator.hpp	/^    atomic<size_t> delta_received;$/;"	m	class:graphlab::distributed_terminator
delta_transmitted	src/graphlab/distributed/distributed_terminator.hpp	/^    atomic<size_t> delta_transmitted;$/;"	m	class:graphlab::distributed_terminator
dense_bitset	src/graphlab/util/dense_bitset.hpp	/^    dense_bitset() : array(NULL), len(0), arrlen(0) {$/;"	f	class:graphlab::dense_bitset
dense_bitset	src/graphlab/util/dense_bitset.hpp	/^    dense_bitset(const dense_bitset &db) {$/;"	f	class:graphlab::dense_bitset
dense_bitset	src/graphlab/util/dense_bitset.hpp	/^    dense_bitset(size_t size) : array(NULL), len(size) {$/;"	f	class:graphlab::dense_bitset
dense_bitset	src/graphlab/util/dense_bitset.hpp	/^  class dense_bitset {$/;"	c	namespace:graphlab
deoptimize_block	src/graphlab/extern/bitmagic/bmblocks.h	/^    bm::word_t* deoptimize_block(unsigned nb)$/;"	f	class:bm::blocks_manager
dequeue	src/graphlab/util/blocking_queue.hpp	/^    inline std::pair<T, bool> dequeue() {$/;"	f	class:graphlab::blocking_queue
desc	src/graphlab/util/command_line_options.hpp	/^    boost::program_options::options_description desc;$/;"	m	class:graphlab::command_line_options
deseriaizer_base	src/graphlab/extern/bitmagic/bmserial.h	/^    deseriaizer_base(){}$/;"	f	class:bm::deseriaizer_base
deseriaizer_base	src/graphlab/extern/bitmagic/bmserial.h	/^class deseriaizer_base$/;"	c	namespace:bm
deserialize	src/graphlab/extern/bitmagic/bmserial.h	/^iterator_deserializer<BV, SerialIterator>::deserialize($/;"	f	class:bm::iterator_deserializer
deserialize	src/graphlab/extern/bitmagic/bmserial.h	/^unsigned deserialize(BV& bv, $/;"	f	namespace:bm
deserialize	src/graphlab/extern/bitmagic/bmserial.h	/^unsigned deserializer<BV, DEC>::deserialize(bvector_type&        bv, $/;"	f	class:bm::deserializer
deserialize	src/graphlab/extern/bitmagic/bmserial.h	/^unsigned operation_deserializer<BV>::deserialize($/;"	f	class:bm::operation_deserializer
deserialize	src/graphlab/serialization/iarchive.cpp	/^  iarchive& deserialize(iarchive& a, void* const i,const size_t length) {$/;"	f	namespace:graphlab
deserialize	src/graphlab/util/generics/any.hpp	/^      static __any_placeholder* deserialize(iarchive &arc) {$/;"	f	class:graphlab::any::any_registration
deserialize_64bit_integer	src/graphlab/serialization/iarchive.cpp	/^  iarchive& deserialize_64bit_integer(iarchive& a, int64_t& i) {$/;"	f	namespace:graphlab
deserialize_gap	src/graphlab/extern/bitmagic/bmserial.h	/^deserializer<BV, DEC>::deserialize_gap(unsigned char btype, decoder_type& dec, $/;"	f	class:bm::deserializer
deserialize_iterator	src/graphlab/serialization/iterator.hpp	/^  void deserialize_iterator(iarchive& a, OutputIterator result) {$/;"	f	namespace:graphlab
deserializer	src/graphlab/extern/bitmagic/bmserial.h	/^    deserializer() : temp_block_(0) {}$/;"	f	class:bm::deserializer
deserializer	src/graphlab/extern/bitmagic/bmserial.h	/^class deserializer : protected deseriaizer_base<DEC>$/;"	c	namespace:bm
dest	src/graphlab/engine/synchronous_engine.hpp	/^    Graph dest;$/;"	m	class:graphlab::synchronous_engine
dest_	src/graphlab/extern/bitmagic/encoding.h	/^    TEncoder&      dest_;      \/\/\/< Bit stream target$/;"	m	class:bm::bit_out
destroy_dc_thread_local_struct	src/graphlab/distributed/dc_internal.cpp	/^void destroy_dc_thread_local_struct(void* ptr) {$/;"	f	namespace:graphlab
destroy_engine	src/graphlab/core.hpp	/^    void destroy_engine() {$/;"	f	class:graphlab::core
destroy_mspace	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^size_t destroy_mspace(mspace msp) {$/;"	f
destroy_thread_specific_data	src/graphlab/parallel/pthread_tools.cpp	/^  void destroy_thread_specific_data(void* ptr) {$/;"	f	namespace:graphlab
dev_zero_fd	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static int dev_zero_fd = -1; \/* Cached file descriptor for \/dev\/zero. *\/$/;"	v	file:
dgap_2_gap	src/graphlab/extern/bitmagic/bmfunc.h	/^void dgap_2_gap(const T* BMRESTRICT dgap_buf, T* BMRESTRICT gap_buf, T gap_header=0)$/;"	f	namespace:bm
dgap_buf_	src/graphlab/extern/bitmagic/bmfunc.h	/^    T* dgap_buf_;$/;"	m	struct:bm::d_copy_func
dgap_descr	src/graphlab/extern/bitmagic/bm.h	/^        struct dgap_descr$/;"	s	class:bm::bvector::iterator_base
dht	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    mutable distributed_hash_table dht;$/;"	m	class:graphlab::distributed_fullsweep_sdm
dht	src/graphlab/distributed/distributed_shared_data.hpp	/^    mutable distributed_hash_table dht;$/;"	m	class:graphlab::distributed_shared_data
difference_type	src/graphlab/extern/bitmagic/bm.h	/^        typedef unsigned   difference_type;$/;"	t	class:bm::bvector::enumerator
difference_type	src/graphlab/extern/bitmagic/bm.h	/^        typedef void difference_type;$/;"	t	class:bm::bvector::insert_iterator
dim	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype dim;$/;"	m	struct:__anon3
direct_callback	src/graphlab/schedulers/support/direct_callback.hpp	/^    direct_callback(scheduler_type* scheduler = NULL,$/;"	f	class:graphlab::direct_callback
direct_callback	src/graphlab/schedulers/support/direct_callback.hpp	/^  class direct_callback : $/;"	c	namespace:graphlab
dirty_vertices	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    char* dirty_vertices;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
dirty_vertices	src/graphlab/schedulers/sweep_scheduler.hpp	/^    char* dirty_vertices;$/;"	m	class:graphlab::sweep_scheduler
dirtyedges	src/graphlab/distributed/graph_lock_manager.hpp	/^    dense_bitset dirtyedges;$/;"	m	class:graphlab::graph_lock_manager
dirtyvertices	src/graphlab/distributed/graph_lock_manager.hpp	/^    dense_bitset dirtyvertices;$/;"	m	class:graphlab::graph_lock_manager
disable_buffering	src/graphlab/schedulers/support/unused_scheduler_callback.hpp	/^    void disable_buffering() {}$/;"	f	class:graphlab::unused_scheduler_callback
disable_contiguous	src/graphlab/extern/metis/GKlib/dlmalloc.c	1207;"	d	file:
disable_lock	src/graphlab/extern/metis/GKlib/dlmalloc.c	1200;"	d	file:
disable_mmap	src/graphlab/extern/metis/GKlib/dlmalloc.c	1204;"	d	file:
dispatch_req_data	src/graphlab/distributed/distributed_control.hpp	/^  struct dispatch_req_data{$/;"	s	class:graphlab::distributed_control
dispatch_requests	src/graphlab/distributed/distributed_control.hpp	/^  blocking_queue<dispatch_req_data> dispatch_requests;$/;"	m	class:graphlab::distributed_control
dispatch_thread	src/graphlab/distributed/distributed_control.hpp	/^  std::vector<message_dispatch_thread*> dispatch_thread;$/;"	m	class:graphlab::distributed_control
dispatch_vec	apps/gabp/gabp.cpp	/^void dispatch_vec(int start_pos, int end_pos, int offset,$/;"	f
display_options	apps/factor_graph_inference/factor_bp.cpp	/^void display_options(options& opts) {$/;"	f
display_options	apps/factor_graph_inference/factor_gibbs.cpp	/^void display_options(options& opts) {$/;"	f
display_options	apps/image_denoise/gibbs_denoise.cpp	/^void display_options(options& opts) {$/;"	f
dist_int_type	src/graphlab/parallel/pthread_tools.hpp	/^    typedef boost::uniform_int<size_t> dist_int_type;$/;"	t	class:graphlab::thread_specific_data
dist_real_type	src/graphlab/parallel/pthread_tools.hpp	/^    typedef boost::uniform_real<double> dist_real_type;$/;"	t	class:graphlab::thread_specific_data
dist_scope_request	src/graphlab/distributed/graph_lock_manager.hpp	/^  dist_scope_request():vertex(-1), scoperange(scope_range::USE_DEFAULT) { }$/;"	f	class:graphlab::dist_scope_request
dist_scope_request	src/graphlab/distributed/graph_lock_manager.hpp	/^  dist_scope_request(vertex_id_t vertex,$/;"	f	class:graphlab::dist_scope_request
dist_scope_request	src/graphlab/distributed/graph_lock_manager.hpp	/^class dist_scope_request{$/;"	c	namespace:graphlab
dist_update_edge_handler	src/graphlab/distributed/graph/distributed_graph.hpp	/^    static void dist_update_edge_handler(distributed_control& dc, size_t source, $/;"	f	class:graphlab::distributed_graph
dist_update_vertex_handler	src/graphlab/distributed/graph/distributed_graph.hpp	/^    static void dist_update_vertex_handler(distributed_control& dc, size_t source, $/;"	f	class:graphlab::distributed_graph
distance_metric	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^enum distance_metric$/;"	g	namespace:bm
distance_metric_descriptor	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^     distance_metric_descriptor(distance_metric m)$/;"	f	struct:bm::distance_metric_descriptor
distance_metric_descriptor	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^    distance_metric_descriptor()$/;"	f	struct:bm::distance_metric_descriptor
distance_metric_descriptor	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^struct distance_metric_descriptor$/;"	s	namespace:bm
distance_operation	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^void distance_operation(const BV& bv1, $/;"	f	namespace:bm
distance_operation_any	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^void distance_operation_any(const BV& bv1, $/;"	f	namespace:bm
distance_stage	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^bm::word_t* distance_stage(const BV&                         bv1,$/;"	f	namespace:bm
distribute	src/graphlab/distributed/graph/cloned_graph.hpp	/^    void distribute(distributed_control &dc) {$/;"	f	class:graphlab::cloned_graph
distributed	src/graphlab.hpp	/^      typedef graphlab::distributed_engine<graph, Scheduler> distributed;$/;"	t	struct:graphlab::types::engines
distributed	src/graphlab/distributed/graph/cloned_graph.hpp	/^    volatile bool distributed;$/;"	m	class:graphlab::cloned_graph
distributed_collaborative_scheduler_wrapper	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    distributed_collaborative_scheduler_wrapper(distributed_control &dc,$/;"	f	class:graphlab::distributed_collaborative_scheduler_wrapper
distributed_collaborative_scheduler_wrapper	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^  class distributed_collaborative_scheduler_wrapper: public ischeduler<Graph>{$/;"	c	namespace:graphlab
distributed_control	src/graphlab/distributed/distributed_control.cpp	/^distributed_control::distributed_control(int *pargc, char*** pargv) {$/;"	f	class:graphlab::distributed_control
distributed_control	src/graphlab/distributed/distributed_control.hpp	/^class distributed_control {$/;"	c	namespace:graphlab
distributed_engine	src/graphlab/distributed/distributed_engine.hpp	/^    distributed_engine(distributed_control &dc,$/;"	f	class:graphlab::distributed_engine
distributed_engine	src/graphlab/distributed/distributed_engine.hpp	/^  class distributed_engine : $/;"	c	namespace:graphlab
distributed_fullsweep_sdm	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    distributed_fullsweep_sdm(distributed_control &dc, unsigned int _numcpus, Graph &_g) : $/;"	f	class:graphlab::distributed_fullsweep_sdm
distributed_fullsweep_sdm	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^  class distributed_fullsweep_sdm : $/;"	c	namespace:graphlab
distributed_fullsweep_sdm_apply	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^   static void distributed_fullsweep_sdm_apply(distributed_control& dc, $/;"	f	class:graphlab::distributed_fullsweep_sdm
distributed_graph	src/graphlab/distributed/graph/distributed_graph.hpp	/^    distributed_graph() : $/;"	f	class:graphlab::distributed_graph
distributed_graph	src/graphlab/distributed/graph/distributed_graph.hpp	/^    distributed_graph(distributed_control &dc) : $/;"	f	class:graphlab::distributed_graph
distributed_graph	src/graphlab/distributed/graph/distributed_graph.hpp	/^  class distributed_graph {$/;"	c	namespace:graphlab
distributed_hash_table	src/graphlab/distributed/distributed_hash_table.cpp	/^distributed_hash_table::distributed_hash_table(distributed_control &dc,$/;"	f	class:graphlab::distributed_hash_table
distributed_hash_table	src/graphlab/distributed/distributed_hash_table.hpp	/^class distributed_hash_table{$/;"	c	namespace:graphlab
distributed_lock_manager	src/graphlab/distributed/lock_manager.hpp	/^  distributed_lock_manager(distributed_control &dc_, Graph &graph_):$/;"	f	class:graphlab::distributed_lock_manager
distributed_lock_manager	src/graphlab/distributed/lock_manager.hpp	/^class distributed_lock_manager {$/;"	c	namespace:graphlab
distributed_metrics	src/graphlab/distributed/metrics/distributed_metrics.hpp	/^ distributed_metrics(distributed_control * _dc) :$/;"	f	class:graphlab::distributed_metrics
distributed_metrics	src/graphlab/distributed/metrics/distributed_metrics.hpp	/^class distributed_metrics {$/;"	c	namespace:graphlab
distributed_metrics_receive_target	src/graphlab/distributed/metrics/distributed_metrics.cpp	/^distributed_metrics * distributed_metrics_receive_target = NULL;$/;"	m	namespace:graphlab	file:
distributed_partition	src/graphlab/distributed/graph/cloned_graph.hpp	/^    void distributed_partition(distributed_control &dc, $/;"	f	class:graphlab::cloned_graph
distributed_phased_sweep_scheduler	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    distributed_phased_sweep_scheduler(Graph& g, $/;"	f	class:graphlab::distributed_phased_sweep_scheduler
distributed_phased_sweep_scheduler	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^  class distributed_phased_sweep_scheduler : $/;"	c	namespace:graphlab
distributed_round_robin_scheduler	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  distributed_round_robin_scheduler(Graph &g, size_t ncpus):$/;"	f	class:graphlab::distributed_round_robin_scheduler
distributed_round_robin_scheduler	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^class distributed_round_robin_scheduler: public ischeduler<Graph> {$/;"	c	namespace:graphlab
distributed_round_robin_scheduler2	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  distributed_round_robin_scheduler2(Graph &g, size_t ncpus):$/;"	f	class:graphlab::distributed_round_robin_scheduler2
distributed_round_robin_scheduler2	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^class distributed_round_robin_scheduler2: public ischeduler<Graph> {$/;"	c	namespace:graphlab
distributed_scheduler_wrapper	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    distributed_scheduler_wrapper(iengine_type* engine,$/;"	f	class:graphlab::distributed_scheduler_wrapper
distributed_scheduler_wrapper	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^  class distributed_scheduler_wrapper: public ischeduler<Graph>{$/;"	c	namespace:graphlab
distributed_scope	src/graphlab/distributed/distributed_scope.hpp	/^    distributed_scope(DLockManager &lock_manager) :$/;"	f	class:graphlab::distributed_scope
distributed_scope	src/graphlab/distributed/distributed_scope.hpp	/^  class distributed_scope: public iscope<Graph> {$/;"	c	namespace:graphlab
distributed_shared_data	src/graphlab/distributed/distributed_shared_data.hpp	/^    distributed_shared_data(distributed_control &dc) : $/;"	f	class:graphlab::distributed_shared_data
distributed_shared_data	src/graphlab/distributed/distributed_shared_data.hpp	/^  class distributed_shared_data : $/;"	c	namespace:graphlab
distributed_shared_data_apply	src/graphlab/distributed/distributed_shared_data.hpp	/^    static void distributed_shared_data_apply(distributed_control& dc, $/;"	f	class:graphlab::distributed_shared_data
distributed_term_target	src/graphlab/distributed/distributed_terminator.cpp	/^std::vector<distributed_terminator*> distributed_terminator::distributed_term_target;$/;"	m	class:graphlab::distributed_terminator	file:
distributed_term_target	src/graphlab/distributed/distributed_terminator.hpp	/^    static std::vector<distributed_terminator*> distributed_term_target;$/;"	m	class:graphlab::distributed_terminator
distributed_termination_token	src/graphlab/distributed/distributed_terminator.hpp	/^  struct distributed_termination_token {$/;"	s	namespace:graphlab
distributed_terminator	src/graphlab/distributed/distributed_terminator.cpp	/^distributed_terminator::distributed_terminator(distributed_control &dc) :dc(dc) {$/;"	f	class:graphlab::distributed_terminator
distributed_terminator	src/graphlab/distributed/distributed_terminator.hpp	/^  class distributed_terminator{$/;"	c	namespace:graphlab
distributed_terminator_handler	src/graphlab/distributed/distributed_terminator.cpp	/^void distributed_terminator::distributed_terminator_handler(distributed_control &dc,$/;"	f	class:graphlab::distributed_terminator
distribution_type	src/graphlab/util/fast_multinomial.hpp	/^    typedef boost::uniform_01<random_source> distribution_type;$/;"	t	class:graphlab::fast_multinomial
distribution_type	src/graphlab/util/sampling_tree.hpp	/^    typedef boost::uniform_01<random_source> distribution_type;$/;"	t	class:graphlab::sampling_tree
distributions	src/graphlab/util/fast_multinomial.hpp	/^    std::vector<distribution_type> distributions;$/;"	m	class:graphlab::fast_multinomial
distributions	src/graphlab/util/sampling_tree.hpp	/^    std::vector<distribution_type> distributions;$/;"	m	class:graphlab::sampling_tree
distrwlock	src/graphlab/distributed/lock_manager.hpp	/^    inline distrwlock():numreaders(0), writer(false){ }$/;"	f	struct:graphlab::distributed_lock_manager::distrwlock
distrwlock	src/graphlab/distributed/lock_manager.hpp	/^  struct distrwlock{$/;"	s	class:graphlab::distributed_lock_manager
divide	src/graphlab/factors/unary_factor.hpp	/^    inline void divide(const unary_factor& other) {$/;"	f	class:graphlab::unary_factor
dkey_gt	src/graphlab/extern/metis/GKlib/sort.c	197;"	d	file:
dkey_lt	src/graphlab/extern/metis/GKlib/sort.c	187;"	d	file:
dkeyvalue_lt	src/graphlab/extern/metis/libmetis/myqsort.c	56;"	d	file:
dlcalloc	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^void* dlcalloc(size_t n_elements, size_t elem_size) {$/;"	f
dlcalloc	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	751;"	d
dlfree	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^void dlfree(void* mem) {$/;"	f
dlfree	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	752;"	d
dlindependent_calloc	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^void** dlindependent_calloc(size_t n_elements, size_t elem_size,$/;"	f
dlindependent_calloc	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	765;"	d
dlindependent_comalloc	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^void** dlindependent_comalloc(size_t n_elements, size_t sizes[],$/;"	f
dlindependent_comalloc	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	766;"	d
dlm	src/graphlab/distributed/distributed_engine.hpp	/^    distributed_lock_manager<Graph> dlm;$/;"	m	class:graphlab::distributed_engine
dlm	src/graphlab/distributed/graph_lock_manager.hpp	/^    distributed_lock_manager<Graph> &dlm;$/;"	m	class:graphlab::graph_lock_manager
dlmallinfo	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^struct mallinfo dlmallinfo(void) {$/;"	f
dlmallinfo	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	758;"	d
dlmalloc	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^void* dlmalloc(size_t bytes) {$/;"	f
dlmalloc	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	753;"	d
dlmalloc_footprint	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^size_t dlmalloc_footprint(void) {$/;"	f
dlmalloc_footprint	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	763;"	d
dlmalloc_max_footprint	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^size_t dlmalloc_max_footprint(void) {$/;"	f
dlmalloc_max_footprint	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	764;"	d
dlmalloc_stats	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^void dlmalloc_stats() {$/;"	f
dlmalloc_stats	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	761;"	d
dlmalloc_trim	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^int dlmalloc_trim(size_t pad) {$/;"	f
dlmalloc_trim	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	760;"	d
dlmalloc_usable_size	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^size_t dlmalloc_usable_size(void* mem) {$/;"	f
dlmalloc_usable_size	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	762;"	d
dlmallopt	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^int dlmallopt(int param_number, int value) {$/;"	f
dlmallopt	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	759;"	d
dlmemalign	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^void* dlmemalign(size_t alignment, size_t bytes) {$/;"	f
dlmemalign	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	754;"	d
dlpvalloc	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^void* dlpvalloc(size_t bytes) {$/;"	f
dlpvalloc	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	757;"	d
dlrealloc	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^void* dlrealloc(void* oldmem, size_t bytes) {$/;"	f
dlrealloc	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	755;"	d
dlvalloc	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^void* dlvalloc(size_t bytes) {$/;"	f
dlvalloc	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	756;"	d
do_check_any_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void do_check_any_chunk(mstate m, mchunkptr p) {$/;"	f	file:
do_check_free_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void do_check_free_chunk(mstate m, mchunkptr p) {$/;"	f	file:
do_check_inuse_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void do_check_inuse_chunk(mstate m, mchunkptr p) {$/;"	f	file:
do_check_malloc_state	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void do_check_malloc_state(mstate m) {$/;"	f	file:
do_check_malloced_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void do_check_malloced_chunk(mstate m, void* mem, size_t s) {$/;"	f	file:
do_check_mmapped_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void do_check_mmapped_chunk(mstate m, mchunkptr p) {$/;"	f	file:
do_check_smallbin	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void do_check_smallbin(mstate m, bindex_t i) {$/;"	f	file:
do_check_top_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void do_check_top_chunk(mstate m, mchunkptr p) {$/;"	f	file:
do_check_tree	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void do_check_tree(mstate m, tchunkptr t) {$/;"	f	file:
do_check_treebin	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void do_check_treebin(mstate m, bindex_t i) {$/;"	f	file:
domain	src/graphlab/factors/table_factor.hpp	/^    domain() : _num_vars(0), _size(0) { }$/;"	f	class:graphlab::domain
domain	src/graphlab/factors/table_factor.hpp	/^    domain(const std::vector<variable>& variables) :$/;"	f	class:graphlab::domain
domain	src/graphlab/factors/table_factor.hpp	/^    domain(const variable& v1) :$/;"	f	class:graphlab::domain
domain	src/graphlab/factors/table_factor.hpp	/^    domain(const variable& v1, const variable& v2) :$/;"	f	class:graphlab::domain
domain	src/graphlab/factors/table_factor.hpp	/^    domain(const variable& v1,$/;"	f	class:graphlab::domain
domain	src/graphlab/factors/table_factor.hpp	/^  class domain {$/;"	c	namespace:graphlab
domain_type	apps/factor_graph_inference/factor_bp.hpp	/^typedef factor_graph::domain_type domain_type;$/;"	t
domain_type	apps/factor_graph_inference/factor_graph.hpp	/^  typedef factor_type::domain_type         domain_type;$/;"	t	class:factor_graph
domain_type	src/graphlab/factors/table_factor.hpp	/^    typedef domain<MAX_DIM>     domain_type;$/;"	t	class:graphlab::table_factor
domain_type	src/graphlab/factors/table_factor.hpp	/^    typedef domain<MAX_DIM> domain_type;$/;"	t	class:graphlab::assignment
done	src/graphlab/distributed/distributed_control.hpp	/^    size_t* done;$/;"	m	class:graphlab::distributed_control::messageproc_thread
done	src/graphlab/distributed/distributed_control.hpp	/^  size_t done;$/;"	m	class:graphlab::distributed_control
done	src/graphlab/distributed/distributed_terminator.cpp	/^bool distributed_terminator::done(size_t transmitted, size_t received) {$/;"	f	class:graphlab::distributed_terminator
done	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    bool done() {$/;"	f	class:graphlab::execution_plan
done	src/graphlab/util/shared_termination.hpp	/^    bool done;$/;"	m	class:graphlab::shared_termination
double_gt	src/graphlab/extern/metis/GKlib/sort.c	95;"	d	file:
double_lt	src/graphlab/extern/metis/GKlib/sort.c	85;"	d	file:
dterm	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    distributed_terminator dterm;$/;"	m	class:graphlab::distributed_collaborative_scheduler_wrapper
dterm	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    distributed_terminator dterm;$/;"	m	class:graphlab::distributed_scheduler_wrapper
dtree	src/graphlab/extern/metis/libmetis/struct.h	/^  DTreeNodeType *dtree;                 \/* The decission tree itself *\/$/;"	m	struct:__anon4
dump_frequency	apps/pagerank/pagerankapp.cpp	/^int pagerankapp::dump_frequency() {$/;"	f	class:pagerankapp
dump_function	apps/pagerank/pagerankapp.cpp	/^global_dumper pagerankapp::dump_function() {$/;"	f	class:pagerankapp
dump_headers	apps/pagerank/pagerankapp.cpp	/^std::vector<std::string> pagerankapp::dump_headers() {$/;"	f	class:pagerankapp
dv	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  mchunkptr  dv;$/;"	m	struct:malloc_state	file:
dvsize	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  size_t     dvsize;$/;"	m	struct:malloc_state	file:
e	apps/gabp/gabp.cpp	/^  uint32_t e = 0; \/\/ number of edges$/;"	v
e_bit_block	src/graphlab/extern/bitmagic/bmserial.h	/^        e_bit_block,    \/\/\/< one bit block$/;"	e	enum:bm::serial_stream_iterator::iterator_state
e_blocks	src/graphlab/extern/bitmagic/bmserial.h	/^        e_blocks,       \/\/\/< stream of blocks$/;"	e	enum:bm::serial_stream_iterator::iterator_state
e_gap_block	src/graphlab/extern/bitmagic/bmserial.h	/^        e_gap_block     \/\/\/< one gap block$/;"	e	enum:bm::serial_stream_iterator::iterator_state
e_list_ids	src/graphlab/extern/bitmagic/bmserial.h	/^        e_list_ids,     \/\/\/< plain int array$/;"	e	enum:bm::serial_stream_iterator::iterator_state
e_one_blocks	src/graphlab/extern/bitmagic/bmserial.h	/^        e_one_blocks,   \/\/\/< one or more all-1 bit blocks$/;"	e	enum:bm::serial_stream_iterator::iterator_state
e_unknown	src/graphlab/extern/bitmagic/bmserial.h	/^        e_unknown = 0,$/;"	e	enum:bm::serial_stream_iterator::iterator_state
e_zero_blocks	src/graphlab/extern/bitmagic/bmserial.h	/^        e_zero_blocks,  \/\/\/< one or more zero bit blocks$/;"	e	enum:bm::serial_stream_iterator::iterator_state
ed	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *id, *ed;$/;"	m	struct:graphdef
ed	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype ed, ned;$/;"	m	struct:vedegreedef
ed	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype ed;$/;"	m	struct:edegreedef
ed	src/graphlab/extern/metis/libmetis/struct.h	/^ idxtype id, ed, nid;            	\/* ID\/ED of nodes *\/$/;"	m	struct:vrinfodef
ed	src/graphlab/extern/metis/libmetis/struct.h	/^ idxtype id, ed;            	\/* ID\/ED of nodes *\/$/;"	m	struct:rinfodef
edata	apps/gabp/gabp.cpp	/^struct edata{$/;"	s	file:
edata	src/graphlab/distributed/graph_lock_manager.hpp	/^      typename Graph::edge_data_type edata;$/;"	m	struct:graphlab::graph_lock_manager::edge_data_wrapper
edegreedef	src/graphlab/extern/metis/libmetis/struct.h	/^struct edegreedef {$/;"	s
edegrees	src/graphlab/extern/metis/libmetis/struct.h	/^  EDegreeType *edegrees;$/;"	m	struct:workspacedef
edegrees	src/graphlab/extern/metis/libmetis/struct.h	/^ EDegreeType *edegrees;     	\/* List of edges *\/$/;"	m	struct:rinfodef
edegrees	src/graphlab/extern/metis/libmetis/struct.h	/^ VEDegreeType *edegrees;     	\/* List of edges *\/$/;"	m	struct:vrinfodef
edegrees	src/graphlab/extern/metis/libmetis/struct.h	/^ idxtype edegrees[2];  $/;"	m	struct:nrinfodef
edge	src/graphlab/graph/graph.hpp	/^      edge() : _source(-1), _target(-1) { }$/;"	f	class:graphlab::graph::edge
edge	src/graphlab/graph/graph.hpp	/^      edge(const edge& other) :$/;"	f	class:graphlab::graph::edge
edge	src/graphlab/graph/graph.hpp	/^      edge(vertex_id_t source, vertex_id_t target) :$/;"	f	class:graphlab::graph::edge
edge	src/graphlab/graph/graph.hpp	/^      edge(vertex_id_t source, vertex_id_t target, EdgeData data) : $/;"	f	class:graphlab::graph::edge
edge	src/graphlab/graph/graph.hpp	/^    class edge {$/;"	c	class:graphlab::graph
edge	src/graphlab/scope/iscope.hpp	/^    edge_id_t edge(vertex_id_t source,$/;"	f	class:graphlab::iscope
edge_data	apps/concomp/concomp.cpp	/^  edge_data(vid_t weight) :$/;"	f	struct:edge_data
edge_data	apps/concomp/concomp.cpp	/^struct edge_data {$/;"	s	file:
edge_data	apps/concomp/lock_concomp.cpp	/^  edge_data(vid_t weight) :$/;"	f	struct:edge_data
edge_data	apps/concomp/lock_concomp.cpp	/^struct edge_data {$/;"	s	file:
edge_data	apps/concomp/rlx_concomp.cpp	/^typedef vid_t edge_data;$/;"	t	file:
edge_data	apps/concomp/seq_concomp.cpp	/^  edge_data(vid_t weight) :$/;"	f	struct:edge_data
edge_data	apps/concomp/seq_concomp.cpp	/^struct edge_data {$/;"	s	file:
edge_data	apps/concomp/sync_concomp.cpp	/^  edge_data(vid_t weight) :$/;"	f	struct:edge_data
edge_data	apps/concomp/sync_concomp.cpp	/^struct edge_data {$/;"	s	file:
edge_data	apps/demo/concise_demo.cpp	/^typedef char edge_data;$/;"	t	file:
edge_data	apps/demo/demo.cpp	/^typedef char edge_data;$/;"	t	file:
edge_data	apps/factor_graph_inference/factor_bp.hpp	/^struct edge_data {$/;"	s
edge_data	apps/factor_graph_inference/factor_gibbs.hpp	/^struct edge_data {$/;"	s
edge_data	apps/gabp/gabp.cpp	/^struct edge_data {$/;"	s	file:
edge_data	apps/image_denoise/gibbs_denoise.cpp	/^struct edge_data { }; $/;"	s	file:
edge_data	apps/image_denoise/loopybp_denoise.cpp	/^struct edge_data {$/;"	s	file:
edge_data	apps/pagerank/pagerank.cpp	/^  edge_data(float weight) :$/;"	f	struct:edge_data
edge_data	apps/pagerank/pagerank.cpp	/^struct edge_data {$/;"	s	file:
edge_data	apps/pagerank/pagerankapp.hpp	/^  edge_data() {}$/;"	f	struct:edge_data
edge_data	apps/pagerank/pagerankapp.hpp	/^  edge_data(float _w) {$/;"	f	struct:edge_data
edge_data	apps/pagerank/pagerankapp.hpp	/^struct edge_data {$/;"	s
edge_data	apps/pagerank/sync_pagerank.cpp	/^  edge_data(float weight) :$/;"	f	struct:edge_data
edge_data	apps/pagerank/sync_pagerank.cpp	/^struct edge_data {$/;"	s	file:
edge_data	apps/pagerank/tsv_to_graphlab_bin.cpp	/^struct edge_data {$/;"	s	file:
edge_data	apps/shooting/shooting.cpp	/^  edge_data() : x(0) { }$/;"	f	struct:edge_data
edge_data	apps/shooting/shooting.cpp	/^struct edge_data {$/;"	s	file:
edge_data	apps/svm/svm.cpp	/^struct edge_data {$/;"	s	file:
edge_data	src/graphlab/distributed/distributed_scope.hpp	/^    const edge_data_type& edge_data(edge_id_t eid) const {$/;"	f	class:graphlab::distributed_scope
edge_data	src/graphlab/distributed/distributed_scope.hpp	/^    edge_data_type& edge_data(edge_id_t eid) {$/;"	f	class:graphlab::distributed_scope
edge_data	src/graphlab/distributed/graph/cloned_graph.hpp	/^    EdgeData& edge_data(edge_id_t edge_id) { $/;"	f	class:graphlab::cloned_graph
edge_data	src/graphlab/distributed/graph/cloned_graph.hpp	/^    EdgeData& edge_data(vertex_id_t source, vertex_id_t target) {$/;"	f	class:graphlab::cloned_graph
edge_data	src/graphlab/distributed/graph/cloned_graph.hpp	/^    const EdgeData& edge_data(edge_id_t edge_id) const {$/;"	f	class:graphlab::cloned_graph
edge_data	src/graphlab/distributed/graph/cloned_graph.hpp	/^    const EdgeData& edge_data(vertex_id_t source, vertex_id_t target) const {$/;"	f	class:graphlab::cloned_graph
edge_data	src/graphlab/distributed/graph/distributed_graph.hpp	/^    EdgeData& edge_data(edge_id_t edge_id) { $/;"	f	class:graphlab::distributed_graph
edge_data	src/graphlab/distributed/graph/distributed_graph.hpp	/^    EdgeData& edge_data(vertex_id_t source, vertex_id_t target) {$/;"	f	class:graphlab::distributed_graph
edge_data	src/graphlab/distributed/graph/distributed_graph.hpp	/^    const EdgeData& edge_data(edge_id_t edge_id) const {$/;"	f	class:graphlab::distributed_graph
edge_data	src/graphlab/distributed/graph/distributed_graph.hpp	/^    const EdgeData& edge_data(vertex_id_t source, vertex_id_t target) const {$/;"	f	class:graphlab::distributed_graph
edge_data	src/graphlab/graph/graph.hpp	/^    EdgeData& edge_data(edge_id_t edge_id) { $/;"	f	class:graphlab::graph
edge_data	src/graphlab/graph/graph.hpp	/^    EdgeData& edge_data(vertex_id_t source, vertex_id_t target) {$/;"	f	class:graphlab::graph
edge_data	src/graphlab/graph/graph.hpp	/^    const EdgeData& edge_data(edge_id_t edge_id) const {$/;"	f	class:graphlab::graph
edge_data	src/graphlab/graph/graph.hpp	/^    const EdgeData& edge_data(vertex_id_t source, vertex_id_t target) const {$/;"	f	class:graphlab::graph
edge_data	src/graphlab/scope/general_scope.hpp	/^    const edge_data_type& edge_data(edge_id_t eid) const {$/;"	f	class:graphlab::general_scope
edge_data	src/graphlab/scope/general_scope.hpp	/^    edge_data_type& edge_data(edge_id_t eid) {$/;"	f	class:graphlab::general_scope
edge_data	src/graphlab/scope/synchronous_scope.hpp	/^    const edge_data_type& edge_data(edge_id_t eid) const { $/;"	f	class:graphlab::synchronous_scope
edge_data	src/graphlab/scope/synchronous_scope.hpp	/^    edge_data_type& edge_data(edge_id_t eid) {$/;"	f	class:graphlab::synchronous_scope
edge_data_type	src/graphlab.hpp	/^    typedef typename graph::edge_data_type   edge_data_type;$/;"	t	struct:graphlab::types
edge_data_type	src/graphlab/distributed/distributed_scope.hpp	/^    typedef typename Graph::edge_data_type edge_data_type;$/;"	t	class:graphlab::distributed_scope
edge_data_type	src/graphlab/distributed/graph/cloned_graph.hpp	/^    typedef EdgeData   edge_data_type;$/;"	t	class:graphlab::cloned_graph
edge_data_type	src/graphlab/distributed/graph/distributed_graph.hpp	/^    typedef EdgeData   edge_data_type;$/;"	t	class:graphlab::distributed_graph
edge_data_type	src/graphlab/graph/graph.hpp	/^    typedef EdgeData   edge_data_type;$/;"	t	class:graphlab::graph
edge_data_type	src/graphlab/scope/general_scope.hpp	/^    typedef typename Graph::edge_data_type edge_data_type;$/;"	t	class:graphlab::general_scope
edge_data_type	src/graphlab/scope/iscope.hpp	/^    typedef typename Graph::edge_data_type   edge_data_type;$/;"	t	class:graphlab::iscope
edge_data_type	src/graphlab/scope/synchronous_scope.hpp	/^    typedef typename Graph::edge_data_type edge_data_type;$/;"	t	class:graphlab::synchronous_scope
edge_data_wrapper	src/graphlab/distributed/graph_lock_manager.hpp	/^    struct edge_data_wrapper {$/;"	s	class:graphlab::graph_lock_manager
edge_exists	src/graphlab/scope/iscope.hpp	/^    bool edge_exists(vertex_id_t source,$/;"	f	class:graphlab::iscope
edge_id	src/graphlab/distributed/graph/cloned_graph.hpp	/^    edge_id_t edge_id(vertex_id_t source, vertex_id_t target) const {$/;"	f	class:graphlab::cloned_graph
edge_id	src/graphlab/distributed/graph/distributed_graph.hpp	/^    edge_id_t edge_id(vertex_id_t source, vertex_id_t target) const {$/;"	f	class:graphlab::distributed_graph
edge_id	src/graphlab/graph/graph.hpp	/^    edge_id_t edge_id(vertex_id_t source, vertex_id_t target) const {$/;"	f	class:graphlab::graph
edge_id_less	src/graphlab/graph/graph.hpp	/^    inline bool edge_id_less(edge_id_t a, edge_id_t b) const {$/;"	f	class:graphlab::graph
edge_id_less_functor	src/graphlab/distributed/graph/distributed_graph.hpp	/^      edge_id_less_functor(distributed_graph<VertexData, EdgeData> * g_ptr) : g_ptr(g_ptr) { }$/;"	f	struct:graphlab::distributed_graph::edge_id_less_functor
edge_id_less_functor	src/graphlab/distributed/graph/distributed_graph.hpp	/^    struct edge_id_less_functor {$/;"	s	class:graphlab::distributed_graph
edge_id_less_functor	src/graphlab/graph/graph.hpp	/^      edge_id_less_functor(graph* g_ptr) : g_ptr(g_ptr) { }$/;"	f	struct:graphlab::graph::edge_id_less_functor
edge_id_less_functor	src/graphlab/graph/graph.hpp	/^    struct edge_id_less_functor {$/;"	s	class:graphlab::graph
edge_id_t	src/graphlab.hpp	/^    typedef graphlab::edge_id_t edge_id_t;$/;"	t	struct:graphlab::types
edge_id_t	src/graphlab/graph/graph.hpp	/^  typedef uint32_t edge_id_t;$/;"	t	namespace:graphlab
edge_num_partition	src/graphlab/graph/graph.hpp	/^    void edge_num_partition(size_t nparts, std::vector<uint32_t>& vertex2part){$/;"	f	class:graphlab::graph
edge_selector_function	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^  edge_selector_function;$/;"	t	namespace:graphlab
edgepacks	src/graphlab/distributed/graph_lock_manager.hpp	/^    atomic<size_t> edgepacks;$/;"	m	class:graphlab::graph_lock_manager
edgerequests	src/graphlab/distributed/graph_lock_manager.hpp	/^      std::vector<std::vector<edge_id_t> > edgerequests;$/;"	m	struct:graphlab::graph_lock_manager::request_descriptor
edgerequests	src/graphlab/distributed/lock_manager.hpp	/^    std::vector<edge_id_t> edgerequests;$/;"	m	struct:graphlab::distributed_lock_manager::lock_descriptor
edges	src/graphlab/graph/graph.hpp	/^    std::vector<edge> edges;$/;"	m	class:graphlab::graph
edgeset	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    dense_bitset edgeset; \/\/ this edgeset caches the value of the selector$/;"	m	class:graphlab::any_inedge_set
edgeunpacks	src/graphlab/distributed/graph_lock_manager.hpp	/^    atomic<size_t> edgeunpacks;$/;"	m	class:graphlab::graph_lock_manager
eff_cols_	src/graphlab/extern/bitmagic/bmtrans.h	/^    unsigned      eff_cols_;$/;"	m	class:bm::gap_transpose_engine
effective_top_block_size	src/graphlab/extern/bitmagic/bmblocks.h	/^    unsigned effective_top_block_size() const$/;"	f	class:bm::blocks_manager
effective_top_block_size_	src/graphlab/extern/bitmagic/bmblocks.h	/^    unsigned                               effective_top_block_size_;$/;"	m	class:bm::blocks_manager
eid_global_to_local	src/graphlab/distributed/graph/distributed_graph.hpp	/^    boost::unordered_map<edge_id_t, edge_id_t> eid_global_to_local;$/;"	m	class:graphlab::distributed_graph
eid_local_to_global	src/graphlab/distributed/graph/distributed_graph.hpp	/^    std::vector<edge_id_t> eid_local_to_global;$/;"	m	class:graphlab::distributed_graph
element	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  char      element;$/;"	m	struct:__anon12
empty	src/graphlab/util/blocking_queue.hpp	/^    inline bool empty() { $/;"	f	class:graphlab::blocking_queue
empty	src/graphlab/util/generics/any.hpp	/^    bool empty() const {$/;"	f	class:graphlab::any
empty	src/graphlab/util/mutable_queue.hpp	/^    bool empty() const {$/;"	f	class:graphlab::mutable_queue
empty	src/graphlab/util/prioritized_multiqueue.hpp	/^    bool empty() const {$/;"	f	class:graphlab::prioritized_multiqueue
empty	src/graphlab/util/synchronized_multiqueue.hpp	/^    bool empty() const {$/;"	f	class:graphlab::synchronized_multiqueue
empty_	src/graphlab/extern/bitmagic/bmblocks.h	/^        unsigned            empty_;$/;"	m	class:bm::blocks_manager::block_opt_func
enable_buffering	src/graphlab/schedulers/icallback.hpp	/^     virtual void enable_buffering() {}$/;"	f	class:graphlab::icallback
enable_buffering	src/graphlab/schedulers/support/direct_callback.hpp	/^    void enable_buffering() {$/;"	f	class:graphlab::direct_callback
enable_lock	src/graphlab/extern/metis/GKlib/dlmalloc.c	1199;"	d	file:
enable_mmap	src/graphlab/extern/metis/GKlib/dlmalloc.c	1203;"	d	file:
encode_bit_interval	src/graphlab/extern/bitmagic/bmserial.h	/^void serializer<BV>::encode_bit_interval(const bm::word_t* blk, $/;"	f	class:bm::serializer
encode_gap_block	src/graphlab/extern/bitmagic/bmserial.h	/^void serializer<BV>::encode_gap_block(bm::gap_word_t* gap_block, bm::encoder& enc)$/;"	f	class:bm::serializer
encode_header	src/graphlab/extern/bitmagic/bmserial.h	/^void serializer<BV>::encode_header(const BV& bv, bm::encoder& enc)$/;"	f	class:bm::serializer
encodeblock	src/graphlab/extern/metis/GKlib/b64.c	/^void encodeblock(unsigned char *in, unsigned char *out)$/;"	f
encoder	src/graphlab/extern/bitmagic/encoding.h	/^class encoder$/;"	c	namespace:bm
encoder	src/graphlab/extern/bitmagic/encoding.h	/^inline encoder::encoder(unsigned char* buf, unsigned size)$/;"	f	class:bm::encoder
end	src/graphlab/extern/bitmagic/bm.h	/^    enumerator end() const$/;"	f	class:bm::bvector
end	src/graphlab/factors/table_factor.hpp	/^    const double* end() const { return _data.end(); }$/;"	f	class:graphlab::table_factor
end	src/graphlab/factors/table_factor.hpp	/^    double* end() { return _data.end(); }$/;"	f	class:graphlab::table_factor
end	src/graphlab/factors/table_factor.hpp	/^  assignment<MAX_DIM> domain<MAX_DIM>::end() const {$/;"	f	class:graphlab::domain
end	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^  inline ss_set_type_iterator end(const ss_set_type &s) {$/;"	f	namespace:graphlab
end	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^  inline ss_small_set_type_iterator end(const ss_small_set_type &s) {$/;"	f	namespace:graphlab
end_of_stream_	src/graphlab/extern/bitmagic/bmserial.h	/^    bool               end_of_stream_;$/;"	m	class:bm::serial_stream_iterator
end_sleep_critical_section	src/graphlab/util/shared_termination.hpp	/^    bool end_sleep_critical_section(size_t cpuid) {$/;"	f	class:graphlab::shared_termination
engine	apps/factor_graph_inference/factor_bp.cpp	/^  std::string engine;$/;"	m	struct:options	file:
engine	apps/factor_graph_inference/factor_gibbs.cpp	/^  std::string engine;$/;"	m	struct:options	file:
engine	apps/image_denoise/gibbs_denoise.cpp	/^  std::string engine;$/;"	m	struct:options	file:
engine	apps/image_denoise/loopybp_denoise.cpp	/^  std::string engine;$/;"	m	struct:options	file:
engine	src/graphlab/core.hpp	/^    typename types::iengine& engine() { $/;"	f	class:graphlab::core
engine	src/graphlab/distributed/distributed_engine.hpp	/^      distributed_engine<Graph, DistributedScheduler>* engine;$/;"	m	class:graphlab::distributed_engine::task_worker
engine	src/graphlab/distributed/pushy_distributed_engine.hpp	/^      pushy_distributed_engine* engine;$/;"	m	class:graphlab::pushy_distributed_engine::task_worker
engine	src/graphlab/engine/asynchronous_engine.hpp	/^      asynchronous_engine* engine;$/;"	m	class:graphlab::asynchronous_engine::engine_thread
engine	src/graphlab/engine/synchronous_engine.hpp	/^      synchronous_engine* engine;$/;"	m	class:graphlab::synchronous_engine::synchronous_worker
engine	src/graphlab/engine/threaded_engine.hpp	/^      threaded_engine* engine;$/;"	m	class:graphlab::threaded_engine::engine_thread
engine	src/graphlab/schedulers/support/direct_callback.hpp	/^    iengine_type* engine; $/;"	m	class:graphlab::direct_callback
engine	src/graphlab/schedulers/support/unused_scheduler_callback.hpp	/^    iengine_type* engine;$/;"	m	class:graphlab::unused_scheduler_callback
engine_factory	src/graphlab/engine/engine_factory.hpp	/^  namespace engine_factory {$/;"	n	namespace:graphlab
engine_options	src/graphlab.hpp	/^    typedef graphlab::engine_options engine_options;$/;"	t	struct:graphlab::types
engine_options	src/graphlab/engine/engine_options.hpp	/^    engine_options() :$/;"	f	struct:graphlab::engine_options
engine_options	src/graphlab/engine/engine_options.hpp	/^  struct engine_options {$/;"	s	namespace:graphlab
engine_ptr	src/graphlab/core.hpp	/^	typename types::iengine* engine_ptr(){$/;"	f	class:graphlab::core
engine_task_execute_finished	src/graphlab/monitoring/imonitor.hpp	/^    virtual void engine_task_execute_finished(update_task_type task, $/;"	f	class:graphlab::imonitor
engine_task_execute_finished	src/graphlab/monitoring/monitor_multiplexer.hpp	/^    void engine_task_execute_finished(update_task_type task, $/;"	f	class:graphlab::monitor_multiplexer
engine_task_execute_start	src/graphlab/monitoring/imonitor.hpp	/^    virtual void engine_task_execute_start(update_task_type task, $/;"	f	class:graphlab::imonitor
engine_task_execute_start	src/graphlab/monitoring/monitor_multiplexer.hpp	/^    void engine_task_execute_start(update_task_type task, $/;"	f	class:graphlab::monitor_multiplexer
engine_thread	src/graphlab/engine/asynchronous_engine.hpp	/^      engine_thread() : engine(NULL), workerid(0) {  }$/;"	f	class:graphlab::asynchronous_engine::engine_thread
engine_thread	src/graphlab/engine/asynchronous_engine.hpp	/^    class engine_thread : public runnable {      $/;"	c	class:graphlab::asynchronous_engine
engine_thread	src/graphlab/engine/threaded_engine.hpp	/^      engine_thread() : engine(NULL), workerid(0) {  }$/;"	f	class:graphlab::threaded_engine::engine_thread
engine_thread	src/graphlab/engine/threaded_engine.hpp	/^    class engine_thread : public runnable {      $/;"	c	class:graphlab::threaded_engine
engine_type	src/graphlab/engine/engine_options.hpp	/^    std::string engine_type;$/;"	m	struct:graphlab::engine_options
engine_worker_dies	src/graphlab/monitoring/imonitor.hpp	/^    virtual void engine_worker_dies(size_t cpuid, int taskcount) { }$/;"	f	class:graphlab::imonitor
engine_worker_dies	src/graphlab/monitoring/monitor_multiplexer.hpp	/^    void engine_worker_dies(size_t cpuid, int taskcount){ $/;"	f	class:graphlab::monitor_multiplexer
engine_worker_starts	src/graphlab/monitoring/imonitor.hpp	/^    virtual void engine_worker_starts(size_t cpuid) { }$/;"	f	class:graphlab::imonitor
engine_worker_starts	src/graphlab/monitoring/monitor_multiplexer.hpp	/^    void engine_worker_starts(size_t cpuid) { $/;"	f	class:graphlab::monitor_multiplexer
engines	src/graphlab.hpp	/^    struct engines {$/;"	s	struct:graphlab::types
enqueue	src/graphlab/util/blocking_queue.hpp	/^    inline void enqueue(const T& elem) {$/;"	f	class:graphlab::blocking_queue
enumerator	src/graphlab/extern/bitmagic/bm.h	/^        enumerator() : iterator_base() {}$/;"	f	class:bm::bvector::enumerator
enumerator	src/graphlab/extern/bitmagic/bm.h	/^        enumerator(const bvector<Alloc, MS>* bvect, int position)$/;"	f	class:bm::bvector::enumerator
enumerator	src/graphlab/extern/bitmagic/bm.h	/^    class enumerator : public iterator_base$/;"	c	class:bm::bvector
erase	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    void erase(ivertex_set* parent, vertex_id_t v) {$/;"	f	class:graphlab::any_inedge_set
erase	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    void erase(base* parent, vertex_id_t v) {$/;"	f	class:graphlab::multinomial_vertex_set
erase	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    void erase(base* parent, vertex_id_t v) {$/;"	f	class:graphlab::restricted_vertex_set
erase	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    void erase(ivertex_set_type* parent, vertex_id_t v) {$/;"	f	class:graphlab::vertex_set
erase	src/graphlab/util/synchronized_unordered_map.hpp	/^   void erase(size_t key) {$/;"	f	class:graphlab::synchronized_unordered_map
erase_events	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	/^    std::vector<ivertex_set*> erase_events;$/;"	m	class:graphlab::ivertex_set
erase_if	src/graphlab/util/synchronized_unordered_map.hpp	/^   void erase_if(size_t key, Predicate pred) {$/;"	f	class:graphlab::synchronized_unordered_map
errexit	src/graphlab/extern/metis/GKlib/error.c	/^void errexit(char *f_str,...)$/;"	f
exchange	src/graphlab/distributed/distributed_hash_table.cpp	/^void distributed_hash_table::exchange(size_t key, $/;"	f	class:graphlab::distributed_hash_table
exchange	src/graphlab/distributed/distributed_hash_table.hpp	/^  void exchange(size_t key, const T &newvalue, T &oldvalue) {$/;"	f	class:graphlab::distributed_hash_table
exchange	src/graphlab/extern/metis/GKlib/getopt.c	/^static void exchange (char **argv)$/;"	f	file:
exec_status	src/graphlab/engine/iengine.hpp	/^  enum exec_status {$/;"	g	namespace:graphlab
exec_sync_on_vertex	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^   void exec_sync_on_vertex(size_t cpuid, iscope_type * scope, size_t index) {$/;"	f	class:graphlab::distributed_fullsweep_sdm
exec_type	src/graphlab/engine/asynchronous_engine.hpp	/^    execution_type exec_type;$/;"	m	class:graphlab::asynchronous_engine
execute	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    void execute(ivertex_set_type &srcset, update_function_type u) {$/;"	f	class:graphlab::execution_plan
execute	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    void execute(ivertex_set_type& srcset, update_function_type u) {$/;"	f	class:graphlab::set_scheduler
execute	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    void execute(vertex_id_t v, update_function_type u) {$/;"	f	class:graphlab::set_scheduler
execute_plan	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    void execute_plan(execution_plan_type& eplan) {$/;"	f	class:graphlab::set_scheduler
execute_rep	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    void execute_rep(ivertex_set_type& srcset, $/;"	f	class:graphlab::set_scheduler
executedtaskctr	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    atomic<size_t> executedtaskctr; \/\/\/ A counter of the number of tasks executed$/;"	m	class:graphlab::set_scheduler
executing	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    bool executing;$/;"	m	class:graphlab::set_scheduler
execution_plan	src/graphlab.hpp	/^    typedef typename graphlab::execution_plan<graph> execution_plan;$/;"	t	struct:graphlab::types
execution_plan	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    execution_plan() {}$/;"	f	class:graphlab::execution_plan
execution_plan	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^  class execution_plan {$/;"	c	namespace:graphlab
execution_plan_type	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    typedef execution_plan<Graph> execution_plan_type;$/;"	t	class:graphlab::set_scheduler
execution_type	src/graphlab/engine/asynchronous_engine.hpp	/^    enum execution_type {THREADED, SIMULATED};$/;"	g	class:graphlab::asynchronous_engine
expectation	src/graphlab/factors/table_factor.hpp	/^    inline void expectation(std::vector<double>& values) const {$/;"	f	class:graphlab::table_factor
expectation	src/graphlab/factors/unary_factor.hpp	/^    inline double expectation() const {  $/;"	f	class:graphlab::unary_factor
experimental_scope_upgrade	src/graphlab/scope/general_scope.hpp	/^    bool experimental_scope_upgrade(scope_range::scope_range_enum newrange) { $/;"	f	class:graphlab::general_scope
experimental_scope_upgrade	src/graphlab/scope/iscope.hpp	/^    experimental_scope_upgrade(scope_range::scope_range_enum newrange) { $/;"	f	class:graphlab::iscope
export_array	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^void export_array(BV& bv, It first, It last)$/;"	f	namespace:bm
extend_gap_block	src/graphlab/extern/bitmagic/bm.h	/^    void extend_gap_block(unsigned nb, gap_word_t* blk)$/;"	f	class:bm::bvector
extend_gap_block	src/graphlab/extern/bitmagic/bmblocks.h	/^    bm::gap_word_t* extend_gap_block(unsigned nb, gap_word_t* blk)$/;"	f	class:bm::blocks_manager
extp	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  void*      extp;      \/* Unused but available for extensions *\/$/;"	m	struct:malloc_state	file:
extract_next	src/graphlab/extern/bitmagic/bm.h	/^    bm::id_t extract_next(bm::id_t prev)$/;"	f	class:bm::bvector
exts	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  size_t     exts;$/;"	m	struct:malloc_state	file:
f	src/graphlab/logger/logger.hpp	/^  file_logger& operator<<(std::ostream& (*f)(std::ostream&)){$/;"	f	class:file_logger
factor_graph	apps/factor_graph_inference/factor_graph.hpp	/^class factor_graph {$/;"	c
factor_type	apps/factor_graph_inference/factor_bp.hpp	/^typedef factor_graph::factor_type factor_type;$/;"	t
factor_type	apps/factor_graph_inference/factor_graph.hpp	/^  typedef graphlab::table_factor<MAX_DIM>  factor_type;$/;"	t	class:factor_graph
factors	apps/factor_graph_inference/factor_gibbs.hpp	/^  std::vector<uint32_t> factors;$/;"	m	struct:vertex_data
factors	apps/factor_graph_inference/factor_graph.hpp	/^  const std::vector<factor_type>& factors() const { return _factors; }$/;"	f	class:factor_graph
factory	src/graphlab/scope/general_scope.hpp	/^    iscope_factory<Graph>* factory;$/;"	m	class:graphlab::general_scope
famax2	src/graphlab/extern/metis/libmetis/rename.h	391;"	d
famax2	src/graphlab/extern/metis/libmetis/util.c	/^idxtype famax2(size_t n, float *x)$/;"	f
fast_data_vector	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    std::vector< cached_any > fast_data_vector;$/;"	m	class:graphlab::distributed_fullsweep_sdm
fast_multinomial	src/graphlab/util/fast_multinomial.hpp	/^    fast_multinomial(size_t num_asg,$/;"	f	class:graphlab::fast_multinomial
fast_multinomial	src/graphlab/util/fast_multinomial.hpp	/^  class fast_multinomial{$/;"	c	namespace:graphlab
fcolval	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  float *frowval, *fcolval;$/;"	m	struct:__anon7
fd	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  struct malloc_chunk* fd;         \/* double links -- used only if free. *\/$/;"	m	struct:malloc_chunk	typeref:struct:malloc_chunk::malloc_chunk	file:
fd	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  struct malloc_tree_chunk* fd;$/;"	m	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk	file:
feat	apps/svm/svm.cpp	/^    feat_vertex_data feat;$/;"	m	union:vertex_data::__anon1	file:
feat_vertex_data	apps/svm/svm.cpp	/^struct feat_vertex_data {$/;"	s	file:
fence_packdata	src/graphlab/distributed/dc_packet_headers.hpp	/^struct fence_packdata{$/;"	s	namespace:graphlab
fifo_scheduler	src/graphlab.hpp	/^    typedef graphlab::fifo_scheduler<graph> fifo_scheduler;$/;"	t	struct:graphlab::types
fifo_scheduler	src/graphlab/schedulers/fifo_scheduler.hpp	/^    fifo_scheduler(iengine_type* engine,$/;"	f	class:graphlab::fifo_scheduler
fifo_scheduler	src/graphlab/schedulers/fifo_scheduler.hpp	/^  class fifo_scheduler: public ischeduler<Graph> {$/;"	c	namespace:graphlab
file_logger	src/graphlab/logger/logger.cpp	/^file_logger::file_logger() {$/;"	f	class:file_logger
file_logger	src/graphlab/logger/logger.hpp	/^class file_logger{$/;"	c
filename_for_part	src/graphlab/distributed/graph/distributed_graph.hpp	/^    static char * filename_for_part(const std::string& basename, int procid, int numofprocs) {$/;"	f	class:graphlab::distributed_graph
fill	src/graphlab/util/dense_bitset.hpp	/^    inline void fill() {$/;"	f	class:graphlab::dense_bitset
fill	src/graphlab/util/dense_bitset.hpp	/^    inline void fill() {$/;"	f	class:graphlab::fixed_dense_bitset
fill_shared_data	apps/factor_graph_inference/factor_gibbs.hpp	/^void fill_shared_data(const factor_graph& fgraph,$/;"	f
fillcache	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^       void fillcache(size_t index, any value) {$/;"	f	class:graphlab::distributed_fullsweep_sdm
finalize	src/graphlab/distributed/graph/cloned_graph.hpp	/^    void finalize() {$/;"	f	class:graphlab::cloned_graph
finalize	src/graphlab/distributed/graph/distributed_graph.hpp	/^    void finalize() {$/;"	f	class:graphlab::distributed_graph
finalize	src/graphlab/graph/graph.hpp	/^    void finalize() {$/;"	f	class:graphlab::graph
finalize_dist	src/graphlab/distributed/graph/distributed_graph.hpp	/^    void finalize_dist() {$/;"	f	class:graphlab::distributed_graph
finalized	src/graphlab/graph/graph.hpp	/^    bool finalized;$/;"	m	class:graphlab::graph
find	src/graphlab/distributed/graph/cloned_graph.hpp	/^    find(vertex_id_t source, vertex_id_t target) const {$/;"	f	class:graphlab::cloned_graph
find	src/graphlab/distributed/graph/distributed_graph.hpp	/^    find(vertex_id_t source, vertex_id_t target) const {$/;"	f	class:graphlab::distributed_graph
find	src/graphlab/graph/graph.hpp	/^    find(vertex_id_t source, vertex_id_t target) const {$/;"	f	class:graphlab::graph
find	src/graphlab/util/synchronized_unordered_map.hpp	/^   std::pair<bool, Data*> find(size_t key) {$/;"	f	class:graphlab::synchronized_unordered_map
find	src/graphlab/util/synchronized_unordered_map.hpp	/^   std::pair<bool, const Data*> find(size_t key) const {$/;"	f	class:graphlab::synchronized_unordered_map
find_effective_columns	src/graphlab/extern/bitmagic/bmtrans.h	/^unsigned find_effective_columns(const TM& tmatrix)$/;"	f	namespace:bm
find_max_block	src/graphlab/extern/bitmagic/bmrandom.h	/^unsigned random_subset<BV>::find_max_block() $/;"	f	class:bm::random_subset
find_next_nz_block	src/graphlab/extern/bitmagic/bmblocks.h	/^    unsigned find_next_nz_block(unsigned nb, bool deep_scan = true) const$/;"	f	class:bm::blocks_manager
finer	src/graphlab/extern/metis/libmetis/struct.h	/^  struct graphdef *coarser, *finer;$/;"	m	struct:graphdef	typeref:struct:graphdef::
finish	src/graphlab/util/task_count_termination.hpp	/^    bool finish() {$/;"	f	class:graphlab::task_count_termination
finishedtaskcount	src/graphlab/util/task_count_termination.hpp	/^    atomic<size_t> finishedtaskcount;$/;"	m	class:graphlab::task_count_termination
finishedtaskctr	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    atomic<size_t> finishedtaskctr; \/\/\/ A counter of the number of tasks completed$/;"	m	class:graphlab::set_scheduler
first	src/graphlab/extern/bitmagic/bm.h	/^    enumerator first() const$/;"	f	class:bm::bvector
first	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    bool first(vertex_id_t &i, size_t cpuid) {$/;"	f	class:graphlab::any_inedge_set
first	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    bool first(vertex_id_t &i, size_t cpuid) {$/;"	f	class:graphlab::multinomial_vertex_set
first	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    bool first(vertex_id_t &i, size_t cpuid) {$/;"	f	class:graphlab::restricted_vertex_set
first	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    bool first(vertex_id_t &i, size_t cpuid) {$/;"	f	class:graphlab::vertex_set
first_bit	src/graphlab/util/dense_bitset.hpp	/^    inline bool first_bit(uint32_t &b) {$/;"	f	class:graphlab::dense_bitset
first_bit	src/graphlab/util/dense_bitset.hpp	/^    inline bool first_bit(uint32_t &b) {$/;"	f	class:graphlab::fixed_dense_bitset
first_bit_in_block	src/graphlab/util/dense_bitset.hpp	/^    inline size_t first_bit_in_block(const size_t &block) {$/;"	f	class:graphlab::fixed_dense_bitset
first_bit_in_block	src/graphlab/util/dense_bitset.hpp	/^    inline size_t first_bit_in_block(const size_t& block) {$/;"	f	class:graphlab::dense_bitset
first_bit_table	src/graphlab/extern/bitmagic/bmconst.h	/^template<bool T> struct first_bit_table$/;"	s	namespace:bm
first_leaf_index	src/graphlab/util/fast_multinomial.hpp	/^    size_t first_leaf_index;$/;"	m	class:graphlab::fast_multinomial
first_nonopt	src/graphlab/extern/metis/GKlib/getopt.c	/^static int first_nonopt;$/;"	v	file:
fixed_dense_bitset	src/graphlab/util/dense_bitset.hpp	/^    fixed_dense_bitset() {$/;"	f	class:graphlab::fixed_dense_bitset
fixed_dense_bitset	src/graphlab/util/dense_bitset.hpp	/^    fixed_dense_bitset(const fixed_dense_bitset &db) {$/;"	f	class:graphlab::fixed_dense_bitset
fixed_dense_bitset	src/graphlab/util/dense_bitset.hpp	/^  class fixed_dense_bitset {$/;"	c	namespace:graphlab
fixediterations	src/graphlab/engine/synchronous_engine.hpp	/^    size_t fixediterations; $/;"	m	class:graphlab::synchronous_engine
fixline	apps/concomp/concomp.cpp	/^void fixline(char* p){$/;"	f
fixline	apps/concomp/lock_concomp.cpp	/^void fixline(char* p){$/;"	f
fixline	apps/concomp/rlx_concomp.cpp	/^void fixline(char* p){$/;"	f
fixline	apps/concomp/seq_concomp.cpp	/^void fixline(char* p){$/;"	f
fixline	apps/concomp/sync_concomp.cpp	/^void fixline(char* p){$/;"	f
fixline	apps/pagerank/pagerank.cpp	/^void fixline(char* p){$/;"	f
fixline	apps/pagerank/sync_pagerank.cpp	/^void fixline(char* p){$/;"	f
fkey_gt	src/graphlab/extern/metis/GKlib/sort.c	177;"	d	file:
fkey_lt	src/graphlab/extern/metis/GKlib/sort.c	167;"	d	file:
flag	src/graphlab/extern/metis/GKlib/gk_getopt.h	/^  int *flag;        \/*!< See the discussion on ::gk_option#val *\/$/;"	m	struct:gk_option
flag_t	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^typedef unsigned int flag_t;           \/* The type of various bit flag sets *\/$/;"	t	file:
flip	src/graphlab/extern/bitmagic/bm.h	/^        reference& flip()$/;"	f	class:bm::bvector::reference
flip	src/graphlab/extern/bitmagic/bm.h	/^    bvector<Alloc, MS>& flip() $/;"	f	class:bm::bvector
flip	src/graphlab/extern/bitmagic/bm.h	/^    bvector<Alloc, MS>& flip(bm::id_t n) $/;"	f	class:bm::bvector
float_gt	src/graphlab/extern/metis/GKlib/sort.c	75;"	d	file:
float_lt	src/graphlab/extern/metis/GKlib/sort.c	65;"	d	file:
float_selector	src/graphlab/util/generics/float_selector.hpp	/^struct float_selector {$/;"	s	namespace:graphlab
float_selector	src/graphlab/util/generics/float_selector.hpp	/^struct float_selector<16> {$/;"	s	namespace:graphlab
float_selector	src/graphlab/util/generics/float_selector.hpp	/^struct float_selector<4> {$/;"	s	namespace:graphlab
float_selector	src/graphlab/util/generics/float_selector.hpp	/^struct float_selector<8> {$/;"	s	namespace:graphlab
float_t	src/graphlab/util/fast_multinomial.hpp	21;"	d
float_t	src/graphlab/util/fast_multinomial.hpp	410;"	d
float_type	src/graphlab/util/generics/float_selector.hpp	/^  typedef double float_type;$/;"	t	struct:graphlab::float_selector
float_type	src/graphlab/util/generics/float_selector.hpp	/^  typedef float float_type;$/;"	t	struct:graphlab::float_selector
float_type	src/graphlab/util/generics/float_selector.hpp	/^  typedef long double float_type;$/;"	t	struct:graphlab::float_selector
flush	src/graphlab/extern/bitmagic/encoding.h	/^    void flush()$/;"	f	class:bm::bit_out
flush_accum	src/graphlab/extern/bitmagic/encoding.h	/^    void flush_accum()$/;"	f	class:bm::bit_out
fm	src/graphlab/extern/metis/GKlib/dlmalloc.c	3474;"	d	file:
fnptr	src/graphlab/distributed/dc_packet_headers.hpp	/^  void* fnptr;$/;"	m	struct:graphlab::remotecall_packdata
fnptr	src/graphlab/distributed/dc_packet_headers.hpp	/^  void* fnptr;$/;"	m	struct:graphlab::remotecallx_packdata
fnptr	src/graphlab/distributed/dc_packet_headers.hpp	/^  void* fnptr;$/;"	m	struct:graphlab::remotecallxs_packdata
footprint	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  size_t     footprint;$/;"	m	struct:malloc_state	file:
for_each_block	src/graphlab/extern/bitmagic/bmfunc.h	/^void for_each_block(T*** root, unsigned size1, unsigned size2, F& f)$/;"	f	namespace:bm
for_each_dgap	src/graphlab/extern/bitmagic/bmfunc.h	/^void for_each_dgap(const T* BMRESTRICT gap_buf, Func& func)$/;"	f	namespace:bm
for_each_gap_dbit	src/graphlab/extern/bitmagic/bmfunc.h	/^void for_each_gap_dbit(const T* buf, F& func)$/;"	f	namespace:bm
for_each_nzblock	src/graphlab/extern/bitmagic/bmfunc.h	/^void for_each_nzblock(T*** root, unsigned size1, unsigned size2, $/;"	f	namespace:bm
for_each_nzblock_if	src/graphlab/extern/bitmagic/bmfunc.h	/^bool for_each_nzblock_if(T*** root, unsigned size1, unsigned size2, F& f)$/;"	f	namespace:bm
force_abort	src/graphlab/schedulers/support/binary_scheduler_callback.hpp	/^    void force_abort() {$/;"	f	class:graphlab::binary_scheduler_callback
force_abort	src/graphlab/schedulers/support/direct_callback.hpp	/^    void force_abort() {$/;"	f	class:graphlab::direct_callback
force_abort	src/graphlab/schedulers/support/unused_scheduler_callback.hpp	/^    void force_abort() {$/;"	f	class:graphlab::unused_scheduler_callback
force_termination	src/graphlab/util/task_count_termination.hpp	/^    bool force_termination; \/\/signal computation is aborted$/;"	m	class:graphlab::task_count_termination
fordblks	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	/^  MALLINFO_FIELD_TYPE fordblks; \/* total free space *\/$/;"	m	struct:mallinfo
foreach	src/graphlab/macros_def.hpp	28;"	d
foreach	src/graphlab/macros_undef.hpp	11;"	d
forget_count	src/graphlab/extern/bitmagic/bm.h	/^    void forget_count()$/;"	f	class:bm::bvector
fout	src/graphlab/logger/logger.hpp	/^  std::ofstream fout;$/;"	m	class:file_logger
free_adjncy	src/graphlab/extern/metis/libmetis/struct.h	/^  int free_xadj, free_vwgt, free_vsize, free_adjncy, free_adjwgt;$/;"	m	struct:graphdef
free_adjwgt	src/graphlab/extern/metis/libmetis/struct.h	/^  int free_xadj, free_vwgt, free_vsize, free_adjncy, free_adjwgt;$/;"	m	struct:graphdef
free_bit_block	src/graphlab/extern/bitmagic/bmalloc.h	/^    void free_bit_block(bm::word_t* block, unsigned alloc_factor = 1)$/;"	f	class:bm::mem_alloc
free_block	src/graphlab/extern/bitmagic/bmblocks.h	/^        void free_block(gap_word_t* gap_blk, unsigned idx)$/;"	f	class:bm::blocks_manager::block_opt_func
free_gap_block	src/graphlab/extern/bitmagic/bmalloc.h	/^    void free_gap_block(bm::gap_word_t*   block,$/;"	f	class:bm::mem_alloc
free_mem_	src/graphlab/extern/bitmagic/bmblocks.h	/^        bool free_mem_; \/\/!< If "true" frees bitblocks memsets to '0'$/;"	m	class:bm::blocks_manager::block_zero_func
free_ptr	src/graphlab/extern/bitmagic/bmalloc.h	/^    void free_ptr(void* p, unsigned size = bm::set_array_size)$/;"	f	class:bm::mem_alloc
free_ptr	src/graphlab/extern/bitmagic/bmblocks.h	/^    void free_ptr(bm::word_t** ptr)$/;"	f	class:bm::blocks_manager
free_tempblock	src/graphlab/extern/bitmagic/bm.h	/^    void free_tempblock(bm::word_t* block) const$/;"	f	class:bm::bvector
free_vsize	src/graphlab/extern/metis/libmetis/struct.h	/^  int free_xadj, free_vwgt, free_vsize, free_adjncy, free_adjwgt;$/;"	m	struct:graphdef
free_vwgt	src/graphlab/extern/metis/libmetis/struct.h	/^  int free_xadj, free_vwgt, free_vsize, free_adjncy, free_adjwgt;$/;"	m	struct:graphdef
free_xadj	src/graphlab/extern/metis/libmetis/struct.h	/^  int free_xadj, free_vwgt, free_vsize, free_adjncy, free_adjwgt;$/;"	m	struct:graphdef
from	apps/gabp/gabp.cpp	/^  int from;$/;"	m	struct:edata	file:
from_	src/graphlab/extern/bitmagic/bmfunc.h	/^    unsigned from_;$/;"	m	class:bm::decoder_range_adapter
frowval	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  float *frowval, *fcolval;$/;"	m	struct:__anon7
fsmblks	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	/^  MALLINFO_FIELD_TYPE fsmblks;  \/* always 0 *\/$/;"	m	struct:mallinfo
fun_priority_pair	src/graphlab/schedulers/support/vertex_task_set.hpp	/^    typedef std::pair< update_function_type, double > fun_priority_pair;$/;"	t	class:graphlab::vertex_task_set
func	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^      schedule_function_type func;$/;"	m	class:graphlab::set_scheduler::scheduler_worker
func	src/graphlab/tasks/update_task.hpp	/^    update_function_type func;$/;"	m	class:graphlab::update_task
function	src/graphlab/tasks/update_task.hpp	/^    update_function_type function() const {$/;"	f	class:graphlab::update_task
fwspacefree	src/graphlab/extern/metis/libmetis/memory.c	/^void fwspacefree(CtrlType *ctrl, idxtype n)$/;"	f
fwspacemalloc	src/graphlab/extern/metis/libmetis/memory.c	/^float *fwspacemalloc(CtrlType *ctrl, idxtype n)$/;"	f
fwspacemalloc	src/graphlab/extern/metis/libmetis/rename.h	170;"	d
g	apps/pagerank/pagerankapp.hpp	/^  pagerank_graph g;$/;"	m	class:pagerankapp
g	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    Graph* g;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
g	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    Graph& g;$/;"	m	class:graphlab::clustered_priority_scheduler
g	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    blob_graph *g;$/;"	m	class:graphlab::any_inedge_set
g	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    Graph *g;$/;"	m	class:graphlab::multinomial_vertex_set
g	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    Graph* g;$/;"	m	class:graphlab::restricted_vertex_set
g	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    Graph& g;     \/\/\/  A reference to the engine's graph$/;"	m	class:graphlab::set_scheduler
g	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    Graph *g;$/;"	m	class:graphlab::vertex_set
g	src/graphlab/schedulers/sweep_scheduler.hpp	/^    Graph* g;$/;"	m	class:graphlab::sweep_scheduler
g_inedges	src/graphlab/distributed/graph/distributed_graph.hpp	/^    std::vector< std::vector< edge_id_t > >  g_inedges;    $/;"	m	class:graphlab::distributed_graph
g_outedges	src/graphlab/distributed/graph/distributed_graph.hpp	/^    std::vector< std::vector< edge_id_t > >  g_outedges;    $/;"	m	class:graphlab::distributed_graph
g_ptr	src/graphlab/distributed/graph/distributed_graph.hpp	/^      distributed_graph<VertexData, EdgeData> * g_ptr;$/;"	m	struct:graphlab::distributed_graph::edge_id_less_functor
g_ptr	src/graphlab/graph/graph.hpp	/^      graph* g_ptr;$/;"	m	struct:graphlab::graph::edge_id_less_functor
gabp_update_function	apps/gabp/gabp.cpp	/^void gabp_update_function(gl_types::iscope &scope,$/;"	f
gamma	src/graphlab/extern/bitmagic/encoding.h	/^    unsigned gamma()$/;"	f	class:bm::bit_in
gamma	src/graphlab/extern/bitmagic/encoding.h	/^    void gamma(unsigned value)$/;"	f	class:bm::bit_out
gamma	src/graphlab/util/optimal_termination.hpp	/^    volatile size_t gamma;$/;"	m	class:graphlab::optimal_termination
gamma_decoder	src/graphlab/extern/bitmagic/bmgamma.h	/^    gamma_decoder(TBitIO& bin) : bin_(bin) $/;"	f	class:bm::gamma_decoder
gamma_decoder	src/graphlab/extern/bitmagic/bmgamma.h	/^class gamma_decoder$/;"	c	namespace:bm
gamma_decoder	src/graphlab/extern/bitmagic/encoding.h	/^    gamma_decoder(TBitIO& bin) : bin_(bin) $/;"	f	class:bm::gamma_decoder
gamma_decoder	src/graphlab/extern/bitmagic/encoding.h	/^class gamma_decoder$/;"	c	namespace:bm
gamma_encoder	src/graphlab/extern/bitmagic/encoding.h	/^    gamma_encoder(TBitIO& bout) : bout_(bout) $/;"	f	class:bm::gamma_encoder
gamma_encoder	src/graphlab/extern/bitmagic/encoding.h	/^class gamma_encoder$/;"	c	namespace:bm
gamma_encoder_func	src/graphlab/extern/bitmagic/bmserial.h	/^    typedef bm::gamma_encoder<bm::gap_word_t, bit_out_type> gamma_encoder_func;$/;"	t	class:bm::serializer
gamma_gap_array	src/graphlab/extern/bitmagic/bmserial.h	/^void serializer<BV>::gamma_gap_array(const bm::gap_word_t* gap_array, $/;"	f	class:bm::serializer
gamma_gap_block	src/graphlab/extern/bitmagic/bmserial.h	/^void serializer<BV>::gamma_gap_block(bm::gap_word_t* gap_block, bm::encoder& enc)$/;"	f	class:bm::serializer
gap2bit_table_	src/graphlab/extern/bitmagic/bmfunc.h	/^        gap_operation_to_bitset_func_type gap2bit_table_[bm::set_END];$/;"	m	struct:bm::operation_functions
gap2bit_table_	src/graphlab/extern/bitmagic/bmfunc.h	/^operation_functions<T>::gap2bit_table_[bm::set_END] = {$/;"	m	class:bm::operation_functions
gap_	src/graphlab/extern/bitmagic/bm.h	/^            dgap_descr       gap_;  \/\/!< DGAP block related info.$/;"	m	union:bm::bvector::iterator_base::block_descr
gap_2_bitblock	src/graphlab/extern/bitmagic/bmtrans.h	/^void gap_2_bitblock(const GT* BMRESTRICT gap_buf, $/;"	f	namespace:bm
gap_2_dgap	src/graphlab/extern/bitmagic/bmfunc.h	/^T* gap_2_dgap(const T* BMRESTRICT gap_buf, T* BMRESTRICT dgap_buf, bool copy_head=true)$/;"	f	namespace:bm
gap_add_to_bitset	src/graphlab/extern/bitmagic/bmfunc.h	/^void gap_add_to_bitset(unsigned* dest, const T*  buf)$/;"	f	namespace:bm
gap_and_to_bitset	src/graphlab/extern/bitmagic/bmfunc.h	/^void gap_and_to_bitset(unsigned* dest, const T*  buf)$/;"	f	namespace:bm
gap_bfind	src/graphlab/extern/bitmagic/bmfunc.h	/^unsigned gap_bfind(const T* buf, unsigned pos, unsigned* is_set)$/;"	f	namespace:bm
gap_bit_count	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename T> unsigned gap_bit_count(const T* buf, unsigned dsize=0) $/;"	f	namespace:bm
gap_bit_count_range	src/graphlab/extern/bitmagic/bmfunc.h	/^unsigned gap_bit_count_range(const T* buf, T left, T right)$/;"	f	namespace:bm
gap_bitset_and_any	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t gap_bitset_and_any(const unsigned* block, const T*  buf)$/;"	f	namespace:bm
gap_bitset_and_count	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t gap_bitset_and_count(const unsigned* block, const T*  buf)$/;"	f	namespace:bm
gap_bitset_or_any	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t gap_bitset_or_any(const unsigned* block, const T*  buf)$/;"	f	namespace:bm
gap_bitset_or_count	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t gap_bitset_or_count(const unsigned* block, const T*  buf)$/;"	f	namespace:bm
gap_bitset_sub_any	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t gap_bitset_sub_any(const unsigned* block, const T*  buf)$/;"	f	namespace:bm
gap_bitset_sub_count	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t gap_bitset_sub_count(const unsigned* block, const T*  buf)$/;"	f	namespace:bm
gap_bitset_xor_any	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t gap_bitset_xor_any(const unsigned* block, const T*  buf)$/;"	f	namespace:bm
gap_bitset_xor_count	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t gap_bitset_xor_count(const unsigned* block, const T*  buf)$/;"	f	namespace:bm
gap_blocks	src/graphlab/extern/bitmagic/bmfunc.h	/^    unsigned gap_blocks;  $/;"	m	struct:bm::bv_statistics
gap_buff_any_op	src/graphlab/extern/bitmagic/bmfunc.h	/^unsigned gap_buff_any_op(const T*   BMRESTRICT vect1,$/;"	f	namespace:bm
gap_buff_op	src/graphlab/extern/bitmagic/bmfunc.h	/^void gap_buff_op(T*         BMRESTRICT dest, $/;"	f	namespace:bm
gap_calc_level	src/graphlab/extern/bitmagic/bmfunc.h	/^inline int gap_calc_level(int len, const T* glevel_len)$/;"	f	namespace:bm
gap_capacity	src/graphlab/extern/bitmagic/bmfunc.h	/^unsigned gap_capacity(const T* buf, const T* glevel_len)$/;"	f	namespace:bm
gap_control_sum	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename T> unsigned gap_control_sum(const T* buf)$/;"	f	namespace:bm
gap_convert_to_arr	src/graphlab/extern/bitmagic/bmfunc.h	/^D gap_convert_to_arr(D* BMRESTRICT       dest, $/;"	f	namespace:bm
gap_convert_to_bitset	src/graphlab/extern/bitmagic/bmfunc.h	/^void gap_convert_to_bitset(unsigned* dest, const T*  buf)$/;"	f	namespace:bm
gap_convert_to_bitset	src/graphlab/extern/bitmagic/bmfunc.h	/^void gap_convert_to_bitset(unsigned* dest, const T*  buf,  unsigned  dest_len)$/;"	f	namespace:bm
gap_convert_to_bitset_smart	src/graphlab/extern/bitmagic/bmfunc.h	/^        unsigned* gap_convert_to_bitset_smart(unsigned* dest,$/;"	f	namespace:bm
gap_equiv_len	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned gap_equiv_len = $/;"	m	namespace:bm
gap_find_in_block	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename T> int gap_find_in_block(const T* buf, $/;"	f	namespace:bm
gap_flags_	src/graphlab/extern/bitmagic/bmblocks.h	/^    MS                                     gap_flags_;$/;"	m	class:bm::blocks_manager
gap_free_elements	src/graphlab/extern/bitmagic/bmfunc.h	/^inline unsigned gap_free_elements(const T* buf, const T* glevel_len)$/;"	f	namespace:bm
gap_head_	src/graphlab/extern/bitmagic/bmserial.h	/^    gap_word_t         gap_head_;$/;"	m	class:bm::serial_stream_iterator
gap_init_range_block	src/graphlab/extern/bitmagic/bmfunc.h	/^void gap_init_range_block(T*       buf,$/;"	f	namespace:bm
gap_invert	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename T> void gap_invert(T* buf)$/;"	f	namespace:bm
gap_is_all_one	src/graphlab/extern/bitmagic/bmfunc.h	/^         bool gap_is_all_one(const T* buf, unsigned set_max)$/;"	f	namespace:bm
gap_is_all_zero	src/graphlab/extern/bitmagic/bmfunc.h	/^             bool gap_is_all_zero(const T* buf, unsigned set_max)$/;"	f	namespace:bm
gap_len	src/graphlab/extern/bitmagic/bm.h	/^            gap_word_t          gap_len;   \/\/!< Current dgap length.$/;"	m	struct:bm::bvector::iterator_base::dgap_descr
gap_len_table	src/graphlab/extern/bitmagic/bmfunc.h	/^template<bool T> struct gap_len_table$/;"	s	namespace:bm
gap_len_table_min	src/graphlab/extern/bitmagic/bmfunc.h	/^template<bool T> struct gap_len_table_min$/;"	s	namespace:bm
gap_length	src/graphlab/extern/bitmagic/bmfunc.h	/^    gap_word_t   gap_length[bm::set_total_blocks];$/;"	m	struct:bm::bv_statistics
gap_length	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename T> unsigned gap_length(const T* buf)$/;"	f	namespace:bm
gap_length_serialization	src/graphlab/extern/bitmagic/bmserial.h	/^void serializer<BV>::gap_length_serialization(bool value)$/;"	f	class:bm::serializer
gap_level	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename T> unsigned gap_level(const T* buf)$/;"	f	namespace:bm
gap_level_func	src/graphlab/extern/bitmagic/bmblocks.h	/^        gap_level_func(blocks_manager& bm, const gap_word_t* glevel_len)$/;"	f	class:bm::blocks_manager::gap_level_func
gap_level_func	src/graphlab/extern/bitmagic/bmblocks.h	/^    class gap_level_func : public bm_func_base$/;"	c	class:bm::blocks_manager
gap_levels	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned gap_levels = 4;$/;"	m	namespace:bm
gap_levels	src/graphlab/extern/bitmagic/bmfunc.h	/^    gap_word_t  gap_levels[bm::gap_levels];$/;"	m	struct:bm::bv_statistics
gap_limit	src/graphlab/extern/bitmagic/bmfunc.h	/^unsigned gap_limit(const T* buf, const T* glevel_len)$/;"	f	namespace:bm
gap_max_bits	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned gap_max_bits = 65536;$/;"	m	namespace:bm
gap_max_buff_len	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned gap_max_buff_len = 1280;$/;"	m	namespace:bm
gap_max_level	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned gap_max_level = bm::gap_levels - 1;$/;"	m	namespace:bm
gap_op_to_bit	src/graphlab/extern/bitmagic/bmfunc.h	/^    gap_operation_to_bitset_func_type gap_op_to_bit(unsigned i)$/;"	f	struct:bm::operation_functions
gap_operation	src/graphlab/extern/bitmagic/bmfunc.h	/^    gap_operation_func_type gap_operation(unsigned i)$/;"	f	struct:bm::operation_functions
gap_operation_and	src/graphlab/extern/bitmagic/bmfunc.h	/^inline gap_word_t* gap_operation_and(const gap_word_t* BMRESTRICT vect1,$/;"	f	namespace:bm
gap_operation_any_and	src/graphlab/extern/bitmagic/bmfunc.h	/^inline unsigned gap_operation_any_and(const gap_word_t* BMRESTRICT vect1,$/;"	f	namespace:bm
gap_operation_any_sub	src/graphlab/extern/bitmagic/bmfunc.h	/^inline unsigned gap_operation_any_sub(const gap_word_t* BMRESTRICT vect1,$/;"	f	namespace:bm
gap_operation_any_xor	src/graphlab/extern/bitmagic/bmfunc.h	/^inline unsigned gap_operation_any_xor(const gap_word_t* BMRESTRICT vect1,$/;"	f	namespace:bm
gap_operation_func_type	src/graphlab/extern/bitmagic/bmfunc.h	/^gap_word_t* (*gap_operation_func_type)(const gap_word_t* BMRESTRICT,$/;"	t	namespace:bm
gap_operation_or	src/graphlab/extern/bitmagic/bmfunc.h	/^inline gap_word_t* gap_operation_or(const gap_word_t*  BMRESTRICT vect1,$/;"	f	namespace:bm
gap_operation_sub	src/graphlab/extern/bitmagic/bmfunc.h	/^inline gap_word_t* gap_operation_sub(const gap_word_t*  BMRESTRICT vect1,$/;"	f	namespace:bm
gap_operation_to_bitset_func_type	src/graphlab/extern/bitmagic/bmfunc.h	/^void (*gap_operation_to_bitset_func_type)(unsigned*, $/;"	t	namespace:bm
gap_operation_xor	src/graphlab/extern/bitmagic/bmfunc.h	/^inline gap_word_t* gap_operation_xor(const gap_word_t*  BMRESTRICT vect1,$/;"	f	namespace:bm
gap_overhead	src/graphlab/extern/bitmagic/bmfunc.h	/^unsigned gap_overhead(const T* length, $/;"	f	namespace:bm
gap_serial_	src/graphlab/extern/bitmagic/bmserial.h	/^    bool           gap_serial_;$/;"	m	class:bm::serializer
gap_set_all	src/graphlab/extern/bitmagic/bmfunc.h	/^template<class T> void gap_set_all(T* buf, $/;"	f	namespace:bm
gap_set_value	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename T> unsigned gap_set_value(unsigned val, $/;"	f	namespace:bm
gap_sub_to_bitset	src/graphlab/extern/bitmagic/bmfunc.h	/^void gap_sub_to_bitset(unsigned* dest, const T*  buf)$/;"	f	namespace:bm
gap_temp_block_	src/graphlab/extern/bitmagic/bmserial.h	/^    bm::gap_word_t   gap_temp_block_[bm::gap_equiv_len * 3];$/;"	m	class:bm::deserializer
gap_test	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename T> unsigned gap_test(const T* buf, unsigned pos)$/;"	f	namespace:bm
gap_transpose_engine	src/graphlab/extern/bitmagic/bmtrans.h	/^    gap_transpose_engine() $/;"	f	class:bm::gap_transpose_engine
gap_transpose_engine	src/graphlab/extern/bitmagic/bmtrans.h	/^class gap_transpose_engine$/;"	c	namespace:bm
gap_word_t	src/graphlab/extern/bitmagic/bmconst.h	/^typedef unsigned short gap_word_t;$/;"	t	namespace:bm
gap_xor_to_bitset	src/graphlab/extern/bitmagic/bmfunc.h	/^void gap_xor_to_bitset(unsigned* dest, const T*  buf)$/;"	f	namespace:bm
gapcmp	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename T> int gapcmp(const T* buf1, const T* buf2)$/;"	f	namespace:bm
gapop_table_	src/graphlab/extern/bitmagic/bmfunc.h	/^        gap_operation_func_type gapop_table_[bm::set_END];$/;"	m	struct:bm::operation_functions
gapop_table_	src/graphlab/extern/bitmagic/bmfunc.h	/^operation_functions<T>::gapop_table_[bm::set_END] = {$/;"	m	class:bm::operation_functions
general_scope	src/graphlab/scope/general_scope.hpp	/^    general_scope() :$/;"	f	class:graphlab::general_scope
general_scope	src/graphlab/scope/general_scope.hpp	/^    general_scope(Graph* graph_ptr, vertex_id_t vertex,$/;"	f	class:graphlab::general_scope
general_scope	src/graphlab/scope/general_scope.hpp	/^  class general_scope :$/;"	c	namespace:graphlab
general_scope_factory	src/graphlab/scope/general_scope_factory.hpp	/^    general_scope_factory(Graph& graph,$/;"	f	class:graphlab::general_scope_factory
general_scope_factory	src/graphlab/scope/general_scope_factory.hpp	/^  class general_scope_factory :$/;"	c	namespace:graphlab
general_scope_type	src/graphlab/scope/general_scope_factory.hpp	/^    typedef general_scope<Graph> general_scope_type;$/;"	t	class:graphlab::general_scope_factory
generate_plan	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    void generate_plan(const Graph& g, size_t ncpus) {$/;"	f	class:graphlab::execution_plan
genmmd	src/graphlab/extern/metis/libmetis/mmd.c	/^void genmmd(idxtype neqns, idxtype *xadj, idxtype *adjncy, idxtype *invp, idxtype *perm,$/;"	f
genmmd	src/graphlab/extern/metis/libmetis/rename.h	258;"	d
get	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^   any get(size_t index) const {$/;"	f	class:graphlab::distributed_fullsweep_sdm
get	src/graphlab/distributed/distributed_hash_table.cpp	/^bool distributed_hash_table::get(size_t key, any &value) {$/;"	f	class:graphlab::distributed_hash_table
get	src/graphlab/distributed/distributed_hash_table.hpp	/^  bool get(size_t key, T &value) {$/;"	f	class:graphlab::distributed_hash_table
get	src/graphlab/distributed/distributed_shared_data.hpp	/^    any get(size_t index) const {$/;"	f	class:graphlab::distributed_shared_data
get	src/graphlab/extern/bitmagic/bmblocks.h	/^    bm::word_t* get() { return block_; }$/;"	f	class:bm::bit_block_guard
get	src/graphlab/extern/bitmagic/bmtrans.h	/^    T get(const T  tmatrix[BPC][BPS], unsigned i, unsigned j)$/;"	f	struct:bm::bit_trans_grabber
get	src/graphlab/extern/bitmagic/bmtrans.h	/^    unsigned get(const T*, unsigned)$/;"	f	struct:bm::bit_grabber
get	src/graphlab/extern/bitmagic/bmtrans.h	/^    unsigned get(const unsigned char* arr, unsigned j)$/;"	f	struct:bm::bit_grabber
get	src/graphlab/extern/bitmagic/bmtrans.h	/^    unsigned get(const unsigned short* arr, unsigned j)$/;"	f	struct:bm::bit_grabber
get	src/graphlab/extern/bitmagic/bmtrans.h	/^    unsigned get(const unsigned* arr, unsigned j)$/;"	f	struct:bm::bit_grabber
get	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    ss_set_type get() const {$/;"	f	class:graphlab::any_inedge_set
get	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    ss_set_type get() const {$/;"	f	class:graphlab::multinomial_vertex_set
get	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    ss_set_type get() const {$/;"	f	class:graphlab::restricted_vertex_set
get	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    ss_set_type get() const {$/;"	f	class:graphlab::vertex_set
get	src/graphlab/schedulers/support/binary_vertex_task_set.hpp	/^    bool get(const update_task_type& task) {$/;"	f	class:graphlab::binary_vertex_task_set
get	src/graphlab/shared_data/thread_shared_data.hpp	/^    any get(size_t index) const {$/;"	f	class:graphlab::thread_shared_data
get	src/graphlab/util/dense_bitset.hpp	/^    inline bool get(uint32_t b) const{$/;"	f	class:graphlab::dense_bitset
get	src/graphlab/util/dense_bitset.hpp	/^    inline bool get(uint32_t b) const{$/;"	f	class:graphlab::fixed_dense_bitset
get	src/graphlab/util/mutable_queue.hpp	/^    Priority get(T item) const {$/;"	f	class:graphlab::mutable_queue
get	src/graphlab/util/mutable_queue.hpp	/^    Priority get(size_t item) const {$/;"	f	class:graphlab::mutable_queue
get_16	src/graphlab/extern/bitmagic/encoding.h	/^BMFORCEINLINE bm::short_t decoder::get_16() $/;"	f	class:bm::decoder
get_16	src/graphlab/extern/bitmagic/encoding.h	/^BMFORCEINLINE bm::short_t decoder_little_endian::get_16()$/;"	f	class:bm::decoder_little_endian
get_16	src/graphlab/extern/bitmagic/encoding.h	/^inline void decoder::get_16(bm::short_t* s, unsigned count)$/;"	f	class:bm::decoder
get_16	src/graphlab/extern/bitmagic/encoding.h	/^inline void decoder_little_endian::get_16(bm::short_t* s, unsigned count)$/;"	f	class:bm::decoder_little_endian
get_32	src/graphlab/extern/bitmagic/bmfunc.h	/^    bm::word_t get_32() { return *b_++; }$/;"	f	class:bm::bitblock_get_adapter
get_32	src/graphlab/extern/bitmagic/bmfunc.h	/^    bm::word_t get_32()$/;"	f	class:bm::decoder_range_adapter
get_32	src/graphlab/extern/bitmagic/encoding.h	/^BMFORCEINLINE bm::word_t decoder::get_32() $/;"	f	class:bm::decoder
get_32	src/graphlab/extern/bitmagic/encoding.h	/^BMFORCEINLINE bm::word_t decoder_little_endian::get_32() $/;"	f	class:bm::decoder_little_endian
get_32	src/graphlab/extern/bitmagic/encoding.h	/^inline void decoder::get_32(bm::word_t* w, unsigned count)$/;"	f	class:bm::decoder
get_32	src/graphlab/extern/bitmagic/encoding.h	/^inline void decoder_little_endian::get_32(bm::word_t* w, unsigned count)$/;"	f	class:bm::decoder_little_endian
get_8	src/graphlab/extern/bitmagic/encoding.h	/^    BMFORCEINLINE unsigned char get_8() { return *buf_++; }$/;"	f	class:bm::decoder_base
get_allocator	src/graphlab/extern/bitmagic/bm.h	/^    Alloc get_allocator() const$/;"	f	class:bm::bvector
get_allocator	src/graphlab/extern/bitmagic/bmblocks.h	/^    allocator_type get_allocator() const { return alloc_; }$/;"	f	class:bm::blocks_manager
get_allocator	src/graphlab/extern/bitmagic/bmblocks.h	/^    allocator_type& get_allocator() { return alloc_; }$/;"	f	class:bm::blocks_manager
get_arr_bit	src/graphlab/extern/bitmagic/bmserial.h	/^unsigned serial_stream_iterator<DEC>::get_arr_bit(bm::word_t* dst_block, $/;"	f	class:bm::serial_stream_iterator
get_bit	src/graphlab/extern/bitmagic/bm.h	/^bool bvector<Alloc, MS>::get_bit(bm::id_t n) const$/;"	f	class:bm::bvector
get_bit_block	src/graphlab/extern/bitmagic/bmserial.h	/^serial_stream_iterator<DEC>::get_bit_block(bm::word_t*    dst_block,$/;"	f	class:bm::serial_stream_iterator
get_bit_block_AND	src/graphlab/extern/bitmagic/bmserial.h	/^serial_stream_iterator<DEC>::get_bit_block_AND(bm::word_t*  dst_block,$/;"	f	class:bm::serial_stream_iterator
get_bit_block_ASSIGN	src/graphlab/extern/bitmagic/bmserial.h	/^serial_stream_iterator<DEC>::get_bit_block_ASSIGN($/;"	f	class:bm::serial_stream_iterator
get_bit_block_COUNT	src/graphlab/extern/bitmagic/bmserial.h	/^serial_stream_iterator<DEC>::get_bit_block_COUNT(bm::word_t*  \/*dst_block*\/,$/;"	f	class:bm::serial_stream_iterator
get_bit_block_COUNT_A	src/graphlab/extern/bitmagic/bmserial.h	/^serial_stream_iterator<DEC>::get_bit_block_COUNT_A(bm::word_t*  dst_block,$/;"	f	class:bm::serial_stream_iterator
get_bit_block_COUNT_AND	src/graphlab/extern/bitmagic/bmserial.h	/^serial_stream_iterator<DEC>::get_bit_block_COUNT_AND(bm::word_t*  dst_block,$/;"	f	class:bm::serial_stream_iterator
get_bit_block_COUNT_B	src/graphlab/extern/bitmagic/bmserial.h	/^    get_bit_block_COUNT_B(bm::word_t* dst_block, bm::word_t* tmp_block)$/;"	f	class:bm::serial_stream_iterator
get_bit_block_COUNT_OR	src/graphlab/extern/bitmagic/bmserial.h	/^serial_stream_iterator<DEC>::get_bit_block_COUNT_OR(bm::word_t*  dst_block,$/;"	f	class:bm::serial_stream_iterator
get_bit_block_COUNT_SUB_AB	src/graphlab/extern/bitmagic/bmserial.h	/^serial_stream_iterator<DEC>::get_bit_block_COUNT_SUB_AB(bm::word_t*  dst_block,$/;"	f	class:bm::serial_stream_iterator
get_bit_block_COUNT_SUB_BA	src/graphlab/extern/bitmagic/bmserial.h	/^serial_stream_iterator<DEC>::get_bit_block_COUNT_SUB_BA(bm::word_t*  dst_block,$/;"	f	class:bm::serial_stream_iterator
get_bit_block_COUNT_XOR	src/graphlab/extern/bitmagic/bmserial.h	/^serial_stream_iterator<DEC>::get_bit_block_COUNT_XOR(bm::word_t*  dst_block,$/;"	f	class:bm::serial_stream_iterator
get_bit_block_OR	src/graphlab/extern/bitmagic/bmserial.h	/^serial_stream_iterator<DEC>::get_bit_block_OR(bm::word_t*  dst_block,$/;"	f	class:bm::serial_stream_iterator
get_bit_block_SUB	src/graphlab/extern/bitmagic/bmserial.h	/^serial_stream_iterator<DEC>::get_bit_block_SUB(bm::word_t*  dst_block,$/;"	f	class:bm::serial_stream_iterator
get_bit_block_XOR	src/graphlab/extern/bitmagic/bmserial.h	/^serial_stream_iterator<DEC>::get_bit_block_XOR(bm::word_t*  dst_block,$/;"	f	class:bm::serial_stream_iterator
get_bit_func_type	src/graphlab/extern/bitmagic/bmserial.h	/^        unsigned (serial_stream_iterator<DEC>::*get_bit_func_type)$/;"	t	class:bm::serial_stream_iterator
get_block	src/graphlab/extern/bitmagic/bm.h	/^    const bm::word_t* get_block(unsigned nb) const $/;"	f	class:bm::bvector
get_block	src/graphlab/extern/bitmagic/bmblocks.h	/^    bm::word_t* get_block(unsigned nb) const$/;"	f	class:bm::blocks_manager
get_block	src/graphlab/extern/bitmagic/bmblocks.h	/^    bm::word_t* get_block(unsigned nb, int* no_more_blocks) const$/;"	f	class:bm::blocks_manager
get_block	src/graphlab/extern/bitmagic/bmblocks.h	/^    const bm::word_t* get_block(unsigned i, unsigned j) const$/;"	f	class:bm::blocks_manager
get_block_allocator	src/graphlab/extern/bitmagic/bmalloc.h	/^    block_allocator_type get_block_allocator() const $/;"	f	class:bm::mem_alloc
get_block_coord	src/graphlab/extern/bitmagic/bmblocks.h	/^    void get_block_coord(unsigned nb, unsigned* i, unsigned* j) const$/;"	f	class:bm::blocks_manager
get_blocks_manager	src/graphlab/extern/bitmagic/bm.h	/^    blocks_manager_type& get_blocks_manager()$/;"	f	class:bm::bvector
get_blocks_manager	src/graphlab/extern/bitmagic/bm.h	/^    const blocks_manager_type& get_blocks_manager() const$/;"	f	class:bm::bvector
get_buf	src/graphlab/extern/bitmagic/bmvmin.h	/^    const unsigned* get_buf() const { return m_buf; }$/;"	f	class:bm::bvector_mini
get_cached	src/graphlab/distributed/distributed_hash_table.cpp	/^bool distributed_hash_table::get_cached(size_t key, any &value) {$/;"	f	class:graphlab::distributed_hash_table
get_cached	src/graphlab/distributed/distributed_hash_table.hpp	/^  bool get_cached(size_t key, T &value) {$/;"	f	class:graphlab::distributed_hash_table
get_callback	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    callback_type& get_callback(size_t cpuid) {$/;"	f	class:graphlab::distributed_collaborative_scheduler_wrapper
get_callback	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    callback_type& get_callback(size_t cpuid) {$/;"	f	class:graphlab::distributed_phased_sweep_scheduler
get_callback	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  callback_type& get_callback(size_t cpuid) {$/;"	f	class:graphlab::distributed_round_robin_scheduler
get_callback	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  callback_type& get_callback(size_t cpuid) {$/;"	f	class:graphlab::distributed_round_robin_scheduler2
get_callback	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    callback_type& get_callback(size_t cpuid) {$/;"	f	class:graphlab::distributed_scheduler_wrapper
get_callback	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    callback_type& get_callback(size_t cpuid) {$/;"	f	class:graphlab::clustered_priority_scheduler
get_callback	src/graphlab/schedulers/colored_scheduler.hpp	/^    callback_type& get_callback(size_t cpuid) {$/;"	f	class:graphlab::colored_scheduler
get_callback	src/graphlab/schedulers/fifo_scheduler.hpp	/^    callback_type& get_callback(size_t cpuid) {$/;"	f	class:graphlab::fifo_scheduler
get_callback	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    callback_type& get_callback(size_t cpuid) {$/;"	f	class:graphlab::multiqueue_fifo_scheduler
get_callback	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    callback_type& get_callback(size_t cpuid) {$/;"	f	class:graphlab::multiqueue_priority_scheduler
get_callback	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^    callback_type& get_callback(size_t cpuid) {$/;"	f	class:graphlab::multiqueue_scheduler
get_callback	src/graphlab/schedulers/priority_scheduler.hpp	/^    callback_type& get_callback(size_t cpuid) {$/;"	f	class:graphlab::priority_scheduler
get_callback	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    callback_type& get_callback(size_t cpuid) {$/;"	f	class:graphlab::round_robin_scheduler
get_callback	src/graphlab/schedulers/sampling_scheduler.hpp	/^    callback_type& get_callback(size_t cpuid) {$/;"	f	class:graphlab::sampling_scheduler
get_callback	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    callback_type& get_callback(size_t cpuid) { return callback; }$/;"	f	class:graphlab::set_scheduler
get_callback	src/graphlab/schedulers/splash_scheduler.hpp	/^    callback_type& get_callback(size_t cpuid) {$/;"	f	class:graphlab::splash_scheduler
get_callback	src/graphlab/schedulers/sweep_scheduler.hpp	/^    callback_type& get_callback(size_t cpuid) {$/;"	f	class:graphlab::sweep_scheduler
get_color	apps/factor_graph_inference/factor_gibbs.hpp	/^uint16_t get_color(const vertex_data& vdata) { return vdata.color; }$/;"	f
get_compression_level	src/graphlab/extern/bitmagic/bmserial.h	/^unsigned serializer<BV>::get_compression_level() const$/;"	f	class:bm::serializer
get_const_edge	src/graphlab/distributed/graph_lock_manager.hpp	/^  const typename Graph::edge_data_type& get_const_edge(const edge_id_t &e) const {$/;"	f	class:graphlab::graph_lock_manager
get_const_vertex	src/graphlab/distributed/graph_lock_manager.hpp	/^  const typename Graph::vertex_data_type& get_const_vertex(const vertex_id_t &v) const {$/;"	f	class:graphlab::graph_lock_manager
get_constant	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    const any& get_constant(size_t index) const {$/;"	f	class:graphlab::distributed_fullsweep_sdm
get_constant	src/graphlab/distributed/distributed_shared_data.hpp	/^    const any& get_constant(size_t index) const {$/;"	f	class:graphlab::distributed_shared_data
get_constant	src/graphlab/shared_data/thread_shared_data.hpp	/^    const any& get_constant(size_t index) const {$/;"	f	class:graphlab::thread_shared_data
get_data	src/graphlab/graph/graph.hpp	/^		EdgeData get_data(){$/;"	f	class:graphlab::graph::edge
get_deserializer_id	src/graphlab/util/generics/any.hpp	/^      static uint64_t get_deserializer_id() {$/;"	f	class:graphlab::any::any_registration
get_deserializer_id	src/graphlab/util/generics/any.hpp	/^      uint64_t get_deserializer_id() const{$/;"	f	class:graphlab::any::holder
get_dest_graph	src/graphlab/scope/synchronous_scope_factory.hpp	/^    Graph* get_dest_graph() { return _destgraph;  }$/;"	f	class:graphlab::synchronous_scope_factory
get_distributed_scope	src/graphlab/distributed/distributed_engine.hpp	/^    scope_type* get_distributed_scope(size_t cpuid,$/;"	f	class:graphlab::distributed_engine
get_edge	src/graphlab/distributed/graph_lock_manager.hpp	/^  const typename Graph::edge_data_type& get_edge(const edge_id_t &e) const {$/;"	f	class:graphlab::graph_lock_manager
get_edge	src/graphlab/distributed/graph_lock_manager.hpp	/^  typename Graph::edge_data_type& get_edge(const edge_id_t &e) {$/;"	f	class:graphlab::graph_lock_manager
get_edge_data	src/graphlab/graph/graph.hpp	/^	EdgeData get_edge_data(edge_id_t edge_id){$/;"	f	class:graphlab::graph
get_edge_data	src/graphlab/scope/iscope.hpp	/^	edge_data_type get_edge_data(edge_id_t eid){$/;"	f	class:graphlab::iscope
get_edge_scope	src/graphlab/scope/general_scope_factory.hpp	/^    iscope_type* get_edge_scope(size_t cpuid, vertex_id_t v) {$/;"	f	class:graphlab::general_scope_factory
get_first	src/graphlab/extern/bitmagic/bm.h	/^    bm::id_t get_first() const { return check_or_next(0); }$/;"	f	class:bm::bvector
get_first	src/graphlab/extern/bitmagic/bmvmin.h	/^    unsigned get_first() const$/;"	f	class:bm::bvector_mini
get_flip	apps/demo/concise_demo.cpp	/^size_t get_flip(const vertex_data &v) {$/;"	f
get_flip	apps/demo/demo.cpp	/^size_t get_flip(const vertex_data &v) {$/;"	f
get_foot	src/graphlab/extern/metis/GKlib/dlmalloc.c	839;"	d	file:
get_full_scope	src/graphlab/scope/general_scope_factory.hpp	/^    iscope_type* get_full_scope(size_t cpuid, vertex_id_t v) {$/;"	f	class:graphlab::general_scope_factory
get_gap_block	src/graphlab/extern/bitmagic/bmserial.h	/^serial_stream_iterator<DEC>::get_gap_block(bm::gap_word_t* dst_block)$/;"	f	class:bm::serial_stream_iterator
get_gradient	apps/svm/svm.cpp	/^double get_gradient(const vertex_data &v) {$/;"	f
get_graph	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    Graph& get_graph() {$/;"	f	class:graphlab::set_scheduler
get_id	src/graphlab/extern/bitmagic/bmserial.h	/^    bm::id_t get_id() const { return this->last_id_; }$/;"	f	class:bm::serial_stream_iterator
get_id_count	src/graphlab/extern/bitmagic/bmserial.h	/^    unsigned get_id_count() const { return this->id_cnt_; }$/;"	f	class:bm::serial_stream_iterator
get_iterations	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  int get_iterations(){$/;"	f	class:graphlab::distributed_round_robin_scheduler
get_iterations	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  int get_iterations(){$/;"	f	class:graphlab::distributed_round_robin_scheduler2
get_iterations	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    size_t get_iterations() {$/;"	f	class:graphlab::round_robin_scheduler
get_local_ip	src/graphlab/distributed/distributed_control.cpp	/^void distributed_control::get_local_ip(char ip[4]) {$/;"	f	class:graphlab::distributed_control
get_log_file	src/graphlab/logger/logger.hpp	/^  std::string get_log_file(void) {$/;"	f	class:file_logger
get_log_level	src/graphlab/logger/logger.hpp	/^  int get_log_level() {$/;"	f	class:file_logger
get_log_to_console	src/graphlab/logger/logger.hpp	/^  bool get_log_to_console() {$/;"	f	class:file_logger
get_loss	apps/svm/svm.cpp	/^double get_loss(const vertex_data &v) {$/;"	f
get_mstate_for	src/graphlab/extern/metis/GKlib/dlmalloc.c	1594;"	d	file:
get_ncpus	src/graphlab/distributed/distributed_engine.hpp	/^    size_t get_ncpus() const { return ncpus; } $/;"	f	class:graphlab::distributed_engine
get_ncpus	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    size_t get_ncpus(){ return ncpus; } $/;"	f	class:graphlab::pushy_distributed_engine
get_ncpus	src/graphlab/engine/asynchronous_engine.hpp	/^    size_t get_ncpus() const { return ncpus; }$/;"	f	class:graphlab::asynchronous_engine
get_ncpus	src/graphlab/engine/sim_thread_engine.hpp	/^    size_t get_ncpus(){ return ncpus; } $/;"	f	class:graphlab::sim_thread_engine
get_ncpus	src/graphlab/engine/synchronous_engine.hpp	/^    size_t get_ncpus() const { return ncpus; } $/;"	f	class:graphlab::synchronous_engine
get_ncpus	src/graphlab/engine/threaded_engine.hpp	/^    size_t get_ncpus(){ return ncpus; } $/;"	f	class:graphlab::threaded_engine
get_new_blocks_strat	src/graphlab/extern/bitmagic/bm.h	/^    strategy  get_new_blocks_strat() const $/;"	f	class:bm::bvector
get_next	src/graphlab/extern/bitmagic/bm.h	/^    bm::id_t get_next(bm::id_t prev) const$/;"	f	class:bm::bvector
get_next	src/graphlab/extern/bitmagic/bmvmin.h	/^    unsigned get_next(unsigned idx) const$/;"	f	class:bm::bvector_mini
get_next_list	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    void get_next_list(size_t cpuid) {$/;"	f	class:graphlab::clustered_priority_scheduler
get_next_task	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^   sched_status::status_enum get_next_task(size_t cpuid, $/;"	f	class:graphlab::distributed_collaborative_scheduler_wrapper
get_next_task	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    sched_status::status_enum get_next_task(size_t cpuid, update_task_type &ret_task){$/;"	f	class:graphlab::distributed_phased_sweep_scheduler
get_next_task	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  sched_status::status_enum get_next_task(size_t cpuid, update_task_type &ret_task) {$/;"	f	class:graphlab::distributed_round_robin_scheduler
get_next_task	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  sched_status::status_enum get_next_task(size_t cpuid, update_task_type &ret_task) {$/;"	f	class:graphlab::distributed_round_robin_scheduler2
get_next_task	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    sched_status::status_enum get_next_task(size_t cpuid, $/;"	f	class:graphlab::distributed_scheduler_wrapper
get_next_task	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    sched_status::status_enum get_next_task(size_t cpuid, update_task_type &ret_task) {$/;"	f	class:graphlab::clustered_priority_scheduler
get_next_task	src/graphlab/schedulers/colored_scheduler.hpp	/^    sched_status::status_enum get_next_task(size_t cpuid, $/;"	f	class:graphlab::colored_scheduler
get_next_task	src/graphlab/schedulers/fifo_scheduler.hpp	/^    sched_status::status_enum get_next_task(size_t cpuid, update_task_type &ret_task) {    $/;"	f	class:graphlab::fifo_scheduler
get_next_task	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    sched_status::status_enum get_next_task(size_t cpuid,$/;"	f	class:graphlab::multiqueue_fifo_scheduler
get_next_task	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    sched_status::status_enum get_next_task(size_t cpuid,$/;"	f	class:graphlab::multiqueue_priority_scheduler
get_next_task	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^    sched_status::status_enum get_next_task(size_t cpuid, $/;"	f	class:graphlab::multiqueue_scheduler
get_next_task	src/graphlab/schedulers/priority_scheduler.hpp	/^    sched_status::status_enum get_next_task(size_t cpuid, update_task_type& ret_task) {$/;"	f	class:graphlab::priority_scheduler
get_next_task	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    sched_status::status_enum get_next_task(size_t cpuid, update_task_type &ret_task) {$/;"	f	class:graphlab::round_robin_scheduler
get_next_task	src/graphlab/schedulers/sampling_scheduler.hpp	/^    sched_status::status_enum get_next_task(size_t cpuid, update_task_type &ret_task) {$/;"	f	class:graphlab::sampling_scheduler
get_next_task	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    bool get_next_task(size_t cpuid, update_task_type &u) {$/;"	f	class:graphlab::execution_plan
get_next_task	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    sched_status::status_enum get_next_task(size_t cpuid, $/;"	f	class:graphlab::set_scheduler
get_next_task	src/graphlab/schedulers/splash_scheduler.hpp	/^    sched_status::status_enum get_next_task(size_t cpuid, update_task_type &ret_task) {$/;"	f	class:graphlab::splash_scheduler
get_next_task	src/graphlab/schedulers/sweep_scheduler.hpp	/^    sched_status::status_enum get_next_task(size_t cpuid, update_task_type &ret_task){$/;"	f	class:graphlab::sweep_scheduler
get_next_task_from_list	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    sched_status::status_enum get_next_task_from_list(size_t cpuid, $/;"	f	class:graphlab::clustered_priority_scheduler
get_null_scope	src/graphlab/scope/general_scope_factory.hpp	/^    iscope_type* get_null_scope(size_t cpuid, vertex_id_t v) {$/;"	f	class:graphlab::general_scope_factory
get_pos	src/graphlab/extern/bitmagic/encoding.h	/^inline encoder::position_type encoder::get_pos() const$/;"	f	class:bm::encoder
get_priority	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    double get_priority(vertex_id_t v) {$/;"	f	class:graphlab::multinomial_vertex_set
get_profiling_info	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    int64_t get_profiling_info(const std::string &prof) {$/;"	f	class:graphlab::pushy_distributed_engine
get_ptr_allocator	src/graphlab/extern/bitmagic/bmalloc.h	/^    ptr_allocator_type get_ptr_allocator() const $/;"	f	class:bm::mem_alloc
get_random_array	src/graphlab/extern/bitmagic/bmrandom.h	/^void random_subset<BV>::get_random_array(bm::word_t*       blk_out, $/;"	f	class:bm::random_subset
get_random_subset	src/graphlab/extern/bitmagic/bmrandom.h	/^void random_subset<BV>::get_random_subset(bm::word_t*       blk_out, $/;"	f	class:bm::random_subset
get_read_scope	src/graphlab/scope/general_scope_factory.hpp	/^    iscope_type* get_read_scope(size_t cpuid, vertex_id_t v) {$/;"	f	class:graphlab::general_scope_factory
get_real_norm	apps/gabp/gabp.cpp	/^double get_real_norm(const vertex_data& v){$/;"	f
get_relative_norm	apps/gabp/gabp.cpp	/^double get_relative_norm(const vertex_data& v){$/;"	f
get_rootblock	src/graphlab/extern/bitmagic/bmblocks.h	/^    bm::word_t*** get_rootblock() const$/;"	f	class:bm::blocks_manager
get_scheduler	src/graphlab/distributed/distributed_engine.hpp	/^    ischeduler_type& get_scheduler() { return scheduler; }$/;"	f	class:graphlab::distributed_engine
get_scheduler	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    ischeduler_type& get_scheduler() { return scheduler; }$/;"	f	class:graphlab::pushy_distributed_engine
get_scheduler	src/graphlab/engine/asynchronous_engine.hpp	/^    ischeduler_type& get_scheduler() { return scheduler; }$/;"	f	class:graphlab::asynchronous_engine
get_scheduler	src/graphlab/engine/sim_thread_engine.hpp	/^    ischeduler_type& get_scheduler() { return scheduler; }$/;"	f	class:graphlab::sim_thread_engine
get_scheduler	src/graphlab/engine/synchronous_engine.hpp	/^    ischeduler_type& get_scheduler() { $/;"	f	class:graphlab::synchronous_engine
get_scheduler	src/graphlab/engine/threaded_engine.hpp	/^    ischeduler_type& get_scheduler() { return scheduler; }$/;"	f	class:graphlab::threaded_engine
get_scope	src/graphlab/distributed/distributed_engine.hpp	/^    iscope<Graph>* get_scope(size_t cpuid,$/;"	f	class:graphlab::distributed_engine
get_scope	src/graphlab/scope/general_scope_factory.hpp	/^    iscope_type* get_scope(size_t cpuid,$/;"	f	class:graphlab::general_scope_factory
get_scope	src/graphlab/scope/synchronous_scope_factory.hpp	/^    iscope_type* get_scope(size_t cpuid,$/;"	f	class:graphlab::synchronous_scope_factory
get_src_graph	src/graphlab/scope/synchronous_scope_factory.hpp	/^    Graph* get_src_graph() { return _srcgraph;  }$/;"	f	class:graphlab::synchronous_scope_factory
get_state	src/graphlab/extern/bitmagic/bmserial.h	/^    iterator_state get_state() const { return this->state_; }$/;"	f	class:bm::serial_stream_iterator
get_subset	src/graphlab/extern/bitmagic/bmrandom.h	/^void random_subset<BV>::get_subset(BV&       bv_out, $/;"	f	class:bm::random_subset
get_sv	apps/svm/svm.cpp	/^size_t get_sv(const vertex_data &v) {$/;"	f
get_task_from_active_set	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    bool get_task_from_active_set(size_t cpuid, update_task_type &ret_task) {$/;"	f	class:graphlab::set_scheduler
get_thread_dc_buffer	src/graphlab/distributed/dc_internal.cpp	/^dc_thread_local_struct& get_thread_dc_buffer() {$/;"	f	namespace:graphlab
get_thread_specific_data	src/graphlab/parallel/pthread_tools.cpp	/^  thread_specific_data& thread::get_thread_specific_data() {$/;"	f	class:graphlab::thread
get_top	src/graphlab/schedulers/splash_scheduler.hpp	/^    bool get_top(size_t cpuid, $/;"	f	class:graphlab::splash_scheduler
get_topblock	src/graphlab/extern/bitmagic/bmblocks.h	/^    const bm::word_t* const * get_topblock(unsigned i) const$/;"	f	class:bm::blocks_manager::bm
get_update_func_id	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    uint8_t get_update_func_id(update_function_type upf) {$/;"	f	class:graphlab::distributed_phased_sweep_scheduler
get_update_func_id	src/graphlab/schedulers/sweep_scheduler.hpp	/^    uint8_t get_update_func_id(update_function_type upf) {$/;"	f	class:graphlab::sweep_scheduler
get_update_func_mask	src/graphlab/schedulers/support/binary_vertex_task_set.hpp	/^    size_t get_update_func_mask(update_function_type upf) {$/;"	f	class:graphlab::binary_vertex_task_set
get_value	src/graphlab/distributed/metrics/distributed_metrics.hpp	/^ double get_value(int procid, std::string key) {$/;"	f	class:graphlab::distributed_metrics
get_vertex	src/graphlab/distributed/graph_lock_manager.hpp	/^  const typename Graph::vertex_data_type& get_vertex(const vertex_id_t &v) const {$/;"	f	class:graphlab::graph_lock_manager
get_vertex	src/graphlab/distributed/graph_lock_manager.hpp	/^  typename Graph::vertex_data_type& get_vertex(const vertex_id_t &v) {$/;"	f	class:graphlab::graph_lock_manager
get_vertex_data_graph	src/graphlab/scope/synchronous_scope_factory.hpp	/^    Graph* get_vertex_data_graph() { return _vertexdatagraph;  }$/;"	f	class:graphlab::synchronous_scope_factory
get_vertex_read_scope	src/graphlab/scope/general_scope_factory.hpp	/^    iscope_type* get_vertex_read_scope(size_t cpuid, vertex_id_t v) {$/;"	f	class:graphlab::general_scope_factory
get_vertex_scope	src/graphlab/scope/general_scope_factory.hpp	/^    iscope_type* get_vertex_scope(size_t cpuid, vertex_id_t v) {$/;"	f	class:graphlab::general_scope_factory
get_wchange	apps/shooting/shooting.cpp	/^double get_wchange(const vertex_data& vdata) {$/;"	f
get_weight	src/graphlab/util/fast_multinomial.hpp	/^    float_t get_weight(size_t asg) const {$/;"	f	class:graphlab::fast_multinomial
getline	apps/factor_graph_inference/factor_graph.hpp	/^  inline bool getline(std::ifstream& fin,$/;"	f	class:factor_graph
getpathname	src/graphlab/extern/metis/GKlib/fs.c	/^char *getpathname(char *path)$/;"	f
gibbs_update	apps/factor_graph_inference/factor_gibbs.hpp	/^void gibbs_update(gl_types::iscope& scope, $/;"	f
gibbs_update	apps/image_denoise/gibbs_denoise.cpp	/^void gibbs_update(gl::iscope& scope, $/;"	f
gk_CPUSeconds	src/graphlab/extern/metis/GKlib/timers.c	/^double gk_CPUSeconds(void)$/;"	f
gk_CSR_t	src/graphlab/extern/metis/GKlib/gk_struct.h	/^} gk_CSR_t;$/;"	t	typeref:struct:__anon7
gk_CheckHeap	src/graphlab/extern/metis/GKlib/pqueue.c	/^int gk_CheckHeap(gk_PQueue_t *queue)$/;"	f
gk_FreeMatrix	src/graphlab/extern/metis/GKlib/memory.c	/^void gk_FreeMatrix(void ***r_matrix, size_t ndim1, size_t ndim2)$/;"	f
gk_GetCurMemoryUsed	src/graphlab/extern/metis/GKlib/memory.c	/^size_t gk_GetCurMemoryUsed()$/;"	f
gk_GetMaxMemoryUsed	src/graphlab/extern/metis/GKlib/memory.c	/^size_t gk_GetMaxMemoryUsed()$/;"	f
gk_GetStringID	src/graphlab/extern/metis/GKlib/string.c	/^int gk_GetStringID(gk_StringMap_t *strmap, char *key)$/;"	f
gk_HTable_t	src/graphlab/extern/metis/GKlib/gk_struct.h	/^} gk_HTable_t;$/;"	t	typeref:struct:__anon10
gk_NonLocalExit_Handler	src/graphlab/extern/metis/GKlib/error.c	/^void gk_NonLocalExit_Handler(int signum)$/;"	f
gk_PQueueDelete	src/graphlab/extern/metis/GKlib/pqueue.c	/^int gk_PQueueDelete(gk_PQueue_t *queue, int node)$/;"	f
gk_PQueueFree	src/graphlab/extern/metis/GKlib/pqueue.c	/^void gk_PQueueFree(gk_PQueue_t *queue)$/;"	f
gk_PQueueGetMax	src/graphlab/extern/metis/GKlib/pqueue.c	/^int gk_PQueueGetMax(gk_PQueue_t *queue)$/;"	f
gk_PQueueGetSize	src/graphlab/extern/metis/GKlib/pqueue.c	/^int gk_PQueueGetSize(gk_PQueue_t *queue)$/;"	f
gk_PQueueInit	src/graphlab/extern/metis/GKlib/pqueue.c	/^void gk_PQueueInit(gk_PQueue_t *queue, int maxnodes)$/;"	f
gk_PQueueInsert	src/graphlab/extern/metis/GKlib/pqueue.c	/^int gk_PQueueInsert(gk_PQueue_t *queue, int node, float key)$/;"	f
gk_PQueueLength	src/graphlab/extern/metis/GKlib/pqueue.c	/^int gk_PQueueLength(gk_PQueue_t *queue)$/;"	f
gk_PQueueReset	src/graphlab/extern/metis/GKlib/pqueue.c	/^void gk_PQueueReset(gk_PQueue_t *queue)$/;"	f
gk_PQueueSeeConstraintMax	src/graphlab/extern/metis/GKlib/pqueue.c	/^int gk_PQueueSeeConstraintMax(gk_PQueue_t *queue, float maxwgt, double *wgts)$/;"	f
gk_PQueueSeeKey	src/graphlab/extern/metis/GKlib/pqueue.c	/^float gk_PQueueSeeKey(gk_PQueue_t *queue, int node)$/;"	f
gk_PQueueSeeMaxKey	src/graphlab/extern/metis/GKlib/pqueue.c	/^float gk_PQueueSeeMaxKey(gk_PQueue_t *queue)$/;"	f
gk_PQueueSeeMaxVal	src/graphlab/extern/metis/GKlib/pqueue.c	/^int gk_PQueueSeeMaxVal(gk_PQueue_t *queue)$/;"	f
gk_PQueueUpdate	src/graphlab/extern/metis/GKlib/pqueue.c	/^int gk_PQueueUpdate(gk_PQueue_t *queue, int node, float newkey)$/;"	f
gk_PQueue_t	src/graphlab/extern/metis/GKlib/gk_struct.h	/^} gk_PQueue_t;$/;"	t	typeref:struct:__anon8
gk_RandomPermute	src/graphlab/extern/metis/GKlib/util.c	/^void gk_RandomPermute(size_t n, int *p, int flag)$/;"	f
gk_SetSignalHandlers	src/graphlab/extern/metis/GKlib/error.c	/^void gk_SetSignalHandlers() $/;"	f
gk_StringMap_t	src/graphlab/extern/metis/GKlib/gk_struct.h	/^} gk_StringMap_t;$/;"	t	typeref:struct:__anon9
gk_Tokens_t	src/graphlab/extern/metis/GKlib/gk_struct.h	/^} gk_Tokens_t;$/;"	t	typeref:struct:__anon11
gk_UnsetSignalHandlers	src/graphlab/extern/metis/GKlib/error.c	/^void gk_UnsetSignalHandlers() $/;"	f
gk_WClockSeconds	src/graphlab/extern/metis/GKlib/timers.c	/^gk_wclock_t gk_WClockSeconds(void)$/;"	f
gk_array2csr	src/graphlab/extern/metis/GKlib/util.c	/^void gk_array2csr(size_t n, size_t range, int *array, int *ptr, int *ind)$/;"	f
gk_ccopy	src/graphlab/extern/metis/GKlib/gk_macros.h	21;"	d
gk_clearcputimer	src/graphlab/extern/metis/GKlib/gk_macros.h	35;"	d
gk_clearwctimer	src/graphlab/extern/metis/GKlib/gk_macros.h	40;"	d
gk_dckvsort	src/graphlab/extern/metis/GKlib/sort.c	/^void gk_dckvsort(int n, gk_ckv_t *base)$/;"	f
gk_dcopy	src/graphlab/extern/metis/GKlib/gk_macros.h	24;"	d
gk_dcsort	src/graphlab/extern/metis/GKlib/sort.c	/^void gk_dcsort(int n, char *base)$/;"	f
gk_ddkvsort	src/graphlab/extern/metis/GKlib/sort.c	/^void gk_ddkvsort(int n, gk_dkv_t *base)$/;"	f
gk_ddsort	src/graphlab/extern/metis/GKlib/sort.c	/^void gk_ddsort(int n, double *base)$/;"	f
gk_dexists	src/graphlab/extern/metis/GKlib/fs.c	/^int gk_dexists(char *dirname)$/;"	f
gk_dfkvkselect	src/graphlab/extern/metis/GKlib/dfkvkselect.c	/^int gk_dfkvkselect(int n, int topk, gk_fkv_t *cand)$/;"	f
gk_dfkvsort	src/graphlab/extern/metis/GKlib/sort.c	/^void gk_dfkvsort(int n, gk_fkv_t *base)$/;"	f
gk_dfsort	src/graphlab/extern/metis/GKlib/sort.c	/^void gk_dfsort(int n, float *base)$/;"	f
gk_didxkvsort	src/graphlab/extern/metis/GKlib/sort.c	/^void gk_didxkvsort(int n, gk_idxkv_t *base)$/;"	f
gk_didxsort	src/graphlab/extern/metis/GKlib/sort.c	/^void gk_didxsort(int n, gk_idx_t *base)$/;"	f
gk_dikvsort	src/graphlab/extern/metis/GKlib/sort.c	/^void gk_dikvsort(int n, gk_ikv_t *base)$/;"	f
gk_disort	src/graphlab/extern/metis/GKlib/sort.c	/^void gk_disort(int n, int *base)$/;"	f
gk_dreal_t	src/graphlab/extern/metis/GKlib/gk_types.h	/^typedef double          gk_dreal_t;       \/* double precission real type *\/$/;"	t
gk_dskvsort	src/graphlab/extern/metis/GKlib/sort.c	/^void gk_dskvsort(int n, gk_skv_t *base)$/;"	f
gk_errexit	src/graphlab/extern/metis/GKlib/error.c	/^void gk_errexit(int signum, char *f_str,...)$/;"	f
gk_fclose	src/graphlab/extern/metis/GKlib/io.c	/^void gk_fclose(FILE *fp)$/;"	f
gk_fcopy	src/graphlab/extern/metis/GKlib/gk_macros.h	23;"	d
gk_fexists	src/graphlab/extern/metis/GKlib/fs.c	/^int gk_fexists(char *fname)$/;"	f
gk_flog2	src/graphlab/extern/metis/GKlib/util.c	/^float gk_flog2(float a)$/;"	f
gk_fopen	src/graphlab/extern/metis/GKlib/io.c	/^FILE *gk_fopen(char *fname, char *mode, const char *msg)$/;"	f
gk_free	src/graphlab/extern/metis/GKlib/memory.c	/^void gk_free(void **ptr1,...)$/;"	f
gk_freepdbf	src/graphlab/extern/metis/GKlib/pdb.c	/^void gk_freepdbf(pdbf *p) { \/* {{{ *\/$/;"	f
gk_freetokenslist	src/graphlab/extern/metis/GKlib/tokenizer.c	/^void gk_freetokenslist(gk_Tokens_t *tokens)$/;"	f
gk_getbasename	src/graphlab/extern/metis/GKlib/fs.c	/^char *gk_getbasename(char *path)$/;"	f
gk_getcputimer	src/graphlab/extern/metis/GKlib/gk_macros.h	38;"	d
gk_getextname	src/graphlab/extern/metis/GKlib/fs.c	/^char *gk_getextname(char *path)$/;"	f
gk_getfilename	src/graphlab/extern/metis/GKlib/fs.c	/^char *gk_getfilename(char *path)$/;"	f
gk_getfilestats	src/graphlab/extern/metis/GKlib/fs.c	/^void gk_getfilestats(char *fname, int *r_nlines, int *r_ntokens, int *r_nbytes)$/;"	f
gk_getfsize	src/graphlab/extern/metis/GKlib/fs.c	/^intmax_t gk_getfsize(char *filename)$/;"	f
gk_getline	src/graphlab/extern/metis/GKlib/io.c	/^gk_loop_t gk_getline(char **lineptr, size_t *n, FILE *stream)$/;"	f
gk_getopt	src/graphlab/extern/metis/GKlib/getopt.c	/^int gk_getopt(int argc, char **argv, const char *options)$/;"	f
gk_getopt_initialize	src/graphlab/extern/metis/GKlib/getopt.c	/^static const char *gk_getopt_initialize (int argc, char *const *argv, const char *optstring)$/;"	f	file:
gk_getopt_initialized	src/graphlab/extern/metis/GKlib/getopt.c	/^int gk_getopt_initialized;$/;"	v
gk_getopt_internal	src/graphlab/extern/metis/GKlib/getopt.c	/^static int gk_getopt_internal(int argc, char *const *argv, const char *optstring, $/;"	f	file:
gk_getopt_long	src/graphlab/extern/metis/GKlib/getopt.c	/^int gk_getopt_long( int argc, char *const *argv, const char *options, $/;"	f
gk_getopt_long_only	src/graphlab/extern/metis/GKlib/getopt.c	/^int gk_getopt_long_only(int argc, char *const *argv, const char *options, $/;"	f
gk_getwctimer	src/graphlab/extern/metis/GKlib/gk_macros.h	43;"	d
gk_i2cc2i_create_common	src/graphlab/extern/metis/GKlib/seq.c	/^gk_i2cc2i_t *gk_i2cc2i_create_common(char *alphabet)$/;"	f
gk_i2cc2i_t	src/graphlab/extern/metis/GKlib/gk_struct.h	/^} gk_i2cc2i_t;$/;"	t	typeref:struct:__anon14
gk_ickvsort	src/graphlab/extern/metis/GKlib/sort.c	/^void gk_ickvsort(int n, gk_ckv_t *base)$/;"	f
gk_icopy	src/graphlab/extern/metis/GKlib/gk_macros.h	22;"	d
gk_icsort	src/graphlab/extern/metis/GKlib/sort.c	/^void gk_icsort(int n, char *base)$/;"	f
gk_idkvsort	src/graphlab/extern/metis/GKlib/sort.c	/^void gk_idkvsort(int n, gk_dkv_t *base)$/;"	f
gk_idsort	src/graphlab/extern/metis/GKlib/sort.c	/^void gk_idsort(int n, double *base)$/;"	f
gk_idx_t	src/graphlab/extern/metis/GKlib/gk_types.h	/^typedef ptrdiff_t       gk_idx_t;         \/* index variable *\/$/;"	t
gk_idxcopy	src/graphlab/extern/metis/GKlib/gk_macros.h	25;"	d
gk_ifkvsort	src/graphlab/extern/metis/GKlib/sort.c	/^void gk_ifkvsort(int n, gk_fkv_t *base)$/;"	f
gk_ifsort	src/graphlab/extern/metis/GKlib/sort.c	/^void gk_ifsort(int n, float *base)$/;"	f
gk_iidxkvsort	src/graphlab/extern/metis/GKlib/sort.c	/^void gk_iidxkvsort(int n, gk_idxkv_t *base)$/;"	f
gk_iidxsort	src/graphlab/extern/metis/GKlib/sort.c	/^void gk_iidxsort(int n, gk_idx_t *base)$/;"	f
gk_iikvsort	src/graphlab/extern/metis/GKlib/sort.c	/^void gk_iikvsort(int n, gk_ikv_t *base)$/;"	f
gk_iisort	src/graphlab/extern/metis/GKlib/sort.c	/^void gk_iisort(int n, int *base)$/;"	f
gk_int_t	src/graphlab/extern/metis/GKlib/gk_types.h	/^typedef int32_t         gk_int_t;         \/* integer values *\/$/;"	t
gk_iskvsort	src/graphlab/extern/metis/GKlib/sort.c	/^void gk_iskvsort(int n, gk_skv_t *base)$/;"	f
gk_ispow2	src/graphlab/extern/metis/GKlib/util.c	/^int gk_ispow2(int a)$/;"	f
gk_log2	src/graphlab/extern/metis/GKlib/util.c	/^int gk_log2(int a)$/;"	f
gk_long_t	src/graphlab/extern/metis/GKlib/gk_types.h	/^typedef int64_t         gk_long_t;        \/* long integer values *\/$/;"	t
gk_loop_t	src/graphlab/extern/metis/GKlib/gk_types.h	/^typedef ptrdiff_t       gk_loop_t;        \/* loop index variable *\/$/;"	t
gk_malloc	src/graphlab/extern/metis/GKlib/memory.c	/^void *gk_malloc(size_t nbytes, char *msg)$/;"	f
gk_malloc_cleanup	src/graphlab/extern/metis/GKlib/memory.c	/^void gk_malloc_cleanup()$/;"	f
gk_mkpath	src/graphlab/extern/metis/GKlib/fs.c	/^int gk_mkpath(char *pathname)$/;"	f
gk_mspace	src/graphlab/extern/metis/GKlib/memory.c	/^static  mspace gk_mspace = 0;$/;"	v	file:
gk_mspace	src/graphlab/extern/metis/GKlib/memory.c	/^static __thread mspace gk_mspace = 0;$/;"	v	file:
gk_optarg	src/graphlab/extern/metis/GKlib/getopt.c	/^char *gk_optarg;$/;"	v
gk_opterr	src/graphlab/extern/metis/GKlib/getopt.c	/^int gk_opterr = 1;$/;"	v
gk_optind	src/graphlab/extern/metis/GKlib/getopt.c	/^int gk_optind = 1; $/;"	v
gk_option	src/graphlab/extern/metis/GKlib/gk_getopt.h	/^struct gk_option {$/;"	s
gk_optopt	src/graphlab/extern/metis/GKlib/getopt.c	/^int gk_optopt = '?';$/;"	v
gk_printmspaceaddr	src/graphlab/extern/metis/GKlib/memory.c	/^void gk_printmspaceaddr() { printf("mspace: %p\\n", (void *)gk_mspace); }$/;"	f
gk_readpdbfile	src/graphlab/extern/metis/GKlib/pdb.c	/^pdbf *gk_readpdbfile(char *fname) { \/* {{{ *\/$/;"	f
gk_real_t	src/graphlab/extern/metis/GKlib/gk_types.h	/^typedef float           gk_real_t;        \/* real type *\/$/;"	t
gk_realloc	src/graphlab/extern/metis/GKlib/memory.c	/^void *gk_realloc(void *oldptr, size_t nbytes, char *msg)$/;"	f
gk_return_to_entry	src/graphlab/extern/metis/GKlib/error.c	/^__thread jmp_buf gk_return_to_entry;$/;"	v
gk_return_to_entry	src/graphlab/extern/metis/GKlib/error.c	/^jmp_buf gk_return_to_entry;$/;"	v
gk_rmpath	src/graphlab/extern/metis/GKlib/fs.c	/^int gk_rmpath(char *pathname)$/;"	f
gk_seq_ReadGKMODPSSM	src/graphlab/extern/metis/GKlib/seq.c	/^gk_seq_t *gk_seq_ReadGKMODPSSM(char *filename)$/;"	f
gk_seq_free	src/graphlab/extern/metis/GKlib/seq.c	/^void gk_seq_free(gk_seq_t *seq)$/;"	f
gk_seq_init	src/graphlab/extern/metis/GKlib/seq.c	/^void gk_seq_init(gk_seq_t *seq)$/;"	f
gk_seq_t	src/graphlab/extern/metis/GKlib/gk_struct.h	/^} gk_seq_t;$/;"	t	typeref:struct:__anon15
gk_showcorruption	src/graphlab/extern/metis/GKlib/pdb.c	/^void gk_showcorruption(pdbf *p) {$/;"	f
gk_startcputimer	src/graphlab/extern/metis/GKlib/gk_macros.h	36;"	d
gk_startwctimer	src/graphlab/extern/metis/GKlib/gk_macros.h	41;"	d
gk_stopcputimer	src/graphlab/extern/metis/GKlib/gk_macros.h	37;"	d
gk_stopwctimer	src/graphlab/extern/metis/GKlib/gk_macros.h	42;"	d
gk_str2time	src/graphlab/extern/metis/GKlib/string.c	/^time_t gk_str2time(char *str)$/;"	f
gk_strcasecmp	src/graphlab/extern/metis/GKlib/string.c	/^int gk_strcasecmp(char *s1, char *s2)$/;"	f
gk_strchr_replace	src/graphlab/extern/metis/GKlib/string.c	/^char *gk_strchr_replace(char *str, char *fromlist, char *tolist)$/;"	f
gk_strdup	src/graphlab/extern/metis/GKlib/string.c	/^char *gk_strdup(char *orgstr)$/;"	f
gk_strerror	src/graphlab/extern/metis/GKlib/error.c	/^char *gk_strerror(int errnum)$/;"	f
gk_strhprune	src/graphlab/extern/metis/GKlib/string.c	/^char *gk_strhprune(char *str, char *rmlist)$/;"	f
gk_strstr_replace	src/graphlab/extern/metis/GKlib/string.c	/^int gk_strstr_replace(char *str, char *pattern, char *replacement, char *options,$/;"	f
gk_strtokenize	src/graphlab/extern/metis/GKlib/tokenizer.c	/^void gk_strtokenize(char *str, char *delim, gk_Tokens_t *tokens)$/;"	f
gk_strtolower	src/graphlab/extern/metis/GKlib/string.c	/^char *gk_strtolower(char *str)$/;"	f
gk_strtoupper	src/graphlab/extern/metis/GKlib/string.c	/^char *gk_strtoupper(char *str)$/;"	f
gk_strtprune	src/graphlab/extern/metis/GKlib/string.c	/^char *gk_strtprune(char *str, char *rmlist)$/;"	f
gk_threetoone	src/graphlab/extern/metis/GKlib/pdb.c	/^char gk_threetoone(char *res) { \/* {{{ *\/$/;"	f
gk_time2str	src/graphlab/extern/metis/GKlib/string.c	/^char *gk_time2str(time_t time)$/;"	f
gk_uint_t	src/graphlab/extern/metis/GKlib/gk_types.h	/^typedef uint32_t        gk_uint_t;        \/* unsigned integer values *\/$/;"	t
gk_ulong_t	src/graphlab/extern/metis/GKlib/gk_types.h	/^typedef uint64_t        gk_ulong_t;       \/* unsigned long integer values *\/$/;"	t
gk_wclock_t	src/graphlab/extern/metis/GKlib/gk_types.h	/^typedef time_t		gk_wclock_t;	  \/* wall-clock time *\/$/;"	t
gk_writealphacarbons	src/graphlab/extern/metis/GKlib/pdb.c	/^void gk_writealphacarbons(pdbf *p, char *fname) {$/;"	f
gk_writebackbone	src/graphlab/extern/metis/GKlib/pdb.c	/^void gk_writebackbone(pdbf *p, char *fname) {$/;"	f
gk_writefastafrompdb	src/graphlab/extern/metis/GKlib/pdb.c	/^void gk_writefastafrompdb(pdbf *pb, char *fname) {$/;"	f
gk_writefullatom	src/graphlab/extern/metis/GKlib/pdb.c	/^void gk_writefullatom(pdbf *p, char *fname) {$/;"	f
gl	apps/demo/concise_demo.cpp	/^typedef graphlab::types<graph_type> gl;$/;"	t	file:
gl	apps/demo/demo.cpp	/^typedef graphlab::types<graph_type> gl;$/;"	t	file:
gl	apps/image_denoise/gibbs_denoise.cpp	/^typedef graphlab::types<graph_type> gl;$/;"	t	file:
gl_types	apps/concomp/concomp.cpp	/^typedef graphlab::types<concomp_graph> gl_types;$/;"	t	file:
gl_types	apps/concomp/lock_concomp.cpp	/^typedef graphlab::types<concomp_graph> gl_types;$/;"	t	file:
gl_types	apps/concomp/rlx_concomp.cpp	/^typedef graphlab::types<concomp_graph> gl_types;$/;"	t	file:
gl_types	apps/concomp/seq_concomp.cpp	/^typedef graphlab::types<concomp_graph> gl_types;$/;"	t	file:
gl_types	apps/concomp/sync_concomp.cpp	/^typedef graphlab::types<concomp_graph> gl_types;$/;"	t	file:
gl_types	apps/factor_graph_inference/factor_bp.hpp	/^typedef graphlab::types<graph_type> gl_types;$/;"	t
gl_types	apps/factor_graph_inference/factor_gibbs.hpp	/^typedef graphlab::types<graph_type> gl_types;$/;"	t
gl_types	apps/gabp/gabp.cpp	/^typedef graphlab::types<graph_type> gl_types;$/;"	t	file:
gl_types	apps/image_denoise/loopybp_denoise.cpp	/^typedef graphlab::types<graph_type> gl_types;$/;"	t	file:
gl_types	apps/pagerank/pagerank.cpp	/^typedef graphlab::types<pagerank_graph> gl_types;$/;"	t	file:
gl_types	apps/pagerank/pagerankapp.hpp	/^typedef types<pagerank_graph> gl_types;$/;"	t
gl_types	apps/pagerank/sync_pagerank.cpp	/^typedef graphlab::types<pagerank_graph> gl_types;$/;"	t	file:
gl_types	apps/shooting/shooting.cpp	/^typedef graphlab::types<graph_type> gl_types;$/;"	t	file:
gl_types	apps/svm/svm.cpp	/^typedef graphlab::types<graph_type> gl_types;$/;"	t	file:
glen	src/graphlab/extern/bitmagic/bmblocks.h	/^    const gap_word_t* glen() const$/;"	f	class:bm::blocks_manager
glen	src/graphlab/extern/bitmagic/bmblocks.h	/^    unsigned glen(unsigned level) const$/;"	f	class:bm::blocks_manager
glevel_len_	src/graphlab/extern/bitmagic/bmblocks.h	/^        const gap_word_t* glevel_len_;$/;"	m	class:bm::blocks_manager::gap_level_func
glevel_len_	src/graphlab/extern/bitmagic/bmblocks.h	/^    gap_word_t                             glevel_len_[bm::gap_levels];$/;"	m	class:bm::blocks_manager
glevels_	src/graphlab/extern/bitmagic/bmserial.h	/^    gap_word_t         glevels_[bm::gap_levels]; \/\/\/< GAP levels$/;"	m	class:bm::serial_stream_iterator
glm	src/graphlab/distributed/distributed_shared_data.hpp	/^    graph_lock_manager<Graph>* glm;$/;"	m	class:graphlab::distributed_shared_data
global_id_counter	src/graphlab/distributed/graph/distributed_graph.hpp	/^    edge_id_t global_id_counter;$/;"	m	class:graphlab::distributed_graph
global_logger	src/graphlab/logger/logger.cpp	/^file_logger& global_logger() {$/;"	f
global_merge	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^   void global_merge(size_t index, any acc) {$/;"	f	class:graphlab::distributed_fullsweep_sdm
global_merge_counter	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      int global_merge_counter;$/;"	m	struct:graphlab::distributed_fullsweep_sdm::sync_state
global_merge_handler	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^  static void global_merge_handler(distributed_control &dc,$/;"	f	class:graphlab::distributed_fullsweep_sdm
global_sync_ready_handler	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^   static void global_sync_ready_handler(distributed_control &dc,$/;"	f	class:graphlab::distributed_fullsweep_sdm
global_to_local_eid	src/graphlab/distributed/graph/cloned_graph.hpp	/^    edge_id_t global_to_local_eid(edge_id_t e) {$/;"	f	class:graphlab::cloned_graph
global_to_local_eid	src/graphlab/distributed/graph/distributed_graph.hpp	/^    edge_id_t global_to_local_eid(const edge_id_t &e) const{$/;"	f	class:graphlab::distributed_graph
globals	src/graphlab/extern/bitmagic/bmfunc.h	/^template<bool T> struct globals$/;"	s	namespace:bm
gm	src/graphlab/extern/metis/GKlib/dlmalloc.c	1187;"	d	file:
go_first	src/graphlab/extern/bitmagic/bm.h	/^        void go_first()$/;"	f	class:bm::bvector::enumerator
go_up	src/graphlab/extern/bitmagic/bm.h	/^        enumerator& go_up()$/;"	f	class:bm::bvector::enumerator
gradient	apps/svm/svm.cpp	/^  float gradient;$/;"	m	struct:feat_vertex_data	file:
granularity	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  size_t granularity;$/;"	m	struct:malloc_params	file:
granularity_align	src/graphlab/extern/metis/GKlib/dlmalloc.c	1219;"	d	file:
graph	src/graphlab.hpp	/^    typedef Graph graph;$/;"	t	struct:graphlab::types
graph	src/graphlab/core.hpp	/^    const typename types::graph& graph() const { return mgraph; }$/;"	f	class:graphlab::core
graph	src/graphlab/core.hpp	/^    typename types::graph& graph() { return mgraph; }$/;"	f	class:graphlab::core
graph	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    Graph &graph;$/;"	m	class:graphlab::distributed_collaborative_scheduler_wrapper
graph	src/graphlab/distributed/distributed_engine.hpp	/^    Graph& graph;$/;"	m	class:graphlab::distributed_engine
graph	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    graph_type* graph;$/;"	m	class:graphlab::distributed_fullsweep_sdm
graph	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    Graph &graph;$/;"	m	class:graphlab::distributed_scheduler_wrapper
graph	src/graphlab/distributed/distributed_shared_data.hpp	/^    graph_type* graph;$/;"	m	class:graphlab::distributed_shared_data
graph	src/graphlab/distributed/graph_lock_manager.hpp	/^    Graph &graph;$/;"	m	class:graphlab::graph_lock_manager
graph	src/graphlab/distributed/lock_manager.hpp	/^  Graph &graph;             \/\/ reference to the graph I am protecting$/;"	m	class:graphlab::distributed_lock_manager
graph	src/graphlab/engine/asynchronous_engine.hpp	/^    Graph& graph;$/;"	m	class:graphlab::asynchronous_engine
graph	src/graphlab/graph/graph.hpp	/^    graph() : finalized(true) {  }$/;"	f	class:graphlab::graph
graph	src/graphlab/graph/graph.hpp	/^    graph(const graph<VertexData, EdgeData> &g) { (*this) = g; }$/;"	f	class:graphlab::graph
graph	src/graphlab/graph/graph.hpp	/^    graph(size_t nverts) : $/;"	f	class:graphlab::graph
graph	src/graphlab/graph/graph.hpp	/^  class graph {$/;"	c	namespace:graphlab
graph	src/graphlab/schedulers/colored_scheduler.hpp	/^    Graph& graph;$/;"	m	class:graphlab::colored_scheduler
graph	src/graphlab/schedulers/splash_scheduler.hpp	/^    Graph& graph;$/;"	m	class:graphlab::splash_scheduler
graph	src/graphlab/scope/general_scope_factory.hpp	/^    Graph& graph;$/;"	m	class:graphlab::general_scope_factory
graph_lock_manager	src/graphlab/distributed/graph_lock_manager.hpp	/^  graph_lock_manager(distributed_control &dc,$/;"	f	class:graphlab::graph_lock_manager
graph_lock_manager	src/graphlab/distributed/graph_lock_manager.hpp	/^class graph_lock_manager{$/;"	c	namespace:graphlab
graph_lock_manager_target	src/graphlab/distributed/graph_lock_manager.hpp	/^  static graph_lock_manager* graph_lock_manager_target;$/;"	m	class:graphlab::graph_lock_manager
graph_lock_manager_target	src/graphlab/distributed/graph_lock_manager.hpp	/^graph_lock_manager<Graph>* graph_lock_manager<Graph>::graph_lock_manager_target;$/;"	m	class:graphlab::graph_lock_manager
graph_type	apps/demo/concise_demo.cpp	/^typedef graphlab::graph<vertex_data, edge_data> graph_type;$/;"	t	file:
graph_type	apps/demo/demo.cpp	/^typedef graphlab::graph<vertex_data, edge_data> graph_type;$/;"	t	file:
graph_type	apps/factor_graph_inference/factor_bp.hpp	/^typedef graphlab::graph<vertex_data, edge_data> graph_type;$/;"	t
graph_type	apps/factor_graph_inference/factor_gibbs.hpp	/^typedef graphlab::graph<vertex_data, edge_data> graph_type;$/;"	t
graph_type	apps/gabp/gabp.cpp	/^typedef graphlab::graph<vertex_data, edge_data> graph_type;$/;"	t	file:
graph_type	apps/image_denoise/gibbs_denoise.cpp	/^typedef graphlab::graph< vertex_data, edge_data> graph_type;$/;"	t	file:
graph_type	apps/image_denoise/loopybp_denoise.cpp	/^typedef graphlab::graph<vertex_data, edge_data> graph_type;$/;"	t	file:
graph_type	apps/shooting/shooting.cpp	/^typedef graphlab::graph<vertex_data, edge_data> graph_type;$/;"	t	file:
graph_type	apps/svm/svm.cpp	/^typedef graphlab::graph<vertex_data, edge_data> graph_type;$/;"	t	file:
graph_type	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::distributed_collaborative_scheduler_wrapper
graph_type	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::distributed_fullsweep_sdm
graph_type	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::distributed_phased_sweep_scheduler
graph_type	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^   typedef Graph graph_type;$/;"	t	class:graphlab::distributed_round_robin_scheduler
graph_type	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^   typedef Graph graph_type;$/;"	t	class:graphlab::distributed_round_robin_scheduler2
graph_type	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::distributed_scheduler_wrapper
graph_type	src/graphlab/distributed/distributed_shared_data.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::distributed_shared_data
graph_type	src/graphlab/engine/iengine.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::iengine
graph_type	src/graphlab/monitoring/imonitor.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::imonitor
graph_type	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::clustered_priority_scheduler
graph_type	src/graphlab/schedulers/colored_scheduler.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::colored_scheduler
graph_type	src/graphlab/schedulers/fifo_scheduler.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::fifo_scheduler
graph_type	src/graphlab/schedulers/icallback.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::icallback
graph_type	src/graphlab/schedulers/ischeduler.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::ischeduler
graph_type	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::multiqueue_fifo_scheduler
graph_type	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::multiqueue_priority_scheduler
graph_type	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::multiqueue_scheduler
graph_type	src/graphlab/schedulers/priority_scheduler.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::priority_scheduler
graph_type	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::round_robin_scheduler
graph_type	src/graphlab/schedulers/sampling_scheduler.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::sampling_scheduler
graph_type	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::execution_plan
graph_type	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::multinomial_vertex_set
graph_type	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::restricted_vertex_set
graph_type	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::set_scheduler
graph_type	src/graphlab/schedulers/splash_scheduler.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::splash_scheduler
graph_type	src/graphlab/schedulers/support/binary_scheduler_callback.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::binary_scheduler_callback
graph_type	src/graphlab/schedulers/support/binary_vertex_task_set.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::binary_vertex_task_set
graph_type	src/graphlab/schedulers/support/direct_callback.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::direct_callback
graph_type	src/graphlab/schedulers/support/unused_scheduler_callback.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::unused_scheduler_callback
graph_type	src/graphlab/schedulers/support/vertex_task_set.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::vertex_task_set
graph_type	src/graphlab/schedulers/sweep_scheduler.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::sweep_scheduler
graph_type	src/graphlab/scope/iscope.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::iscope
graph_type	src/graphlab/scope/iscope_factory.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::iscope_factory
graph_type	src/graphlab/shared_data/ishared_data.hpp	/^    typedef Graph         graph_type;$/;"	t	class:graphlab::ishared_data
graph_type	src/graphlab/shared_data/ishared_data_manager.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::ishared_data_manager
graph_type	src/graphlab/shared_data/thread_shared_data.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::thread_shared_data
graph_type	src/graphlab/tasks/update_task.hpp	/^    typedef Graph graph_type;$/;"	t	class:graphlab::update_task
graphdef	src/graphlab/extern/metis/libmetis/struct.h	/^struct graphdef {$/;"	s
graphlab	apps/pagerank/pagerankapp.hpp	/^  gl_types::iengine * graphlab;$/;"	m	class:pagerankapp
graphlab	src/graphlab.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/core.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/distributed/dc_internal.cpp	/^namespace graphlab {$/;"	n	file:
graphlab	src/graphlab/distributed/dc_internal.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/distributed/dc_packet_headers.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/distributed/dc_receive.cpp	/^namespace graphlab {$/;"	n	file:
graphlab	src/graphlab/distributed/dc_send.cpp	/^namespace graphlab {$/;"	n	file:
graphlab	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/distributed/distributed_control.cpp	/^namespace graphlab {$/;"	n	file:
graphlab	src/graphlab/distributed/distributed_control.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/distributed/distributed_control_types.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/distributed/distributed_engine.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/distributed/distributed_hash_table.cpp	/^namespace graphlab {$/;"	n	file:
graphlab	src/graphlab/distributed/distributed_hash_table.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/distributed/distributed_scope.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/distributed/distributed_shared_data.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/distributed/distributed_terminator.cpp	/^namespace graphlab {$/;"	n	file:
graphlab	src/graphlab/distributed/distributed_terminator.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/distributed/graph/cloned_graph.hpp	/^namespace graphlab { $/;"	n
graphlab	src/graphlab/distributed/graph/distributed_graph.hpp	/^namespace graphlab { $/;"	n
graphlab	src/graphlab/distributed/graph_lock_manager.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/distributed/lock_manager.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/distributed/metrics/distributed_metrics.cpp	/^namespace graphlab {$/;"	n	file:
graphlab	src/graphlab/distributed/metrics/distributed_metrics.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/distributed/pushy_distributed_engine.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/distributed/repack_dispatch.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/distributed/serialize_dispatch.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/engine/asynchronous_engine.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/engine/engine_factory.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/engine/engine_options.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/engine/iengine.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/engine/sim_thread_engine.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/engine/synchronous_engine.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/engine/threaded_engine.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/factors/binary_factor.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/factors/table_factor.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/factors/unary_factor.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/graph/graph.hpp	/^namespace graphlab { $/;"	n
graphlab	src/graphlab/monitoring/console_monitor.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/monitoring/imonitor.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/monitoring/monitor_multiplexer.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/parallel/atomic.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/parallel/pthread_tools.cpp	/^namespace graphlab { $/;"	n	file:
graphlab	src/graphlab/parallel/pthread_tools.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/colored_scheduler.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/fifo_scheduler.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/icallback.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/ischeduler.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/priority_scheduler.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/round_robin_scheduler.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/sampling_scheduler.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/splash_scheduler.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/support/binary_scheduler_callback.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/support/binary_vertex_task_set.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/support/direct_callback.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/support/unused_scheduler_callback.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/support/vertex_task_set.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/schedulers/sweep_scheduler.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/scope/general_scope.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/scope/general_scope_factory.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/scope/iscope.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/scope/iscope_factory.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/scope/synchronous_scope.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/scope/synchronous_scope_factory.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/serialization/iarchive.cpp	/^namespace graphlab {$/;"	n	file:
graphlab	src/graphlab/serialization/iarchive.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/serialization/iterator.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/serialization/judy_map_kdcell.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/serialization/list.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/serialization/map.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/serialization/oarchive.cpp	/^namespace graphlab {$/;"	n	file:
graphlab	src/graphlab/serialization/oarchive.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/serialization/set.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/serialization/unsupported_serialize.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/serialization/vector.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/shared_data/ishared_data.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/shared_data/ishared_data_manager.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/shared_data/shared_data_ops.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/shared_data/thread_shared_data.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/tasks/update_task.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/binary_parser.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/blocking_queue.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/command_line_options.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/dense_bitset.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/fast_multinomial.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/generics/any.cpp	/^namespace graphlab {$/;"	n	file:
graphlab	src/graphlab/util/generics/any.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/generics/blob.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/generics/float_selector.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/hash_functions.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/judy_util.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/mutable_queue.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/optimal_termination.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/par_transform.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/prioritized_multiqueue.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/random.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/sampling_tree.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/shared_termination.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/stl_util.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/synchronized_circular_queue.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/synchronized_multiqueue.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/synchronized_queue.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/synchronized_unordered_map.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/system_usage.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/task_count_termination.hpp	/^namespace graphlab {$/;"	n
graphlab	src/graphlab/util/timer.cpp	/^namespace graphlab {$/;"	n	file:
graphlab	src/graphlab/util/timer.hpp	/^namespace graphlab {$/;"	n
graphlab_vec_to_string	src/graphlab/util/command_line_options.hpp	/^  std::string graphlab_vec_to_string(const std::vector<T>& vec) {$/;"	f	namespace:boost
graphoptimize	apps/pagerank/pagerankapp.hpp	/^  bool graphoptimize;$/;"	m	class:pagerankapp
gv	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype gv;$/;"	m	struct:vedegreedef
gv	src/graphlab/extern/metis/libmetis/struct.h	/^ idxtype gv;            		\/* IV\/EV of nodes *\/$/;"	m	struct:vrinfodef
handler_t	src/graphlab/distributed/distributed_control.hpp	/^  typedef unsigned char handler_t;$/;"	t	class:graphlab::distributed_control
handler_type	src/graphlab/distributed/distributed_control.hpp	/^typedef void (*handler_type)(distributed_control& dc, size_t source,$/;"	t	namespace:graphlab
handlerarg_t	src/graphlab/distributed/distributed_control_types.hpp	/^  typedef uint64_t handlerarg_t;$/;"	t	namespace:graphlab
harray	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  gk_ikv_t *harray;       \/* The actual hash-table *\/$/;"	m	struct:__anon10
has_arg	src/graphlab/extern/metis/GKlib/gk_getopt.h	/^  int has_arg;      \/*!< This field says whether the option takes an argument. $/;"	m	struct:gk_option
has_constant_edges	src/graphlab/distributed/graph/cloned_graph.hpp	/^    bool has_constant_edges() {$/;"	f	class:graphlab::cloned_graph
has_constant_edges	src/graphlab/distributed/graph/distributed_graph.hpp	/^    bool has_constant_edges() {$/;"	f	class:graphlab::distributed_graph
has_load_method	src/graphlab/serialization/iarchive.hpp	/^  struct has_load_method$/;"	s	namespace:graphlab::iarchive_detail
has_pending_tasks	src/graphlab/distributed/distributed_shared_data.hpp	/^    bool has_pending_tasks() {$/;"	f	class:graphlab::distributed_shared_data
has_save_method	src/graphlab/serialization/oarchive.hpp	/^  struct has_save_method$/;"	s	namespace:graphlab::oarchive_detail
has_segment_link	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static int has_segment_link(mstate m, msegmentptr ss) {$/;"	f	file:
has_support	src/graphlab/util/fast_multinomial.hpp	/^    bool has_support(size_t asg) const {$/;"	f	class:graphlab::fast_multinomial
has_vertex	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    bool has_vertex(const vertex_id_t &vertexid) const {$/;"	f	class:graphlab::any_inedge_set
has_vertex	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    bool has_vertex(const vertex_id_t &vertexid) const {$/;"	f	class:graphlab::multinomial_vertex_set
has_vertex	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    bool has_vertex(const vertex_id_t &vertexid) const {$/;"	f	class:graphlab::restricted_vertex_set
has_vertex	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    bool has_vertex(const vertex_id_t &vertexid) const {$/;"	f	class:graphlab::vertex_set
hasbuffer	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^      dense_bitset hasbuffer;$/;"	m	struct:graphlab::clustered_priority_scheduler::cpustate
hash	src/graphlab/tasks/update_task.hpp	/^    size_t hash() const {$/;"	f	class:graphlab::update_task
hash_functor	src/graphlab/tasks/update_task.hpp	/^    struct  hash_functor {$/;"	s	class:graphlab::update_task
hastoken	src/graphlab/distributed/distributed_terminator.hpp	/^    bool hastoken;$/;"	m	class:graphlab::distributed_terminator
hblkhd	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	/^  MALLINFO_FIELD_TYPE hblkhd;   \/* space in mmapped regions *\/$/;"	m	struct:mallinfo
hblks	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	/^  MALLINFO_FIELD_TYPE hblks;    \/* always 0 *\/$/;"	m	struct:mallinfo
head	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  size_t                    head;$/;"	m	struct:malloc_tree_chunk	file:
head	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  size_t               head;       \/* Size and inuse bits. *\/$/;"	m	struct:malloc_chunk	file:
head	src/graphlab/util/synchronized_circular_queue.hpp	/^    size_t head;      \/\/\/ points to the first element in the queue$/;"	m	class:graphlab::synchronized_circular_queue
heap	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  gk_fkv_t *heap;$/;"	m	struct:__anon8
heap	src/graphlab/extern/metis/libmetis/struct.h	/^  KeyValueType *heap;$/;"	m	struct:PQueueType
heap	src/graphlab/util/mutable_queue.hpp	/^    std::vector<heap_element> heap;$/;"	m	class:graphlab::mutable_queue
heap_element	src/graphlab/util/mutable_queue.hpp	/^    typedef typename std::pair<T, Priority> heap_element;$/;"	t	class:graphlab::mutable_queue
heap_element	src/graphlab/util/mutable_queue.hpp	/^    typedef typename std::pair<size_t, Priority> heap_element;$/;"	t	class:graphlab::mutable_queue
heapify	src/graphlab/util/mutable_queue.hpp	/^    void heapify(size_t i) {$/;"	f	class:graphlab::mutable_queue
held	src/graphlab/util/generics/any.hpp	/^      ValueType held;$/;"	m	class:graphlab::any::holder
hmstimer	src/graphlab/util/timer.cpp	/^  hundredms_timer hmstimer;$/;"	m	namespace:graphlab	file:
holder	src/graphlab/util/generics/any.hpp	/^      holder(const ValueType & value)$/;"	f	class:graphlab::any::holder
holder	src/graphlab/util/generics/any.hpp	/^      holder(iarchive &arc) { arc >> held; }$/;"	f	class:graphlab::any::holder
holder	src/graphlab/util/generics/any.hpp	/^    class holder : public __any_placeholder {$/;"	c	class:graphlab::any
htsize	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  int htsize;                   \/* The current size of the hash-table *\/$/;"	m	struct:__anon10
hundredms_timer	src/graphlab/util/timer.cpp	/^    hundredms_timer() {    $/;"	f	class:graphlab::hundredms_timer
hundredms_timer	src/graphlab/util/timer.cpp	/^  class hundredms_timer {$/;"	c	namespace:graphlab	file:
i	src/graphlab/serialization/iarchive.hpp	/^    std::istream* i;$/;"	m	class:graphlab::iarchive
i0	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT1{ F targetfn; T0 i0; };$/;"	m	struct:graphlab::PACKSTRUCT1
i0	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT2{ F targetfn; T0 i0; T1 i1; };$/;"	m	struct:graphlab::PACKSTRUCT2
i0	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT3{ F targetfn; T0 i0; T1 i1; T2 i2; };$/;"	m	struct:graphlab::PACKSTRUCT3
i0	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT4{ F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; };$/;"	m	struct:graphlab::PACKSTRUCT4
i0	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT5{ F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; };$/;"	m	struct:graphlab::PACKSTRUCT5
i0	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT6{ F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; T5 i5; };$/;"	m	struct:graphlab::PACKSTRUCT6
i0	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; $/;"	m	struct:graphlab::SERPACKSTRUCT1
i0	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; $/;"	m	struct:graphlab::SERPACKSTRUCT2
i0	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; T2 i2; $/;"	m	struct:graphlab::SERPACKSTRUCT3
i0	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; $/;"	m	struct:graphlab::SERPACKSTRUCT4
i0	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; $/;"	m	struct:graphlab::SERPACKSTRUCT5
i0	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; T5 i5; $/;"	m	struct:graphlab::SERPACKSTRUCT6
i1	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT2{ F targetfn; T0 i0; T1 i1; };$/;"	m	struct:graphlab::PACKSTRUCT2
i1	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT3{ F targetfn; T0 i0; T1 i1; T2 i2; };$/;"	m	struct:graphlab::PACKSTRUCT3
i1	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT4{ F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; };$/;"	m	struct:graphlab::PACKSTRUCT4
i1	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT5{ F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; };$/;"	m	struct:graphlab::PACKSTRUCT5
i1	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT6{ F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; T5 i5; };$/;"	m	struct:graphlab::PACKSTRUCT6
i1	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; $/;"	m	struct:graphlab::SERPACKSTRUCT2
i1	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; T2 i2; $/;"	m	struct:graphlab::SERPACKSTRUCT3
i1	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; $/;"	m	struct:graphlab::SERPACKSTRUCT4
i1	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; $/;"	m	struct:graphlab::SERPACKSTRUCT5
i1	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; T5 i5; $/;"	m	struct:graphlab::SERPACKSTRUCT6
i2	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT3{ F targetfn; T0 i0; T1 i1; T2 i2; };$/;"	m	struct:graphlab::PACKSTRUCT3
i2	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT4{ F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; };$/;"	m	struct:graphlab::PACKSTRUCT4
i2	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT5{ F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; };$/;"	m	struct:graphlab::PACKSTRUCT5
i2	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT6{ F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; T5 i5; };$/;"	m	struct:graphlab::PACKSTRUCT6
i2	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; T2 i2; $/;"	m	struct:graphlab::SERPACKSTRUCT3
i2	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; $/;"	m	struct:graphlab::SERPACKSTRUCT4
i2	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; $/;"	m	struct:graphlab::SERPACKSTRUCT5
i2	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; T5 i5; $/;"	m	struct:graphlab::SERPACKSTRUCT6
i2c	src/graphlab/extern/metis/GKlib/gk_struct.h	/^    char *i2c;$/;"	m	struct:__anon14
i3	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT4{ F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; };$/;"	m	struct:graphlab::PACKSTRUCT4
i3	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT5{ F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; };$/;"	m	struct:graphlab::PACKSTRUCT5
i3	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT6{ F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; T5 i5; };$/;"	m	struct:graphlab::PACKSTRUCT6
i3	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; $/;"	m	struct:graphlab::SERPACKSTRUCT4
i3	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; $/;"	m	struct:graphlab::SERPACKSTRUCT5
i3	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; T5 i5; $/;"	m	struct:graphlab::SERPACKSTRUCT6
i4	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT5{ F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; };$/;"	m	struct:graphlab::PACKSTRUCT5
i4	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT6{ F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; T5 i5; };$/;"	m	struct:graphlab::PACKSTRUCT6
i4	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; $/;"	m	struct:graphlab::SERPACKSTRUCT5
i4	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; T5 i5; $/;"	m	struct:graphlab::SERPACKSTRUCT6
i5	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT6{ F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; T5 i5; };$/;"	m	struct:graphlab::PACKSTRUCT6
i5	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; T5 i5; $/;"	m	struct:graphlab::SERPACKSTRUCT6
iLog2	src/graphlab/extern/bitmagic/bmdbg.h	/^inline unsigned int iLog2(unsigned int value)$/;"	f
ialloc	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void** ialloc(mstate m,$/;"	f	file:
iarchive	src/graphlab/serialization/iarchive.hpp	/^    iarchive(std::istream& is)$/;"	f	class:graphlab::iarchive
iarchive	src/graphlab/serialization/iarchive.hpp	/^  class iarchive {$/;"	c	namespace:graphlab
iarchive_detail	src/graphlab/serialization/iarchive.hpp	/^namespace iarchive_detail {$/;"	n	namespace:graphlab
ibpc_all_one	src/graphlab/extern/bitmagic/bmtrans.h	/^const unsigned char ibpc_all_one = 2; \/\/\/!< plain ALL ONE$/;"	m	namespace:bm
ibpc_all_zero	src/graphlab/extern/bitmagic/bmtrans.h	/^const unsigned char ibpc_all_zero= 1; \/\/\/!< plain ALL ZERO$/;"	m	namespace:bm
ibpc_close	src/graphlab/extern/bitmagic/bmtrans.h	/^const unsigned char ibpc_close   = 4; \/\/\/!< plain is close to plain M$/;"	m	namespace:bm
ibpc_end	src/graphlab/extern/bitmagic/bmtrans.h	/^const unsigned char ibpc_end = 8; \/\/\/!< ibpc limiter$/;"	m	namespace:bm
ibpc_equiv	src/graphlab/extern/bitmagic/bmtrans.h	/^const unsigned char ibpc_equiv   = 3; \/\/\/!< plain is equal to plain M$/;"	m	namespace:bm
ibpc_uncompr	src/graphlab/extern/bitmagic/bmtrans.h	/^const unsigned char ibpc_uncompr = 0; \/\/\/!< plain uncompressed$/;"	m	namespace:bm
icallback	src/graphlab.hpp	/^    typedef graphlab::icallback<graph>           icallback;$/;"	t	struct:graphlab::types
icallback	src/graphlab/schedulers/icallback.hpp	/^    icallback() {}$/;"	f	class:graphlab::icallback
icallback	src/graphlab/schedulers/icallback.hpp	/^  class icallback {$/;"	c	namespace:graphlab
icode	src/graphlab/extern/metis/GKlib/gk_struct.h	/^	char			icode;$/;"	m	struct:__anon12
icolval	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  int *irowval, *icolval;$/;"	m	struct:__anon7
id	src/graphlab/distributed/distributed_control.hpp	/^  procid_t id;$/;"	m	class:graphlab::distributed_control
id	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  int id;$/;"	m	struct:__anon9
id	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *id, *ed;$/;"	m	struct:graphdef
id	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype id;                       	\/* The id value of the node *\/$/;"	m	struct:ListNodeType
id	src/graphlab/extern/metis/libmetis/struct.h	/^ idxtype id, ed, nid;            	\/* ID\/ED of nodes *\/$/;"	m	struct:vrinfodef
id	src/graphlab/extern/metis/libmetis/struct.h	/^ idxtype id, ed;            	\/* ID\/ED of nodes *\/$/;"	m	struct:rinfodef
id	src/graphlab/factors/table_factor.hpp	/^    uint32_t id;$/;"	m	struct:graphlab::variable
id2vertex	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    std::vector<std::vector<uint32_t> > id2vertex;$/;"	m	class:graphlab::clustered_priority_scheduler
id64_t	src/graphlab/extern/bitmagic/bmconst.h	/^typedef unsigned __int64 id64_t;$/;"	t	namespace:bm
id_cnt_	src/graphlab/extern/bitmagic/bmserial.h	/^    unsigned           id_cnt_;  \/\/\/< Id counter for id list$/;"	m	class:bm::serial_stream_iterator
id_max	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned id_max = 0xFFFFFFFF;$/;"	m	namespace:bm
id_t	src/graphlab/extern/bitmagic/bmconst.h	/^typedef unsigned int   id_t;$/;"	t	namespace:bm
identity	src/graphlab/shared_data/shared_data_ops.hpp	/^    static void identity(size_t index,$/;"	f	struct:graphlab::apply_ops
identity_hash	src/graphlab/util/hash_functions.hpp	/^  class identity_hash{$/;"	c	namespace:graphlab
identity_print	src/graphlab/shared_data/shared_data_ops.hpp	/^    static void identity_print(size_t index,$/;"	f	struct:graphlab::apply_ops
idkeysort	src/graphlab/extern/metis/libmetis/myqsort.c	/^void idkeysort(size_t n, DKeyValueType *base)$/;"	f
idkeysort	src/graphlab/extern/metis/libmetis/rename.h	295;"	d
idx	src/graphlab/extern/bitmagic/bm.h	/^            unsigned            idx;      \/\/!< Current position in the bit list$/;"	m	struct:bm::bvector::iterator_base::bitblock_descr
idx2bit	src/graphlab/extern/metis/GKlib/dlmalloc.c	1447;"	d	file:
idx_gt	src/graphlab/extern/metis/GKlib/sort.c	115;"	d	file:
idx_lt	src/graphlab/extern/metis/GKlib/sort.c	105;"	d	file:
idxargmax	src/graphlab/extern/metis/libmetis/rename.h	386;"	d
idxargmax_strd	src/graphlab/extern/metis/libmetis/rename.h	390;"	d
idxargmin	src/graphlab/extern/metis/libmetis/rename.h	387;"	d
idxaxpy	src/graphlab/extern/metis/libmetis/rename.h	389;"	d
idxcopy	src/graphlab/extern/metis/libmetis/macros.h	23;"	d
idxkey_gt	src/graphlab/extern/metis/GKlib/sort.c	237;"	d	file:
idxkey_lt	src/graphlab/extern/metis/GKlib/sort.c	227;"	d	file:
idxmalloc	src/graphlab/extern/metis/libmetis/rename.h	383;"	d
idxset	src/graphlab/extern/metis/libmetis/rename.h	385;"	d
idxsmalloc	src/graphlab/extern/metis/libmetis/rename.h	384;"	d
idxsum	src/graphlab/extern/metis/libmetis/rename.h	388;"	d
idxtype	src/graphlab/extern/metis/metis.h	/^  typedef int32_t idxtype;$/;"	t
idxtype	src/graphlab/extern/metis/metis.h	/^  typedef int64_t idxtype;$/;"	t
idxtype_abs	src/graphlab/extern/metis/libmetis/macros.h	31;"	d
idxtype_lt	src/graphlab/extern/metis/libmetis/myqsort.c	25;"	d	file:
idxwspacefree	src/graphlab/extern/metis/libmetis/memory.c	/^void idxwspacefree(CtrlType *ctrl, idxtype n)$/;"	f
idxwspacefree	src/graphlab/extern/metis/libmetis/rename.h	169;"	d
idxwspacemalloc	src/graphlab/extern/metis/libmetis/memory.c	/^idxtype *idxwspacemalloc(CtrlType *ctrl, idxtype n)$/;"	f
idxwspacemalloc	src/graphlab/extern/metis/libmetis/rename.h	168;"	d
iengine	src/graphlab.hpp	/^    typedef graphlab::iengine<graph>             iengine;$/;"	t	struct:graphlab::types
iengine	src/graphlab/engine/iengine.hpp	/^  class iengine {$/;"	c	namespace:graphlab
iengine_type	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    typedef iengine<Graph> iengine_type;$/;"	t	class:graphlab::distributed_scheduler_wrapper
iengine_type	src/graphlab/monitoring/console_monitor.hpp	/^    typedef typename imonitor<Graph>::iengine_type iengine_type;$/;"	t	class:graphlab::console_monitor
iengine_type	src/graphlab/monitoring/imonitor.hpp	/^    typedef iengine<Graph> iengine_type;$/;"	t	class:graphlab::imonitor
iengine_type	src/graphlab/monitoring/monitor_multiplexer.hpp	/^    typedef typename imonitor_type::iengine_type iengine_type;$/;"	t	class:graphlab::monitor_multiplexer
iengine_type	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    typedef typename base::iengine_type iengine_type;$/;"	t	class:graphlab::clustered_priority_scheduler
iengine_type	src/graphlab/schedulers/colored_scheduler.hpp	/^    typedef typename base::iengine_type         iengine_type;$/;"	t	class:graphlab::colored_scheduler
iengine_type	src/graphlab/schedulers/fifo_scheduler.hpp	/^    typedef typename base::iengine_type iengine_type;$/;"	t	class:graphlab::fifo_scheduler
iengine_type	src/graphlab/schedulers/icallback.hpp	/^    typedef iengine<Graph> iengine_type;$/;"	t	class:graphlab::icallback
iengine_type	src/graphlab/schedulers/ischeduler.hpp	/^    typedef iengine<Graph> iengine_type;$/;"	t	class:graphlab::ischeduler
iengine_type	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    typedef typename base::iengine_type iengine_type;$/;"	t	class:graphlab::multiqueue_fifo_scheduler
iengine_type	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    typedef typename base::iengine_type iengine_type;$/;"	t	class:graphlab::multiqueue_priority_scheduler
iengine_type	src/graphlab/schedulers/priority_scheduler.hpp	/^    typedef typename base::iengine_type iengine_type;$/;"	t	class:graphlab::priority_scheduler
iengine_type	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    typedef typename base::iengine_type iengine_type;$/;"	t	class:graphlab::round_robin_scheduler
iengine_type	src/graphlab/schedulers/sampling_scheduler.hpp	/^    typedef typename base::iengine_type iengine_type;$/;"	t	class:graphlab::sampling_scheduler
iengine_type	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    typedef typename base::iengine_type iengine_type;$/;"	t	class:graphlab::set_scheduler
iengine_type	src/graphlab/schedulers/splash_scheduler.hpp	/^    typedef typename base::iengine_type iengine_type;$/;"	t	class:graphlab::splash_scheduler
iengine_type	src/graphlab/schedulers/support/direct_callback.hpp	/^    typedef typename base::iengine_type iengine_type;$/;"	t	class:graphlab::direct_callback
iengine_type	src/graphlab/schedulers/support/unused_scheduler_callback.hpp	/^    typedef typename base::iengine_type iengine_type;$/;"	t	class:graphlab::unused_scheduler_callback
iengine_type	src/graphlab/schedulers/sweep_scheduler.hpp	/^    typedef typename base::iengine_type iengine_type;$/;"	t	class:graphlab::sweep_scheduler
ihler_dynamic_range	src/graphlab/factors/binary_factor.hpp	/^    double ihler_dynamic_range() const {$/;"	f	class:graphlab::binary_factor
iidxsort	src/graphlab/extern/metis/libmetis/myqsort.c	/^void iidxsort(size_t n, idxtype *base)$/;"	f
iidxsort	src/graphlab/extern/metis/libmetis/rename.h	292;"	d
ikey_gt	src/graphlab/extern/metis/GKlib/sort.c	157;"	d	file:
ikey_lt	src/graphlab/extern/metis/GKlib/sort.c	147;"	d	file:
ikeysort	src/graphlab/extern/metis/libmetis/myqsort.c	/^void ikeysort(size_t n, KeyValueType *base)$/;"	f
ikeysort	src/graphlab/extern/metis/libmetis/rename.h	293;"	d
ikeyvalsort	src/graphlab/extern/metis/libmetis/myqsort.c	/^void ikeyvalsort(size_t n, KeyValueType *base)$/;"	f
ikeyvalsort	src/graphlab/extern/metis/libmetis/rename.h	294;"	d
ilog2	src/graphlab/extern/bitmagic/bmutil.h	/^T ilog2(T x)$/;"	f	namespace:bm
ilog2	src/graphlab/extern/bitmagic/bmutil.h	/^inline bm::gap_word_t ilog2(gap_word_t x)$/;"	f	namespace:bm
ilog2_LUT	src/graphlab/extern/bitmagic/bmutil.h	/^T ilog2_LUT(T x)$/;"	f	namespace:bm
ilog2_LUT	src/graphlab/extern/bitmagic/bmutil.h	/^inline bm::gap_word_t ilog2_LUT<bm::gap_word_t>(bm::gap_word_t x)$/;"	f	namespace:bm
image	apps/image_denoise/image.hpp	/^  image() : _rows(0), _cols(0), data(0,0) { }$/;"	f	class:image
image	apps/image_denoise/image.hpp	/^  image(size_t rows, size_t cols) : $/;"	f	class:image
image	apps/image_denoise/image.hpp	/^class image {$/;"	c
imax	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype imax[2][MAXNCON];$/;"	m	struct:vpwgtdef
imonitor	src/graphlab.hpp	/^    typedef graphlab::imonitor<graph>            imonitor;$/;"	t	struct:graphlab::types
imonitor	src/graphlab/monitoring/imonitor.hpp	/^  class imonitor {    $/;"	c	namespace:graphlab
imonitor_type	src/graphlab/distributed/distributed_engine.hpp	/^    typedef typename base::imonitor_type imonitor_type;$/;"	t	class:graphlab::distributed_engine
imonitor_type	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    typedef typename base::imonitor_type imonitor_type;$/;"	t	class:graphlab::pushy_distributed_engine
imonitor_type	src/graphlab/engine/asynchronous_engine.hpp	/^    typedef typename base::imonitor_type imonitor_type;$/;"	t	class:graphlab::asynchronous_engine
imonitor_type	src/graphlab/engine/iengine.hpp	/^    typedef imonitor<Graph> imonitor_type;$/;"	t	class:graphlab::iengine
imonitor_type	src/graphlab/engine/sim_thread_engine.hpp	/^    typedef typename base::imonitor_type imonitor_type;$/;"	t	class:graphlab::sim_thread_engine
imonitor_type	src/graphlab/engine/synchronous_engine.hpp	/^    typedef typename base::imonitor_type imonitor_type;$/;"	t	class:graphlab::synchronous_engine
imonitor_type	src/graphlab/engine/threaded_engine.hpp	/^    typedef typename base::imonitor_type imonitor_type;$/;"	t	class:graphlab::threaded_engine
imonitor_type	src/graphlab/monitoring/monitor_multiplexer.hpp	/^    typedef imonitor<Graph> imonitor_type;$/;"	t	class:graphlab::monitor_multiplexer
improve_gap_levels	src/graphlab/extern/bitmagic/bmfunc.h	/^bool improve_gap_levels(const T* length,$/;"	f	namespace:bm
in_edge_ids	src/graphlab/distributed/graph/cloned_graph.hpp	/^    const std::vector<edge_id_t>& in_edge_ids(vertex_id_t v) const {$/;"	f	class:graphlab::cloned_graph
in_edge_ids	src/graphlab/distributed/graph/distributed_graph.hpp	/^    const std::vector<edge_id_t>& in_edge_ids(vertex_id_t v) const {$/;"	f	class:graphlab::distributed_graph
in_edge_ids	src/graphlab/graph/graph.hpp	/^    const std::vector<edge_id_t>& in_edge_ids(vertex_id_t v) const {$/;"	f	class:graphlab::graph
in_edge_ids	src/graphlab/scope/iscope.hpp	/^    const std::vector<edge_id_t>& in_edge_ids() const {$/;"	f	class:graphlab::iscope
in_edge_ids	src/graphlab/scope/iscope.hpp	/^    const std::vector<edge_id_t>& in_edge_ids(vertex_id_t v) const {$/;"	f	class:graphlab::iscope
in_edges	src/graphlab/graph/graph.hpp	/^    std::vector< std::vector<edge_id_t> >  in_edges;$/;"	m	class:graphlab::graph
inc	src/graphlab/parallel/atomic.hpp	/^    T inc() { return __sync_add_and_fetch(&value, 1);  }$/;"	f	class:graphlab::atomic
inc	src/graphlab/parallel/atomic.hpp	/^    T inc(T val) { return __sync_add_and_fetch(&value, val);  }$/;"	f	class:graphlab::atomic
includes	src/graphlab/util/stl_util.hpp	/^  bool includes(const std::set<T>& a, const std::set<T>& b) {$/;"	f	namespace:graphlab
increase_priority	src/graphlab/util/sampling_tree.hpp	/^    void increase_priority(const size_t& key, const Priority &pr) {$/;"	f	class:graphlab::sampling_tree
increment	src/graphlab/shared_data/shared_data_ops.hpp	/^    static void increment(size_t index,$/;"	f	struct:graphlab::apply_ops
index	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      size_t index;$/;"	m	struct:graphlab::distributed_fullsweep_sdm::sync_state
index	src/graphlab/distributed/distributed_shared_data.hpp	/^      size_t index;$/;"	m	struct:graphlab::distributed_shared_data::sync_state
index	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  bindex_t                  index;$/;"	m	struct:malloc_tree_chunk	file:
index_map	src/graphlab/util/mutable_queue.hpp	/^    index_map_type index_map;$/;"	m	class:graphlab::mutable_queue
index_map_type	src/graphlab/util/mutable_queue.hpp	/^    typedef std::map<T, size_t, Compare> index_map_type;$/;"	t	class:graphlab::mutable_queue
index_map_type	src/graphlab/util/mutable_queue.hpp	/^    typedef std::vector<index_type> index_map_type;$/;"	t	class:graphlab::mutable_queue
index_type	src/graphlab/util/mutable_queue.hpp	/^    typedef uint32_t index_type;$/;"	t	class:graphlab::mutable_queue
info_arch	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_platform	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
init	src/graphlab/distributed/distributed_engine.hpp	/^      void init(distributed_engine<Graph, DistributedScheduler>* _engine, size_t _workerid) {$/;"	f	class:graphlab::distributed_engine::task_worker
init	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    void init() {$/;"	f	class:graphlab::distributed_phased_sweep_scheduler
init	src/graphlab/distributed/distributed_scope.hpp	/^    void init(Graph* graph, vertex_id_t vertex, size_t deferred_lock = -1) {$/;"	f	class:graphlab::distributed_scope
init	src/graphlab/distributed/graph_lock_manager.hpp	/^  void init() {$/;"	f	class:graphlab::graph_lock_manager
init	src/graphlab/distributed/pushy_distributed_engine.hpp	/^      void init(pushy_distributed_engine* _engine, size_t _workerid) {$/;"	f	class:graphlab::pushy_distributed_engine::task_worker
init	src/graphlab/engine/asynchronous_engine.hpp	/^      void init(asynchronous_engine* _engine, size_t _workerid) {$/;"	f	class:graphlab::asynchronous_engine::engine_thread
init	src/graphlab/engine/synchronous_engine.hpp	/^      void init(synchronous_engine* _engine, size_t _workerid) {$/;"	f	class:graphlab::synchronous_engine::synchronous_worker
init	src/graphlab/engine/threaded_engine.hpp	/^      void init(threaded_engine* _engine, size_t _workerid) {$/;"	f	class:graphlab::threaded_engine::engine_thread
init	src/graphlab/monitoring/console_monitor.hpp	/^    virtual void init(iengine_type* engine) {$/;"	f	class:graphlab::console_monitor
init	src/graphlab/monitoring/imonitor.hpp	/^    virtual void init(iengine_type* engine) { }$/;"	f	class:graphlab::imonitor
init	src/graphlab/monitoring/monitor_multiplexer.hpp	/^    void init(iengine_type* engine) {$/;"	f	class:graphlab::monitor_multiplexer
init	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    void init(blob_graph *g_,$/;"	f	class:graphlab::any_inedge_set
init	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    void init(Graph *g_,$/;"	f	class:graphlab::multinomial_vertex_set
init	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    void init(Graph* g_,$/;"	f	class:graphlab::restricted_vertex_set
init	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    void init() {$/;"	f	class:graphlab::set_scheduler
init	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    void init(Graph* g_,$/;"	f	class:graphlab::vertex_set
init	src/graphlab/schedulers/sweep_scheduler.hpp	/^    void init() {$/;"	f	class:graphlab::sweep_scheduler
init	src/graphlab/scope/general_scope.hpp	/^    void init(Graph* graph, vertex_id_t vertex) {$/;"	f	class:graphlab::general_scope
init	src/graphlab/scope/synchronous_scope.hpp	/^    void init(Graph* srcgraph, $/;"	f	class:graphlab::synchronous_scope
init_bins	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void init_bins(mstate m) {$/;"	f	file:
init_bitbuf	src/graphlab/extern/bitmagic/bmvmin.h	/^    void init_bitbuf(bm::word_t* buf)$/;"	f	class:bm::miniset
init_gapbuf	src/graphlab/extern/bitmagic/bmvmin.h	/^    void init_gapbuf(bm::word_t* buf)$/;"	f	class:bm::miniset
init_graph	apps/demo/concise_demo.cpp	/^void init_graph(graph_type& g,$/;"	f
init_graph	apps/demo/demo.cpp	/^void init_graph(graph_type& g,$/;"	f
init_message_processing	src/graphlab/distributed/distributed_control.cpp	/^void distributed_control::init_message_processing(size_t nummsgthreads) {$/;"	f	class:graphlab::distributed_control
init_mparams	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static int init_mparams(void) {$/;"	f	file:
init_plan	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    void init_plan() {$/;"	f	class:graphlab::execution_plan
init_shared_data	apps/demo/concise_demo.cpp	/^void init_shared_data(gl::thread_shared_data& sdm,$/;"	f
init_shared_data	apps/demo/demo.cpp	/^void init_shared_data(gl::ishared_data_manager& sdm,$/;"	f
init_top	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void init_top(mstate m, mchunkptr p, size_t psize) {$/;"	f	file:
init_user_mstate	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static mstate init_user_mstate(char* tbase, size_t tsize) {$/;"	f	file:
init_value	apps/concomp/concomp.cpp	10;"	d	file:
init_value	apps/concomp/lock_concomp.cpp	11;"	d	file:
init_value	apps/concomp/rlx_concomp.cpp	10;"	d	file:
init_value	apps/concomp/seq_concomp.cpp	12;"	d	file:
init_value	apps/concomp/sync_concomp.cpp	11;"	d	file:
init_value	apps/pagerank/pagerank.cpp	21;"	d	file:
init_value	apps/pagerank/sync_pagerank.cpp	22;"	d	file:
inited	src/graphlab/util/generics/any.hpp	/^      static bool inited; \/\/ whether localid has been created$/;"	m	class:graphlab::any::any_registration
inited	src/graphlab/util/generics/any.hpp	/^  template<typename T> bool any::any_registration<T>::inited = false; $/;"	m	class:graphlab::any::any_registration
inputfile	apps/pagerank/pagerankapp.hpp	/^  std::string inputfile;$/;"	m	class:pagerankapp
insert	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    void insert(ivertex_set* parent, vertex_id_t v) {$/;"	f	class:graphlab::any_inedge_set
insert	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    void insert(base* parent, vertex_id_t v) {$/;"	f	class:graphlab::multinomial_vertex_set
insert	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    void insert(base* parent, vertex_id_t v) {$/;"	f	class:graphlab::restricted_vertex_set
insert	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    void insert(ivertex_set_type* parent, vertex_id_t v) {$/;"	f	class:graphlab::vertex_set
insert	src/graphlab/util/synchronized_unordered_map.hpp	/^   value_type& insert(size_t key, const value_type &val) {$/;"	f	class:graphlab::synchronized_unordered_map
insert_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	2281;"	d	file:
insert_cumulative	src/graphlab/util/mutable_queue.hpp	/^    bool insert_cumulative(T item, Priority priority) {$/;"	f	class:graphlab::mutable_queue
insert_edata	src/graphlab/distributed/graph_lock_manager.hpp	/^  void insert_edata(edge_id_t edge, $/;"	f	class:graphlab::graph_lock_manager
insert_events	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	/^    std::vector<ivertex_set*> insert_events;$/;"	m	class:graphlab::ivertex_set
insert_iterator	src/graphlab/extern/bitmagic/bm.h	/^        insert_iterator(bvector<Alloc, MS>& bvect)$/;"	f	class:bm::bvector::insert_iterator
insert_iterator	src/graphlab/extern/bitmagic/bm.h	/^    class insert_iterator$/;"	c	class:bm::bvector
insert_large_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	2140;"	d	file:
insert_max	src/graphlab/util/mutable_queue.hpp	/^    bool insert_max(T item, Priority priority) {$/;"	f	class:graphlab::mutable_queue
insert_max	src/graphlab/util/mutable_queue.hpp	/^    void insert_max(size_t item, Priority priority) {$/;"	f	class:graphlab::mutable_queue
insert_small_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	2069;"	d	file:
insert_vdata	src/graphlab/distributed/graph_lock_manager.hpp	/^  void insert_vdata(vertex_id_t vertex, $/;"	f	class:graphlab::graph_lock_manager
insert_with_failure_detect	src/graphlab/util/synchronized_unordered_map.hpp	/^   std::pair<bool, Data*> insert_with_failure_detect(size_t key, const value_type &val) {$/;"	f	class:graphlab::synchronized_unordered_map
inserter	src/graphlab/extern/bitmagic/bm.h	/^    insert_iterator inserter()$/;"	f	class:bm::bvector
instance	src/graphlab/distributed/metrics/distributed_metrics.cpp	/^distributed_metrics * distributed_metrics::instance(distributed_control * dc) {$/;"	f	class:graphlab::distributed_metrics
int32_t	src/graphlab/extern/metis/GKlib/gk_arch.h	/^typedef __int32                 int32_t;$/;"	t
int32_t	src/graphlab/extern/metis/metis.h	/^  typedef __int32                 int32_t;$/;"	t
int64_t	src/graphlab/extern/metis/GKlib/gk_arch.h	/^typedef __int64                 int64_t;$/;"	t
int64_t	src/graphlab/extern/metis/metis.h	/^  typedef __int64                 int64_t;$/;"	t
int_any_map_get_handler	src/graphlab/distributed/distributed_hash_table.cpp	/^void int_any_map_get_handler(distributed_control& dc, $/;"	f	namespace:graphlab
int_any_map_get_reply_handler	src/graphlab/distributed/distributed_hash_table.cpp	/^void int_any_map_get_reply_handler(distributed_control& dc, $/;"	f	namespace:graphlab
int_any_map_set_handler	src/graphlab/distributed/distributed_hash_table.cpp	/^void int_any_map_set_handler(distributed_control& dc, $/;"	f	namespace:graphlab
int_gt	src/graphlab/extern/metis/GKlib/sort.c	55;"	d	file:
int_lt	src/graphlab/extern/metis/GKlib/sort.c	45;"	d	file:
int_to_v	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    vertex_id_t* int_to_v;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
int_to_v	src/graphlab/schedulers/sweep_scheduler.hpp	/^    vertex_id_t* int_to_v;$/;"	m	class:graphlab::sweep_scheduler
interlockedcompareexchange	src/graphlab/extern/metis/GKlib/dlmalloc.c	112;"	d	file:
interlockedexchange	src/graphlab/extern/metis/GKlib/dlmalloc.c	113;"	d	file:
internal_free	src/graphlab/extern/metis/GKlib/dlmalloc.c	2294;"	d	file:
internal_free	src/graphlab/extern/metis/GKlib/dlmalloc.c	2299;"	d	file:
internal_free	src/graphlab/extern/metis/GKlib/dlmalloc.c	2303;"	d	file:
internal_mallinfo	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static struct mallinfo internal_mallinfo(mstate m) {$/;"	f	file:
internal_malloc	src/graphlab/extern/metis/GKlib/dlmalloc.c	2293;"	d	file:
internal_malloc	src/graphlab/extern/metis/GKlib/dlmalloc.c	2297;"	d	file:
internal_malloc	src/graphlab/extern/metis/GKlib/dlmalloc.c	2302;"	d	file:
internal_malloc_stats	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void internal_malloc_stats(mstate m) {$/;"	f	file:
internal_memalign	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void* internal_memalign(mstate m, size_t alignment, size_t bytes) {$/;"	f	file:
internal_realloc	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void* internal_realloc(mstate m, void* oldmem, size_t bytes) {$/;"	f	file:
intersect	src/graphlab/factors/table_factor.hpp	/^    domain intersect(const domain& other) const {$/;"	f	class:graphlab::domain
inv_xtx	apps/shooting/shooting.cpp	/^  float inv_xtx;$/;"	m	struct:vertex_data	file:
invalidate	src/graphlab/distributed/distributed_hash_table.cpp	/^void distributed_hash_table::invalidate(size_t key) {$/;"	f	class:graphlab::distributed_hash_table
invalidate	src/graphlab/extern/bitmagic/bm.h	/^        void invalidate()$/;"	f	class:bm::bvector::iterator_base
invert	src/graphlab/extern/bitmagic/bm.h	/^bvector<Alloc, MS>& bvector<Alloc, MS>::invert()$/;"	f	class:bm::bvector
invoke	src/graphlab/parallel/pthread_tools.cpp	/^  void* thread::invoke(void *_args) {$/;"	f	class:graphlab::thread
invoke_args	src/graphlab/parallel/pthread_tools.hpp	/^      invoke_args(runnable* r, size_t t) : $/;"	f	struct:graphlab::thread::invoke_args
invoke_args	src/graphlab/parallel/pthread_tools.hpp	/^    struct invoke_args {$/;"	s	class:graphlab::thread
irowval	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  int *irowval, *icolval;$/;"	m	struct:__anon7
is_aborted	src/graphlab/util/task_count_termination.hpp	/^    bool is_aborted(){ return force_termination; }$/;"	f	class:graphlab::task_count_termination
is_aligned	src/graphlab/extern/metis/GKlib/dlmalloc.c	206;"	d	file:
is_bit_true	src/graphlab/extern/bitmagic/bmvmin.h	/^    int is_bit_true(unsigned pos) const$/;"	f	class:bm::bvector_mini
is_bits_one	src/graphlab/extern/bitmagic/bmfunc.h	/^inline bool is_bits_one(const bm::wordop_t* start, $/;"	f	namespace:bm
is_block_gap	src/graphlab/extern/bitmagic/bmblocks.h	/^    bool is_block_gap(unsigned nb) const $/;"	f	class:bm::blocks_manager
is_block_one	src/graphlab/extern/bitmagic/bmblocks.h	/^    bool is_block_one(unsigned          nb, $/;"	f	class:bm::blocks_manager
is_block_zero	src/graphlab/extern/bitmagic/bmblocks.h	/^    bool is_block_zero(unsigned          nb, $/;"	f	class:bm::blocks_manager
is_const_set_operation	src/graphlab/extern/bitmagic/bmfunc.h	/^bool is_const_set_operation(set_operation op)$/;"	f	namespace:bm
is_eof	src/graphlab/extern/bitmagic/bmserial.h	/^    bool is_eof() const { return end_of_stream_; }$/;"	f	class:bm::serial_stream_iterator
is_extern_segment	src/graphlab/extern/metis/GKlib/dlmalloc.c	1039;"	d	file:
is_global	src/graphlab/extern/metis/GKlib/dlmalloc.c	1188;"	d	file:
is_granularity_aligned	src/graphlab/extern/metis/GKlib/dlmalloc.c	1233;"	d	file:
is_initialized	src/graphlab/extern/metis/GKlib/dlmalloc.c	1192;"	d	file:
is_leaf	src/graphlab/util/fast_multinomial.hpp	/^    bool is_leaf(size_t i) const {$/;"	f	class:graphlab::fast_multinomial
is_mmapped	src/graphlab/extern/metis/GKlib/dlmalloc.c	850;"	d	file:
is_mmapped_segment	src/graphlab/extern/metis/GKlib/dlmalloc.c	1038;"	d	file:
is_page_aligned	src/graphlab/extern/metis/GKlib/dlmalloc.c	1231;"	d	file:
is_root	src/graphlab/util/fast_multinomial.hpp	/^    bool is_root(size_t i) const { return i == 0; }$/;"	f	class:graphlab::fast_multinomial
is_set	src/graphlab/util/command_line_options.hpp	/^    bool is_set(const std::string& option) {$/;"	f	class:graphlab::command_line_options
is_small	src/graphlab/extern/metis/GKlib/dlmalloc.c	1370;"	d	file:
is_subblock_null	src/graphlab/extern/bitmagic/bmblocks.h	/^    bool is_subblock_null(unsigned nsub) const$/;"	f	class:bm::blocks_manager
is_subset	src/graphlab/util/stl_util.hpp	/^  bool is_subset(const std::set<T>& a, const std::set<T>& b) {$/;"	f	namespace:graphlab
is_superset	src/graphlab/util/stl_util.hpp	/^  bool is_superset(const std::set<T>& a,const std::set<T>& b) {$/;"	f	namespace:graphlab
is_task_scheduled	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    bool is_task_scheduled(update_task_type task) {$/;"	f	class:graphlab::distributed_phased_sweep_scheduler
is_task_scheduled	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    bool is_task_scheduled(update_task_type task)  {$/;"	f	class:graphlab::multiqueue_fifo_scheduler
is_task_scheduled	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    bool is_task_scheduled(update_task_type task)  {$/;"	f	class:graphlab::multiqueue_priority_scheduler
is_task_scheduled	src/graphlab/schedulers/sweep_scheduler.hpp	/^    bool is_task_scheduled(update_task_type task) {$/;"	f	class:graphlab::sweep_scheduler
ischeduler	src/graphlab.hpp	/^    typedef graphlab::ischeduler<graph>          ischeduler;$/;"	t	struct:graphlab::types
ischeduler	src/graphlab/schedulers/ischeduler.hpp	/^    ischeduler() : monitor(NULL) {}$/;"	f	class:graphlab::ischeduler
ischeduler	src/graphlab/schedulers/ischeduler.hpp	/^  class ischeduler {$/;"	c	namespace:graphlab
ischeduler_type	src/graphlab/distributed/distributed_engine.hpp	/^    typedef typename base::ischeduler_type ischeduler_type;$/;"	t	class:graphlab::distributed_engine
ischeduler_type	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    typedef typename base::ischeduler_type ischeduler_type;$/;"	t	class:graphlab::pushy_distributed_engine
ischeduler_type	src/graphlab/engine/asynchronous_engine.hpp	/^    typedef typename base::ischeduler_type ischeduler_type;$/;"	t	class:graphlab::asynchronous_engine
ischeduler_type	src/graphlab/engine/iengine.hpp	/^    typedef ischeduler<Graph> ischeduler_type;$/;"	t	class:graphlab::iengine
ischeduler_type	src/graphlab/engine/sim_thread_engine.hpp	/^    typedef typename base::ischeduler_type ischeduler_type;$/;"	t	class:graphlab::sim_thread_engine
ischeduler_type	src/graphlab/engine/synchronous_engine.hpp	/^    typedef typename base::ischeduler_type ischeduler_type;$/;"	t	class:graphlab::synchronous_engine
ischeduler_type	src/graphlab/engine/threaded_engine.hpp	/^    typedef typename base::ischeduler_type ischeduler_type;$/;"	t	class:graphlab::threaded_engine
iscope	src/graphlab.hpp	/^    typedef graphlab::iscope<graph>              iscope;$/;"	t	struct:graphlab::types
iscope	src/graphlab/scope/iscope.hpp	/^    iscope(Graph* graph_ptr = NULL, vertex_id_t vertex = -1) : $/;"	f	class:graphlab::iscope
iscope	src/graphlab/scope/iscope.hpp	/^  class iscope {$/;"	c	namespace:graphlab
iscope_factory	src/graphlab/scope/iscope_factory.hpp	/^    iscope_factory(Graph& graph, size_t ncpus) {}$/;"	f	class:graphlab::iscope_factory
iscope_factory	src/graphlab/scope/iscope_factory.hpp	/^  class iscope_factory {$/;"	c	namespace:graphlab
iscope_factory_type	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    typedef typename base::iscope_factory_type iscope_factory_type;$/;"	t	class:graphlab::distributed_fullsweep_sdm
iscope_factory_type	src/graphlab/distributed/distributed_shared_data.hpp	/^    typedef typename base::iscope_factory_type iscope_factory_type;$/;"	t	class:graphlab::distributed_shared_data
iscope_factory_type	src/graphlab/shared_data/ishared_data.hpp	/^    typedef iscope_factory<Graph> iscope_factory_type;$/;"	t	class:graphlab::ishared_data
iscope_factory_type	src/graphlab/shared_data/ishared_data_manager.hpp	/^    typedef typename base::iscope_factory_type iscope_factory_type;$/;"	t	class:graphlab::ishared_data_manager
iscope_factory_type	src/graphlab/shared_data/thread_shared_data.hpp	/^    typedef typename base::iscope_factory_type iscope_factory_type;$/;"	t	class:graphlab::thread_shared_data
iscope_type	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    typedef typename base::iscope_type iscope_type;$/;"	t	class:graphlab::distributed_fullsweep_sdm
iscope_type	src/graphlab/distributed/distributed_shared_data.hpp	/^    typedef typename base::iscope_type iscope_type;$/;"	t	class:graphlab::distributed_shared_data
iscope_type	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    typedef typename base::iscope_type iscope_type;$/;"	t	class:graphlab::pushy_distributed_engine
iscope_type	src/graphlab/engine/asynchronous_engine.hpp	/^    typedef typename base::iscope_type iscope_type;$/;"	t	class:graphlab::asynchronous_engine
iscope_type	src/graphlab/engine/iengine.hpp	/^    typedef iscope<Graph> iscope_type;$/;"	t	class:graphlab::iengine
iscope_type	src/graphlab/engine/sim_thread_engine.hpp	/^    typedef typename base::iscope_type iscope_type;$/;"	t	class:graphlab::sim_thread_engine
iscope_type	src/graphlab/engine/synchronous_engine.hpp	/^    typedef typename base::iscope_type iscope_type;$/;"	t	class:graphlab::synchronous_engine
iscope_type	src/graphlab/engine/threaded_engine.hpp	/^    typedef typename base::iscope_type iscope_type;$/;"	t	class:graphlab::threaded_engine
iscope_type	src/graphlab/monitoring/imonitor.hpp	/^    typedef iscope<Graph> iscope_type;$/;"	t	class:graphlab::imonitor
iscope_type	src/graphlab/monitoring/monitor_multiplexer.hpp	/^    typedef typename imonitor_type::iscope_type iscope_type;$/;"	t	class:graphlab::monitor_multiplexer
iscope_type	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    typedef iscope<Graph> iscope_type;$/;"	t	class:graphlab::multinomial_vertex_set
iscope_type	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    typedef iscope<Graph> iscope_type;$/;"	t	class:graphlab::restricted_vertex_set
iscope_type	src/graphlab/scope/general_scope_factory.hpp	/^    typedef typename base::iscope_type iscope_type;$/;"	t	class:graphlab::general_scope_factory
iscope_type	src/graphlab/scope/iscope_factory.hpp	/^    typedef iscope<Graph> iscope_type;$/;"	t	class:graphlab::iscope_factory
iscope_type	src/graphlab/scope/synchronous_scope_factory.hpp	/^    typedef typename base::iscope_type iscope_type;$/;"	t	class:graphlab::synchronous_scope_factory
iscope_type	src/graphlab/shared_data/ishared_data.hpp	/^    typedef iscope<Graph> iscope_type;$/;"	t	class:graphlab::ishared_data
iscope_type	src/graphlab/shared_data/ishared_data_manager.hpp	/^    typedef typename base::iscope_type iscope_type;$/;"	t	class:graphlab::ishared_data_manager
iscope_type	src/graphlab/shared_data/shared_data_ops.hpp	/^    typedef iscope<Graph> iscope_type;$/;"	t	struct:graphlab::sync_ops
iscope_type	src/graphlab/shared_data/thread_shared_data.hpp	/^    typedef typename base::iscope_type iscope_type;$/;"	t	class:graphlab::thread_shared_data
iscope_type	src/graphlab/tasks/update_task.hpp	/^    typedef iscope<Graph> iscope_type;$/;"	t	class:graphlab::update_task
isdat	apps/svm/svm.cpp	/^  bool isdat;$/;"	m	struct:vertex_data	file:
ishared_data	src/graphlab.hpp	/^    typedef graphlab::ishared_data<graph>        ishared_data;$/;"	t	struct:graphlab::types
ishared_data	src/graphlab/shared_data/ishared_data.hpp	/^  class ishared_data {$/;"	c	namespace:graphlab
ishared_data_manager	src/graphlab.hpp	/^    typedef graphlab::ishared_data_manager<graph> ishared_data_manager;$/;"	t	struct:graphlab::types
ishared_data_manager	src/graphlab/shared_data/ishared_data_manager.hpp	/^  class ishared_data_manager : $/;"	c	namespace:graphlab
ishared_data_manager_type	src/graphlab/distributed/distributed_engine.hpp	/^    typedef typename base::ishared_data_manager_type ishared_data_manager_type;$/;"	t	class:graphlab::distributed_engine
ishared_data_manager_type	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    typedef typename base::ishared_data_manager_type ishared_data_manager_type;$/;"	t	class:graphlab::pushy_distributed_engine
ishared_data_manager_type	src/graphlab/engine/asynchronous_engine.hpp	/^    typedef typename base::ishared_data_manager_type ishared_data_manager_type;$/;"	t	class:graphlab::asynchronous_engine
ishared_data_manager_type	src/graphlab/engine/iengine.hpp	/^    typedef ishared_data_manager<Graph> ishared_data_manager_type;$/;"	t	class:graphlab::iengine
ishared_data_manager_type	src/graphlab/engine/sim_thread_engine.hpp	/^    typedef typename base::ishared_data_manager_type ishared_data_manager_type;$/;"	t	class:graphlab::sim_thread_engine
ishared_data_manager_type	src/graphlab/engine/synchronous_engine.hpp	/^    typedef typename base::ishared_data_manager_type ishared_data_manager_type;$/;"	t	class:graphlab::synchronous_engine
ishared_data_manager_type	src/graphlab/engine/threaded_engine.hpp	/^    typedef typename base::ishared_data_manager_type ishared_data_manager_type;$/;"	t	class:graphlab::threaded_engine
ishared_data_type	src/graphlab/engine/asynchronous_engine.hpp	/^    typedef typename base::ishared_data_type ishared_data_type;$/;"	t	class:graphlab::asynchronous_engine
ishared_data_type	src/graphlab/engine/iengine.hpp	/^    typedef ishared_data<Graph> ishared_data_type;$/;"	t	class:graphlab::iengine
ishared_data_type	src/graphlab/engine/synchronous_engine.hpp	/^    typedef typename base::ishared_data_type ishared_data_type;$/;"	t	class:graphlab::synchronous_engine
ishared_data_type	src/graphlab/shared_data/shared_data_ops.hpp	/^    typedef ishared_data<Graph> ishared_data_type;$/;"	t	struct:graphlab::apply_ops
ishared_data_type	src/graphlab/shared_data/shared_data_ops.hpp	/^    typedef ishared_data<Graph> ishared_data_type;$/;"	t	struct:graphlab::sync_ops
ishared_data_type	src/graphlab/tasks/update_task.hpp	/^    typedef ishared_data<Graph> ishared_data_type;$/;"	t	class:graphlab::update_task
isrootset	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    bool isrootset;$/;"	m	class:graphlab::vertex_set
issue_local_sync	src/graphlab/distributed/distributed_shared_data.hpp	/^    void issue_local_sync(size_t index, $/;"	f	class:graphlab::distributed_shared_data
iteration	src/graphlab/engine/synchronous_engine.hpp	/^    bool iteration(int cpuid) {$/;"	f	class:graphlab::synchronous_engine
iterationbarrier	src/graphlab/engine/synchronous_engine.hpp	/^    barrier iterationbarrier;$/;"	m	class:graphlab::synchronous_engine
iterations	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  atomic<size_t> iterations;           \/\/\/ Number of complete iterations so far$/;"	m	class:graphlab::distributed_round_robin_scheduler
iterations	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  atomic<size_t> iterations;           \/\/\/ Number of complete iterations so far$/;"	m	class:graphlab::distributed_round_robin_scheduler2
iterations	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    atomic<size_t> iterations;           \/\/\/ Number of complete iterations so far$/;"	m	class:graphlab::round_robin_scheduler
iterator	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^    typedef bm::bvector<>::enumerator iterator;$/;"	t	struct:graphlab::ss_set
iterator	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^    typedef std::vector<vertex_id_t>::const_iterator iterator;$/;"	t	struct:graphlab::ss_small_set
iterator	src/graphlab/util/synchronized_unordered_map.hpp	/^  typedef typename container::iterator iterator;$/;"	t	class:graphlab::synchronized_unordered_map
iterator_base	src/graphlab/extern/bitmagic/bm.h	/^        iterator_base() : bv_(0), position_(bm::id_max), block_(0) {}$/;"	f	class:bm::bvector::iterator_base
iterator_base	src/graphlab/extern/bitmagic/bm.h	/^    class iterator_base$/;"	c	class:bm::bvector
iterator_category	src/graphlab/extern/bitmagic/bm.h	/^        typedef std::input_iterator_tag  iterator_category;$/;"	t	class:bm::bvector::counted_enumerator
iterator_category	src/graphlab/extern/bitmagic/bm.h	/^        typedef std::input_iterator_tag  iterator_category;$/;"	t	class:bm::bvector::enumerator
iterator_category	src/graphlab/extern/bitmagic/bm.h	/^        typedef std::output_iterator_tag  iterator_category;$/;"	t	class:bm::bvector::insert_iterator
iterator_deserializer	src/graphlab/extern/bitmagic/bmserial.h	/^class iterator_deserializer$/;"	c	namespace:bm
iterator_state	src/graphlab/extern/bitmagic/bmserial.h	/^    enum iterator_state $/;"	g	class:bm::serial_stream_iterator
ivertex_set	src/graphlab.hpp	/^    typedef graphlab::ivertex_set<graph>         ivertex_set;$/;"	t	struct:graphlab::types
ivertex_set	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	/^    ivertex_set() {};$/;"	f	class:graphlab::ivertex_set
ivertex_set	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	/^  class ivertex_set {$/;"	c	namespace:graphlab
ivertex_set_type	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    typedef ivertex_set<Graph> ivertex_set_type;$/;"	t	class:graphlab::execution_plan
ivertex_set_type	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    typedef ivertex_set<Graph> ivertex_set_type;$/;"	t	class:graphlab::set_scheduler
ivertex_set_type	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    typedef ivertex_set<Graph> ivertex_set_type;$/;"	t	class:graphlab::vertex_set
join	src/graphlab/parallel/pthread_tools.cpp	/^  void thread::join(thread& other) {$/;"	f	class:graphlab::thread
join	src/graphlab/parallel/pthread_tools.hpp	/^    void join() {$/;"	f	class:graphlab::thread
join	src/graphlab/parallel/pthread_tools.hpp	/^    void join() {$/;"	f	class:graphlab::thread_group
jumpweight	apps/pagerank/pagerankapp.cpp	/^float jumpweight = 0.1;$/;"	v
justsyncing	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      atomic< int > justsyncing;$/;"	m	struct:graphlab::distributed_fullsweep_sdm::sync_state
keepcost	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	/^  MALLINFO_FIELD_TYPE keepcost; \/* releasable (via malloc_trim) space *\/$/;"	m	struct:mallinfo
key	src/graphlab/distributed/distributed_hash_table.hpp	/^  size_t key; \/\/\/ the key assiciated with this cache entry$/;"	m	class:graphlab::any_lru_list
key	src/graphlab/extern/metis/libmetis/struct.h	/^  double key;$/;"	m	struct:__anon5
key	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype key;$/;"	m	struct:KeyValueType
key_node_hash	src/graphlab/distributed/distributed_hash_table.hpp	/^  inline procid_t key_node_hash(size_t keyval) {$/;"	f	class:graphlab::distributed_hash_table
key_type	src/graphlab/util/synchronized_unordered_map.hpp	/^  typedef size_t key_type;$/;"	t	class:graphlab::synchronized_unordered_map
keys	src/graphlab/parallel/pthread_tools.cpp	/^  static const thread_keys keys;$/;"	m	namespace:graphlab	file:
keys	src/graphlab/util/stl_util.hpp	/^  std::set<Key> keys(const std::map<Key, T>& map) {$/;"	f	namespace:graphlab
keys_as_vector	src/graphlab/util/judy_util.hpp	/^  std::vector<Key> keys_as_vector(const judy_map_kdcell<Key, T>& map) {$/;"	f	namespace:graphlab
keys_as_vector	src/graphlab/util/judy_util.hpp	/^  std::vector<Key> keys_as_vector(const judy_map_m<Key, T, H, L, E>& map) {$/;"	f	namespace:graphlab
keys_as_vector	src/graphlab/util/stl_util.hpp	/^  std::vector<Key> keys_as_vector(const std::map<Key, T>& map) {$/;"	f	namespace:graphlab
keyvalue_lt	src/graphlab/extern/metis/libmetis/myqsort.c	35;"	d	file:
keyvalueboth_lt	src/graphlab/extern/metis/libmetis/myqsort.c	46;"	d	file:
l	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  long l;$/;"	m	struct:win32_mlock_t	file:
l	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  pthread_mutex_t l;$/;"	m	struct:pthread_mlock_t	file:
l	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  volatile unsigned int l;$/;"	m	struct:pthread_mlock_t	file:
l	src/graphlab/parallel/pthread_tools.hpp	/^    mutable volatile rwticket l;$/;"	m	class:graphlab::spinrwlock
l1_residual	apps/pagerank/pagerankapp.cpp	/^double l1_residual(gl_types::graph &g) {$/;"	f
l1_sum	src/graphlab/shared_data/shared_data_ops.hpp	/^    static void l1_sum(size_t index,$/;"	f	struct:graphlab::sync_ops
l2_sum	src/graphlab/shared_data/shared_data_ops.hpp	/^    static void l2_sum(size_t index,$/;"	f	struct:graphlab::sync_ops
l2error	apps/shooting/shooting.cpp	/^double l2error(graph_type& graph, gl_types::vertex_id_t vertexid){ $/;"	f
label	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *label;$/;"	m	struct:graphdef
lambda	apps/image_denoise/gibbs_denoise.cpp	/^  double lambda;$/;"	m	struct:options	file:
lambda	apps/image_denoise/loopybp_denoise.cpp	/^  double lambda;$/;"	m	struct:options	file:
last_alpha	apps/svm/svm.cpp	/^  char last_alpha;$/;"	m	struct:dat_vertex_data	file:
last_block	src/graphlab/extern/bitmagic/bmblocks.h	/^        unsigned last_block() const { return last_idx_; }$/;"	f	class:bm::blocks_manager::block_count_arr_func
last_check_millis	src/graphlab/engine/asynchronous_engine.hpp	/^    size_t last_check_millis;$/;"	m	class:graphlab::asynchronous_engine
last_col	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    std::vector<uint8_t> last_col;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
last_col	src/graphlab/schedulers/sweep_scheduler.hpp	/^    std::vector<uint8_t> last_col;$/;"	m	class:graphlab::sweep_scheduler
last_exec_status	src/graphlab/distributed/distributed_engine.hpp	/^    exec_status last_exec_status() const { $/;"	f	class:graphlab::distributed_engine
last_exec_status	src/graphlab/engine/asynchronous_engine.hpp	/^    exec_status last_exec_status() const {$/;"	f	class:graphlab::asynchronous_engine
last_exec_status	src/graphlab/engine/synchronous_engine.hpp	/^    exec_status last_exec_status() const { $/;"	f	class:graphlab::synchronous_engine
last_id_	src/graphlab/extern/bitmagic/bmserial.h	/^    bm::id_t           last_id_; \/\/\/< Last id from the id list$/;"	m	class:bm::serial_stream_iterator
last_idx_	src/graphlab/extern/bitmagic/bmblocks.h	/^        unsigned   last_idx_;$/;"	m	class:bm::blocks_manager::block_count_arr_func
last_index	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    std::vector<size_t> last_index;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
last_index	src/graphlab/schedulers/sweep_scheduler.hpp	/^    std::vector<size_t> last_index;$/;"	m	class:graphlab::sweep_scheduler
last_nonopt	src/graphlab/extern/metis/GKlib/getopt.c	/^static int last_nonopt;$/;"	v	file:
last_update_count	src/graphlab/core.hpp	/^    size_t last_update_count() {$/;"	f	class:graphlab::core
last_update_count	src/graphlab/distributed/distributed_engine.hpp	/^    size_t last_update_count() const { $/;"	f	class:graphlab::distributed_engine
last_update_count	src/graphlab/engine/asynchronous_engine.hpp	/^    size_t last_update_count() const {$/;"	f	class:graphlab::asynchronous_engine
last_update_count	src/graphlab/engine/sim_thread_engine.hpp	/^    size_t last_update_count() {$/;"	f	class:graphlab::sim_thread_engine
last_update_count	src/graphlab/engine/synchronous_engine.hpp	/^    size_t last_update_count() const { $/;"	f	class:graphlab::synchronous_engine
last_update_count	src/graphlab/engine/threaded_engine.hpp	/^    size_t last_update_count() {$/;"	f	class:graphlab::threaded_engine
lastqueue	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    std::vector<size_t> lastqueue;$/;"	m	class:graphlab::multiqueue_fifo_scheduler
lastqueue	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    std::vector<size_t> lastqueue;$/;"	m	class:graphlab::multiqueue_priority_scheduler
lastreqid	src/graphlab/distributed/graph_lock_manager.hpp	/^    atomic<size_t> lastreqid; \/\/\/ Keep an incremental counter over request ids$/;"	m	class:graphlab::graph_lock_manager
lasttermcheck	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    float lasttermcheck;$/;"	m	class:graphlab::pushy_distributed_engine
lasttermcheck	src/graphlab/engine/sim_thread_engine.hpp	/^    float lasttermcheck;$/;"	m	class:graphlab::sim_thread_engine
lasttermcheck	src/graphlab/engine/synchronous_engine.hpp	/^    float lasttermcheck;$/;"	m	class:graphlab::synchronous_engine
lasttermcheck	src/graphlab/engine/threaded_engine.hpp	/^    size_t lasttermcheck;$/;"	m	class:graphlab::threaded_engine
lasttimercheck	src/graphlab/distributed/distributed_engine.hpp	/^    float lasttimercheck;$/;"	m	class:graphlab::distributed_engine
lastusedval	apps/pagerank/pagerankapp.hpp	/^  float lastusedval;$/;"	m	struct:edge_data
lastusedval	apps/pagerank/tsv_to_graphlab_bin.cpp	/^  float lastusedval;$/;"	m	struct:edge_data	file:
lastwakeup	src/graphlab/util/optimal_termination.hpp	/^    size_t lastwakeup;$/;"	m	class:graphlab::optimal_termination
launch	src/graphlab/parallel/pthread_tools.hpp	/^    void launch(runnable* r) {$/;"	f	class:graphlab::thread_group
launch	src/graphlab/parallel/pthread_tools.hpp	/^    void launch(runnable* r, size_t cpu_id) {$/;"	f	class:graphlab::thread_group
leafid	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype leafid;$/;"	m	struct:__anon3
leafind	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *leafptr, *leafind, *leafwgt; \/* Information as to which partitions are assigned to the leafs *\/$/;"	m	struct:__anon4
leafpart	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *leafpart;                    \/* The leaf-based partitioning vector *\/$/;"	m	struct:__anon4
leafptr	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *leafptr, *leafind, *leafwgt; \/* Information as to which partitions are assigned to the leafs *\/$/;"	m	struct:__anon4
leafwgt	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *leafptr, *leafind, *leafwgt; \/* Information as to which partitions are assigned to the leafs *\/$/;"	m	struct:__anon4
least_addr	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  char*      least_addr;$/;"	m	struct:malloc_state	file:
least_bit	src/graphlab/extern/metis/GKlib/dlmalloc.c	1495;"	d	file:
leaves	src/graphlab/util/sampling_tree.hpp	/^    std::vector< synchronized_queue<std::pair<Data, Priority> > > leaves;$/;"	m	class:graphlab::sampling_tree
left	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype left, right;$/;"	m	struct:__anon3
left	src/graphlab/util/mutable_queue.hpp	/^    size_t left(size_t i) const { $/;"	f	class:graphlab::mutable_queue
left_bits	src/graphlab/extern/metis/GKlib/dlmalloc.c	1498;"	d	file:
left_child	src/graphlab/util/fast_multinomial.hpp	/^    size_t left_child(size_t i) const { return 2 * i + 1; }$/;"	f	class:graphlab::fast_multinomial
leftmost_child	src/graphlab/extern/metis/GKlib/dlmalloc.c	972;"	d	file:
leftshift_for_tree_index	src/graphlab/extern/metis/GKlib/dlmalloc.c	1434;"	d	file:
len	src/graphlab/distributed/dc_packet_headers.hpp	/^  uint32_t len;$/;"	m	struct:graphlab::remotecall_packdata
len	src/graphlab/distributed/dc_packet_headers.hpp	/^  uint32_t len;$/;"	m	struct:graphlab::remotecallx_packdata
len	src/graphlab/distributed/dc_packet_headers.hpp	/^  uint32_t len;$/;"	m	struct:graphlab::remotecallxs_packdata
len	src/graphlab/distributed/distributed_control.hpp	/^    size_t len;$/;"	m	struct:graphlab::distributed_control::dispatch_req_data
len	src/graphlab/distributed/distributed_control.hpp	/^    size_t len;$/;"	m	struct:graphlab::distributed_control::send_req_data
len	src/graphlab/extern/metis/GKlib/gk_struct.h	/^    int len; \/*Number of Residues *\/$/;"	m	struct:__anon15
len	src/graphlab/util/dense_bitset.hpp	/^    size_t len;$/;"	m	class:graphlab::dense_bitset
length	src/graphlab/util/synchronized_circular_queue.hpp	/^    size_t length;    \/\/\/ number of elements in the queue$/;"	m	class:graphlab::synchronized_circular_queue
less	src/graphlab/util/mutable_queue.hpp	/^    bool less(size_t i, size_t j) {$/;"	f	class:graphlab::mutable_queue
lexical_cast	src/graphlab/util/command_line_options.cpp	/^  std::string lexical_cast< std::string >(const std::vector<double>& vec) {$/;"	f	namespace:boost
lexical_cast	src/graphlab/util/command_line_options.cpp	/^  std::string lexical_cast< std::string>(const std::vector<float>& vec) {$/;"	f	namespace:boost
lexical_cast	src/graphlab/util/command_line_options.cpp	/^  std::string lexical_cast< std::string>(const std::vector<int>& vec) {$/;"	f	namespace:boost
lexical_cast	src/graphlab/util/command_line_options.cpp	/^  std::string lexical_cast< std::string>(const std::vector<std::string>& vec) {$/;"	f	namespace:boost
lexical_cast	src/graphlab/util/command_line_options.cpp	/^  std::string lexical_cast<std::string>(const std::vector<size_t>& vec) {$/;"	f	namespace:boost
linear_index	src/graphlab/factors/table_factor.hpp	/^    size_t linear_index() const { return _index; }$/;"	f	class:graphlab::assignment
list	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  char **list;      \/* Pointers to the strbuf for each element *\/$/;"	m	struct:__anon11
listener	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    imonitor_type* listener;$/;"	m	class:graphlab::pushy_distributed_engine
listener	src/graphlab/engine/sim_thread_engine.hpp	/^    imonitor_type* listener;$/;"	m	class:graphlab::sim_thread_engine
listener	src/graphlab/engine/synchronous_engine.hpp	/^    imonitor_type* listener;$/;"	m	class:graphlab::synchronous_engine
listener	src/graphlab/engine/threaded_engine.hpp	/^    imonitor_type* listener;$/;"	m	class:graphlab::threaded_engine
listensock	src/graphlab/distributed/distributed_control.hpp	/^  sockfd_t listensock;$/;"	m	class:graphlab::distributed_control
load	apps/demo/concise_demo.cpp	/^  void load(iarchive& archive) {$/;"	f	struct:vertex_data
load	apps/factor_graph_inference/factor_bp.hpp	/^  void load(graphlab::iarchive& arc) {$/;"	f	struct:edge_data
load	apps/factor_graph_inference/factor_bp.hpp	/^  void load(graphlab::iarchive& arc) {$/;"	f	struct:vertex_data
load	apps/image_denoise/image.hpp	/^  void load(graphlab::iarchive &iarc) {$/;"	f	class:image
load	apps/pagerank/pagerankapp.hpp	/^  void load(graphlab::iarchive &iarc) {$/;"	f	struct:edge_data
load	apps/pagerank/pagerankapp.hpp	/^  void load(graphlab::iarchive &iarc) {$/;"	f	struct:vertex_data
load	apps/svm/svm.cpp	/^  void load(iarchive &arc) {$/;"	f	struct:vertex_data
load	src/graphlab/core.hpp	/^    void load(const std::string& filename) {$/;"	f	class:graphlab::core
load	src/graphlab/core.hpp	/^    void load(iarchive& arc) {$/;"	f	class:graphlab::core
load	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      void load(graphlab::iarchive &iarc) {$/;"	f	struct:graphlab::distributed_fullsweep_sdm::sync_params
load	src/graphlab/distributed/distributed_shared_data.hpp	/^      void load(graphlab::iarchive &iarc) {$/;"	f	struct:graphlab::distributed_shared_data::sync_params
load	src/graphlab/distributed/graph/cloned_graph.hpp	/^    void load(const std::string& filename) {$/;"	f	class:graphlab::cloned_graph
load	src/graphlab/distributed/graph/cloned_graph.hpp	/^    void load(iarchive &arc) {$/;"	f	class:graphlab::cloned_graph
load	src/graphlab/distributed/graph/distributed_graph.hpp	/^    void load(const std::string& filename, distributed_control &_dc) {$/;"	f	class:graphlab::distributed_graph
load	src/graphlab/distributed/graph/distributed_graph.hpp	/^    void load(iarchive &arc) {$/;"	f	class:graphlab::distributed_graph
load	src/graphlab/distributed/lock_manager.hpp	/^  void load(iarchive &arc){$/;"	f	struct:graphlab::lockrequest
load	src/graphlab/distributed/serialize_dispatch.hpp	/^  void load(iarchive &arc) {$/;"	f	struct:graphlab::SERPACKSTRUCT0
load	src/graphlab/distributed/serialize_dispatch.hpp	/^  void load(iarchive &arc) {$/;"	f	struct:graphlab::SERPACKSTRUCT1
load	src/graphlab/distributed/serialize_dispatch.hpp	/^  void load(iarchive &arc) {$/;"	f	struct:graphlab::SERPACKSTRUCT2
load	src/graphlab/distributed/serialize_dispatch.hpp	/^  void load(iarchive &arc) {$/;"	f	struct:graphlab::SERPACKSTRUCT3
load	src/graphlab/distributed/serialize_dispatch.hpp	/^  void load(iarchive &arc) {$/;"	f	struct:graphlab::SERPACKSTRUCT4
load	src/graphlab/distributed/serialize_dispatch.hpp	/^  void load(iarchive &arc) {$/;"	f	struct:graphlab::SERPACKSTRUCT5
load	src/graphlab/distributed/serialize_dispatch.hpp	/^  void load(iarchive &arc) {$/;"	f	struct:graphlab::SERPACKSTRUCT6
load	src/graphlab/engine/engine_options.hpp	/^    void load(iarchive& arc) {$/;"	f	struct:graphlab::engine_options
load	src/graphlab/factors/binary_factor.hpp	/^    void load(iarchive &iarc) {$/;"	f	class:graphlab::binary_factor
load	src/graphlab/factors/table_factor.hpp	/^    void load(iarchive& arc) { arc >> id; arc >> arity; }$/;"	f	struct:graphlab::variable
load	src/graphlab/factors/table_factor.hpp	/^    void load(iarchive& arc) {$/;"	f	class:graphlab::assignment
load	src/graphlab/factors/table_factor.hpp	/^    void load(iarchive& arc) {$/;"	f	class:graphlab::domain
load	src/graphlab/factors/table_factor.hpp	/^    void load(iarchive& arc) {$/;"	f	class:graphlab::table_factor
load	src/graphlab/factors/unary_factor.hpp	/^    void load(iarchive &iarc) {$/;"	f	class:graphlab::unary_factor
load	src/graphlab/graph/graph.hpp	/^      void load(iarchive& arc) {$/;"	f	class:graphlab::graph::edge
load	src/graphlab/graph/graph.hpp	/^    void load(const std::string& filename) {$/;"	f	class:graphlab::graph
load	src/graphlab/graph/graph.hpp	/^    void load(iarchive& arc) {$/;"	f	class:graphlab::graph
load	src/graphlab/serialization/unsupported_serialize.hpp	/^    void load(iarchive& archive) {$/;"	f	struct:graphlab::unsupported_serialize
load	src/graphlab/util/dense_bitset.hpp	/^    inline void load(iarchive& iarc) {$/;"	f	class:graphlab::dense_bitset
load	src/graphlab/util/dense_bitset.hpp	/^    inline void load(iarchive& iarc) {$/;"	f	class:graphlab::fixed_dense_bitset
load	src/graphlab/util/generics/any.hpp	/^      void load(iarchive &arc) {$/;"	f	class:graphlab::any::holder
load	src/graphlab/util/generics/any.hpp	/^    void load(iarchive &arc) {$/;"	f	class:graphlab::any
load	src/graphlab/util/generics/blob.hpp	/^    void load(iarchive& arc) {$/;"	f	class:graphlab::blob
loadGraph	apps/pagerank/pagerankapp.cpp	/^void pagerankapp::loadGraph(std::string filename) {$/;"	f	class:pagerankapp
load_alchemy	apps/factor_graph_inference/factor_graph.hpp	/^  void load_alchemy(const std::string& filename) {$/;"	f	class:factor_graph
load_gabp_graph	apps/gabp/gabp.cpp	/^void load_gabp_graph(const char* filename, graph_type& graph) {$/;"	f
load_gabp_graph2	apps/gabp/gabp.cpp	/^void load_gabp_graph2(const char* filename, graph_type& graph) {$/;"	f
load_graph	apps/concomp/concomp.cpp	/^bool load_graph(const std::string filename,$/;"	f
load_graph	apps/concomp/lock_concomp.cpp	/^bool load_graph(const std::string filename,$/;"	f
load_graph	apps/concomp/rlx_concomp.cpp	/^bool load_graph(const std::string filename,$/;"	f
load_graph	apps/concomp/seq_concomp.cpp	/^bool load_graph(const std::string filename,$/;"	f
load_graph	apps/concomp/sync_concomp.cpp	/^bool load_graph(const std::string filename,$/;"	f
load_graph	apps/pagerank/pagerank.cpp	/^bool load_graph(const std::string filename,$/;"	f
load_graph	apps/pagerank/sync_pagerank.cpp	/^bool load_graph(const std::string filename,$/;"	f
load_id_list	src/graphlab/extern/bitmagic/bmserial.h	/^void iterator_deserializer<BV, SerialIterator>::load_id_list($/;"	f	class:bm::iterator_deserializer
load_or_fail	src/graphlab/serialization/iarchive.hpp	/^  load_or_fail(iarchive& o, ValueType &t) { $/;"	f	namespace:graphlab::iarchive_detail
loc	apps/image_denoise/image.hpp	/^std::pair<size_t, size_t> image::loc(size_t vertexid) const {$/;"	f	class:image
local_to_global_eid	src/graphlab/distributed/graph/cloned_graph.hpp	/^    edge_id_t local_to_global_eid(edge_id_t e) {$/;"	f	class:graphlab::cloned_graph
local_to_global_eid	src/graphlab/distributed/graph/distributed_graph.hpp	/^    edge_id_t local_to_global_eid(const edge_id_t &e) const{$/;"	f	class:graphlab::distributed_graph
localid	src/graphlab/util/generics/any.hpp	/^      static uint64_t localid;  \/\/ cached id of this type. Avoids rehashing everything I serialize$/;"	m	class:graphlab::any::any_registration
localid	src/graphlab/util/generics/any.hpp	/^  template<typename T> uint64_t any::any_registration<T>::localid; $/;"	m	class:graphlab::any::any_registration
localport	src/graphlab/distributed/distributed_control.hpp	/^  size_t localport;$/;"	m	class:graphlab::distributed_control
locator	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  int *locator;$/;"	m	struct:__anon8
locator	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *locator;$/;"	m	struct:PQueueType
lock	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      mutex lock; \/\/ not really used at all$/;"	m	struct:graphlab::distributed_fullsweep_sdm::sync_task
lock	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      mutex lock;$/;"	m	struct:graphlab::distributed_fullsweep_sdm::sync_state
lock	src/graphlab/distributed/distributed_shared_data.hpp	/^      mutex lock; \/\/ not really used at all$/;"	m	struct:graphlab::distributed_shared_data::sync_task
lock	src/graphlab/distributed/distributed_shared_data.hpp	/^      mutex lock;$/;"	m	struct:graphlab::distributed_shared_data::sync_state
lock	src/graphlab/distributed/graph_lock_manager.hpp	/^      mutex lock;$/;"	m	struct:graphlab::graph_lock_manager::block_request
lock	src/graphlab/distributed/graph_lock_manager.hpp	/^      mutex lock;$/;"	m	struct:graphlab::graph_lock_manager::request_descriptor
lock	src/graphlab/distributed/lock_manager.hpp	/^    mutex lock;  \/\/\/  the lock on this lockset$/;"	m	struct:graphlab::distributed_lock_manager::lock_descriptor
lock	src/graphlab/distributed/lock_manager.hpp	/^  inline bool lock(const vertex_id_t &v, const lock_type &locktype) {$/;"	f	class:graphlab::distributed_lock_manager
lock	src/graphlab/parallel/pthread_tools.hpp	/^    inline void lock() const { $/;"	f	class:graphlab::spinlock
lock	src/graphlab/parallel/pthread_tools.hpp	/^    inline void lock() const {$/;"	f	class:graphlab::mutex
lock	src/graphlab/shared_data/thread_shared_data.hpp	/^      mutex lock;$/;"	m	struct:graphlab::thread_shared_data::sync_task
lock	src/graphlab/shared_data/thread_shared_data.hpp	/^      rwlock lock;$/;"	m	struct:graphlab::thread_shared_data::atomic_entry
lock	src/graphlab/util/synchronized_unordered_map.hpp	/^   std::vector<rwlock> lock; $/;"	m	class:graphlab::synchronized_unordered_map
lock_block_id	src/graphlab/distributed/distributed_engine.hpp	/^    size_t lock_block_id;$/;"	m	class:graphlab::distributed_engine
lock_descriptor	src/graphlab/distributed/lock_manager.hpp	/^  struct lock_descriptor{$/;"	s	class:graphlab::distributed_lock_manager
lock_manager	src/graphlab/distributed/distributed_engine.hpp	/^    graph_lock_manager<Graph> lock_manager;$/;"	m	class:graphlab::distributed_engine
lock_manager_target	src/graphlab/distributed/lock_manager.hpp	/^  static distributed_lock_manager* lock_manager_target;$/;"	m	class:graphlab::distributed_lock_manager
lock_manager_target	src/graphlab/distributed/lock_manager.hpp	/^distributed_lock_manager<Graph>* distributed_lock_manager<Graph>::lock_manager_target;$/;"	m	class:graphlab::distributed_lock_manager
lock_response	src/graphlab/distributed/graph_lock_manager.hpp	/^  static void lock_response(distributed_control& dc, size_t source,$/;"	f	class:graphlab::graph_lock_manager
lock_response_handler	src/graphlab/distributed/lock_manager.hpp	/^  typedef void (*lock_response_handler)(distributed_control& dc, size_t source,$/;"	t	class:graphlab::distributed_lock_manager
lock_send_request_thread	src/graphlab/distributed/graph_lock_manager.hpp	/^      lock_send_request_thread(graph_lock_manager<Graph> &glm):thread(NULL, 0), $/;"	f	class:graphlab::graph_lock_manager::lock_send_request_thread
lock_send_request_thread	src/graphlab/distributed/graph_lock_manager.hpp	/^    class lock_send_request_thread:public thread {$/;"	c	class:graphlab::graph_lock_manager
lock_type	src/graphlab/distributed/lock_manager.hpp	/^enum lock_type{$/;"	g	namespace:graphlab
lockblockid	src/graphlab/distributed/distributed_shared_data.hpp	/^      size_t lockblockid;$/;"	m	struct:graphlab::distributed_shared_data::sync_state
locked_pending_queue_type	src/graphlab/distributed/distributed_engine.hpp	/^    typedef std::pair<mutex, std::queue<update_task_type> > locked_pending_queue_type;$/;"	t	class:graphlab::distributed_engine
lockindex	src/graphlab/distributed/lock_manager.hpp	/^    size_t lockindex; \/\/\/ inndex of the last unfulfilled lock$/;"	m	struct:graphlab::distributed_lock_manager::lock_descriptor
locking_thread	src/graphlab/distributed/graph_lock_manager.hpp	/^    lock_send_request_thread *locking_thread;$/;"	m	class:graphlab::graph_lock_manager
lockqueue_locks	src/graphlab/distributed/lock_manager.hpp	/^  std::vector<mutex> lockqueue_locks;$/;"	m	class:graphlab::distributed_lock_manager
lockrequest	src/graphlab/distributed/lock_manager.hpp	/^  lockrequest() {}$/;"	f	struct:graphlab::lockrequest
lockrequest	src/graphlab/distributed/lock_manager.hpp	/^  lockrequest(vertex_id_t vertex, lock_type locktype):$/;"	f	struct:graphlab::lockrequest
lockrequest	src/graphlab/distributed/lock_manager.hpp	/^struct lockrequest{$/;"	s	namespace:graphlab
lockrequests	src/graphlab/distributed/lock_manager.hpp	/^    std::vector<lockrequest> lockrequests;  \/\/\/ sequence of locks to fulfill$/;"	m	struct:graphlab::distributed_lock_manager::lock_descriptor
locks	src/graphlab/distributed/lock_manager.hpp	/^  std::vector<distrwlock> locks;$/;"	m	class:graphlab::distributed_lock_manager
locks	src/graphlab/schedulers/sampling_scheduler.hpp	/^    std::vector<spinlock> locks;$/;"	m	class:graphlab::sampling_scheduler
locks	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    std::vector<mutex> locks;$/;"	m	class:graphlab::any_inedge_set
locks	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    std::vector<spinlock> locks;$/;"	m	class:graphlab::multinomial_vertex_set
locks	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    std::vector<spinlock> locks;$/;"	m	class:graphlab::restricted_vertex_set
locks	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    std::vector<spinlock> locks;$/;"	m	class:graphlab::vertex_set
locks	src/graphlab/schedulers/support/vertex_task_set.hpp	/^    std::vector<spinlock> locks;$/;"	m	class:graphlab::vertex_task_set
locks	src/graphlab/scope/general_scope_factory.hpp	/^    std::vector<rwlock> locks;$/;"	m	class:graphlab::general_scope_factory
locks	src/graphlab/util/prioritized_multiqueue.hpp	/^    std::vector<spinlock> locks;$/;"	m	class:graphlab::prioritized_multiqueue
locks	src/graphlab/util/sampling_tree.hpp	/^    std::vector<spinlock> locks;$/;"	m	class:graphlab::sampling_tree
locks	src/graphlab/util/synchronized_multiqueue.hpp	/^    std::vector<spinlock> locks;$/;"	m	class:graphlab::synchronized_multiqueue
locks_ready	src/graphlab/distributed/graph_lock_manager.hpp	/^  bool locks_ready(const size_t &reqid) const {$/;"	f	class:graphlab::graph_lock_manager
locktype	src/graphlab/distributed/lock_manager.hpp	/^  lock_type locktype;$/;"	m	struct:graphlab::lockrequest
logP	src/graphlab/factors/binary_factor.hpp	/^    const double& logP(uint16_t asg1, uint16_t asg2) const {$/;"	f	class:graphlab::binary_factor
logP	src/graphlab/factors/binary_factor.hpp	/^    const double& logP(uint32_t x1, uint16_t asg1,$/;"	f	class:graphlab::binary_factor
logP	src/graphlab/factors/binary_factor.hpp	/^    double& logP(uint16_t asg1, uint16_t asg2) {$/;"	f	class:graphlab::binary_factor
logP	src/graphlab/factors/binary_factor.hpp	/^    double& logP(uint32_t x1, uint16_t asg1,$/;"	f	class:graphlab::binary_factor
logP	src/graphlab/factors/table_factor.hpp	/^    const double& logP(const assignment_type& asg) const {$/;"	f	class:graphlab::table_factor
logP	src/graphlab/factors/table_factor.hpp	/^    const double& logP(size_t index) const {$/;"	f	class:graphlab::table_factor
logP	src/graphlab/factors/table_factor.hpp	/^    double& logP(const assignment_type& asg) {$/;"	f	class:graphlab::table_factor
logP	src/graphlab/factors/table_factor.hpp	/^    double& logP(size_t index) {$/;"	f	class:graphlab::table_factor
logP	src/graphlab/factors/unary_factor.hpp	/^    inline const double& logP(size_t asg) const {$/;"	f	class:graphlab::unary_factor
logP	src/graphlab/factors/unary_factor.hpp	/^    inline double& logP(size_t asg) {$/;"	f	class:graphlab::unary_factor
log_file	src/graphlab/logger/logger.hpp	/^  std::string log_file;$/;"	m	class:file_logger
log_level	src/graphlab/logger/logger.hpp	/^  int log_level;$/;"	m	class:file_logger
log_to_console	src/graphlab/logger/logger.hpp	/^  bool log_to_console;$/;"	m	class:file_logger
logbuf	src/graphlab/logger/logger.hpp	65;"	d
logbuf	src/graphlab/logger/logger.hpp	72;"	d
logger	src/graphlab/logger/assertions.hpp	135;"	d
logger	src/graphlab/logger/logger.hpp	64;"	d
logger	src/graphlab/logger/logger.hpp	68;"	d
logoutput	src/graphlab/schedulers/support/unused_scheduler_callback.hpp	/^    bool logoutput;$/;"	m	class:graphlab::unused_scheduler_callback
logstream	src/graphlab/logger/logger.hpp	66;"	d
logstream	src/graphlab/logger/logger.hpp	75;"	d
lowres_time_millis	src/graphlab/util/timer.cpp	/^  size_t lowres_time_millis() {$/;"	f	namespace:graphlab
lowres_time_seconds	src/graphlab/util/timer.cpp	/^  float lowres_time_seconds() {$/;"	f	namespace:graphlab
lru_list_type	src/graphlab/distributed/distributed_hash_table.hpp	/^  typedef boost::intrusive::list<any_lru_list, MemberOption, boost::intrusive::constant_time_size<false> > lru_list_type;$/;"	t	class:graphlab::distributed_hash_table
lru_member_hook_type	src/graphlab/distributed/distributed_hash_table.hpp	/^                                                          lru_member_hook_type;$/;"	t	class:graphlab::any_lru_list
lruage	src/graphlab/distributed/distributed_hash_table.hpp	/^  lru_list_type lruage; \/\/\/ THe LRU linked list associated with the cache$/;"	m	class:graphlab::distributed_hash_table
m	apps/gabp/gabp.cpp	/^  uint32_t m = 0; \/\/ number of cols of A (only used for non square matrix. In squre matrix the number is n)$/;"	v
m	src/graphlab/parallel/pthread_tools.hpp	/^    mutex m;$/;"	m	class:graphlab::barrier
m	src/graphlab/util/shared_termination.hpp	/^    mutex m;$/;"	m	class:graphlab::shared_termination
m_active	src/graphlab/parallel/pthread_tools.hpp	/^    bool m_active;$/;"	m	class:graphlab::thread
m_alive	src/graphlab/util/blocking_queue.hpp	/^    bool m_alive;$/;"	m	class:graphlab::blocking_queue
m_barrier	src/graphlab/parallel/pthread_tools.hpp	/^    mutable pthread_barrier_t m_barrier;$/;"	m	class:graphlab::barrier
m_buf	src/graphlab/extern/bitmagic/bmvmin.h	/^    bm::word_t   m_buf[BM_MINISET_ARRSIZE(N)];$/;"	m	class:bm::bvmini
m_buf	src/graphlab/extern/bitmagic/bmvmin.h	/^    bm::word_t*   m_buf;      \/\/!< Buffer pointer$/;"	m	class:bm::miniset
m_buf	src/graphlab/extern/bitmagic/bmvmin.h	/^    bm::word_t*   m_buf;$/;"	m	class:bm::bvector_mini
m_cond	src/graphlab/parallel/pthread_tools.hpp	/^    mutable pthread_cond_t  m_cond;$/;"	m	class:graphlab::conditional
m_conditional	src/graphlab/util/blocking_queue.hpp	/^    conditional m_conditional;$/;"	m	class:graphlab::blocking_queue
m_empty_conditional	src/graphlab/util/blocking_queue.hpp	/^    conditional m_empty_conditional;$/;"	m	class:graphlab::blocking_queue
m_mut	src/graphlab/parallel/pthread_tools.hpp	/^    mutable pthread_mutex_t m_mut;$/;"	m	class:graphlab::mutex
m_mutex	src/graphlab/util/blocking_queue.hpp	/^    mutex m_mutex;$/;"	m	class:graphlab::blocking_queue
m_p_thread	src/graphlab/parallel/pthread_tools.hpp	/^    pthread_t m_p_thread;$/;"	m	class:graphlab::thread
m_queue	src/graphlab/util/blocking_queue.hpp	/^    queue_type m_queue;$/;"	m	class:graphlab::blocking_queue
m_runnable	src/graphlab/parallel/pthread_tools.hpp	/^      runnable* m_runnable;$/;"	m	struct:graphlab::thread::invoke_args
m_runnable	src/graphlab/parallel/pthread_tools.hpp	/^    runnable* m_runnable;$/;"	m	class:graphlab::thread
m_rwlock	src/graphlab/parallel/pthread_tools.hpp	/^    mutable pthread_rwlock_t m_rwlock;$/;"	m	class:graphlab::rwlock
m_sem	src/graphlab/parallel/pthread_tools.hpp	/^    mutable sem_t  m_sem;$/;"	m	class:graphlab::semaphore
m_size	src/graphlab/extern/bitmagic/bmvmin.h	/^    unsigned      m_size;$/;"	m	class:bm::bvector_mini
m_spin	src/graphlab/parallel/pthread_tools.hpp	/^    mutable pthread_spinlock_t m_spin;$/;"	m	class:graphlab::spinlock
m_stack_size	src/graphlab/parallel/pthread_tools.hpp	/^    size_t m_stack_size;$/;"	m	class:graphlab::thread
m_thread_counter	src/graphlab/parallel/pthread_tools.hpp	/^    size_t m_thread_counter;$/;"	m	class:graphlab::thread_group
m_thread_id	src/graphlab/parallel/pthread_tools.hpp	/^      size_t m_thread_id;$/;"	m	struct:graphlab::thread::invoke_args
m_thread_id	src/graphlab/parallel/pthread_tools.hpp	/^    size_t m_thread_id;$/;"	m	class:graphlab::thread
m_threads	src/graphlab/parallel/pthread_tools.hpp	/^    std::list< thread > m_threads;$/;"	m	class:graphlab::thread_group
m_type	src/graphlab/extern/bitmagic/bmvmin.h	/^    unsigned      m_type;     \/\/!< buffer type (0-bit, 1-gap)$/;"	m	class:bm::miniset
magic	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  size_t     magic;$/;"	m	struct:malloc_state	file:
magic	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  size_t magic;$/;"	m	struct:malloc_params	file:
magic_init_mutex	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static MLOCK_T magic_init_mutex = NULL_LOCK_INITIALIZER;$/;"	v	file:
magic_init_mutex	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static MLOCK_T magic_init_mutex = {0, 0 };$/;"	v	file:
magic_init_mutex	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static MLOCK_T magic_init_mutex = {0, 0, 0 };$/;"	v	file:
magic_init_mutex	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static MLOCK_T magic_init_mutex = {0, PTHREAD_MUTEX_INITIALIZER };$/;"	v	file:
magic_init_mutex	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static MLOCK_T magic_init_mutex;$/;"	v	file:
main	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f
main	CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	apps/concomp/concomp.cpp	/^int main(int argc, char** argv) {$/;"	f
main	apps/concomp/lock_concomp.cpp	/^int main(int argc, char** argv) {$/;"	f
main	apps/concomp/rlx_concomp.cpp	/^int main(int argc, char** argv) {$/;"	f
main	apps/concomp/seq_concomp.cpp	/^int main(int argc, char** argv) {$/;"	f
main	apps/concomp/sync_concomp.cpp	/^int main(int argc, char** argv) {$/;"	f
main	apps/demo/concise_demo.cpp	/^int main(int argc,  char *argv[]) {$/;"	f
main	apps/demo/demo.cpp	/^int main(int argc,  char *argv[]) {$/;"	f
main	apps/factor_graph_inference/alchemy_to_bp_parser.cpp	/^int main(int argc, char** argv) {$/;"	f
main	apps/factor_graph_inference/belief_diff.cpp	/^int main(int argc, char** argv) {$/;"	f
main	apps/factor_graph_inference/factor_bp.cpp	/^int main(int argc, char** argv) {$/;"	f
main	apps/factor_graph_inference/factor_gibbs.cpp	/^int main(int argc, char** argv) {$/;"	f
main	apps/gabp/gabp.cpp	/^int main(int argc,  char *argv[]) {$/;"	f
main	apps/image_denoise/gibbs_denoise.cpp	/^int main(int argc, char** argv) {$/;"	f
main	apps/image_denoise/loopybp_denoise.cpp	/^int main(int argc, char** argv) {$/;"	f
main	apps/pagerank/pagerank.cpp	/^int main(int argc, char** argv) {$/;"	f
main	apps/pagerank/sync_pagerank.cpp	/^int main(int argc, char** argv) {$/;"	f
main	apps/pagerank/tsv_to_graphlab_bin.cpp	/^int main(int argc, char** argv) {$/;"	f
main	apps/shooting/shooting.cpp	/^int main(int argc, char** argv) {$/;"	f
main	apps/svm/svm.cpp	/^int main(int argc,  char *argv[]) {$/;"	f
main	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f
main	debug/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	debug/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f
main	profile/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	profile/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f
main	release/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	release/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
make_bit_block	src/graphlab/extern/bitmagic/bmblocks.h	/^    bm::word_t* make_bit_block(unsigned nb)$/;"	f	class:bm::blocks_manager
make_bp_graph	apps/factor_graph_inference/factor_bp.hpp	/^void make_bp_graph(const factor_graph& fgraph,$/;"	f
make_end	src/graphlab/factors/table_factor.hpp	/^    void make_end() {$/;"	f	class:graphlab::assignment
make_gibbs_graph	apps/factor_graph_inference/factor_gibbs.hpp	/^void make_gibbs_graph(const factor_graph& fgraph,$/;"	f
make_graph	apps/pagerank/tsv_to_graphlab_bin.cpp	/^void make_graph(const std::vector<tripple>& data,$/;"	f
make_identity_map	src/graphlab/util/stl_util.hpp	/^  std::map<Key, Key> make_identity_map(const std::set<Key>& keys) {$/;"	f	namespace:graphlab
mallinfo	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	/^struct mallinfo {$/;"	s
malloc_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^struct malloc_chunk {$/;"	s	file:
malloc_corruption_error_count	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^int malloc_corruption_error_count;$/;"	v
malloc_getpagesize	src/graphlab/extern/metis/GKlib/dlmalloc.c	144;"	d	file:
malloc_getpagesize	src/graphlab/extern/metis/GKlib/dlmalloc.c	148;"	d	file:
malloc_getpagesize	src/graphlab/extern/metis/GKlib/dlmalloc.c	151;"	d	file:
malloc_getpagesize	src/graphlab/extern/metis/GKlib/dlmalloc.c	157;"	d	file:
malloc_getpagesize	src/graphlab/extern/metis/GKlib/dlmalloc.c	161;"	d	file:
malloc_getpagesize	src/graphlab/extern/metis/GKlib/dlmalloc.c	163;"	d	file:
malloc_getpagesize	src/graphlab/extern/metis/GKlib/dlmalloc.c	167;"	d	file:
malloc_getpagesize	src/graphlab/extern/metis/GKlib/dlmalloc.c	170;"	d	file:
malloc_getpagesize	src/graphlab/extern/metis/GKlib/dlmalloc.c	172;"	d	file:
malloc_params	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^struct malloc_params {$/;"	s	file:
malloc_segment	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^struct malloc_segment {$/;"	s	file:
malloc_state	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^struct malloc_state {$/;"	s	file:
malloc_tree_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^struct malloc_tree_chunk {$/;"	s	file:
map_difference	src/graphlab/util/stl_util.hpp	/^  map_difference(const std::map<Key, T>& a,$/;"	f	namespace:graphlab
map_intersect	src/graphlab/util/stl_util.hpp	/^  map_intersect(const std::map<Key, T>& a,$/;"	f	namespace:graphlab
map_intersect	src/graphlab/util/stl_util.hpp	/^  map_intersect(const std::map<Key, T>& m,$/;"	f	namespace:graphlab
map_type	src/graphlab/distributed/distributed_hash_table.hpp	/^  typedef synchronized_unordered_map<std::pair<rwlock, any> > map_type;$/;"	t	class:graphlab::distributed_hash_table
map_union	src/graphlab/util/stl_util.hpp	/^  map_union(const std::map<Key, T>& a,$/;"	f	namespace:graphlab
mapid	src/graphlab/distributed/distributed_hash_table.hpp	/^  size_t mapid;$/;"	m	class:graphlab::distributed_hash_table
mapreplydata	src/graphlab/distributed/distributed_hash_table.hpp	/^  struct mapreplydata{$/;"	s	class:graphlab::distributed_hash_table
marginalize	src/graphlab/factors/table_factor.hpp	/^    inline void marginalize(const table_factor& joint) {$/;"	f	class:graphlab::table_factor
mark_inuse_foot	src/graphlab/extern/metis/GKlib/dlmalloc.c	1572;"	d	file:
mark_inuse_foot	src/graphlab/extern/metis/GKlib/dlmalloc.c	1591;"	d	file:
mark_smallmap	src/graphlab/extern/metis/GKlib/dlmalloc.c	1450;"	d	file:
mark_treemap	src/graphlab/extern/metis/GKlib/dlmalloc.c	1454;"	d	file:
max	apps/image_denoise/image.hpp	/^  double max() {$/;"	f	class:image
max	src/graphlab/extern/metis/libmetis/struct.h	/^  float max[2][MAXNCON];$/;"	m	struct:vpwgtdef
max	src/graphlab/shared_data/shared_data_ops.hpp	/^    static void max(size_t index,$/;"	f	struct:graphlab::sync_ops
max	src/graphlab/util/fast_multinomial.hpp	/^    void max(size_t asg, float_t value) {$/;"	f	class:graphlab::fast_multinomial
max_asg	src/graphlab/factors/table_factor.hpp	/^    inline assignment_type max_asg() const {$/;"	f	class:graphlab::table_factor
max_asg	src/graphlab/factors/unary_factor.hpp	/^    inline size_t max_asg() const {  $/;"	f	class:graphlab::unary_factor
max_back_log	src/graphlab/distributed/distributed_engine.hpp	/^    size_t max_back_log;$/;"	m	class:graphlab::distributed_engine
max_bit_	src/graphlab/extern/bitmagic/bm.h	/^        bm::id_t                  max_bit_;$/;"	m	class:bm::bvector::insert_iterator
max_footprint	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  size_t     max_footprint;$/;"	m	struct:malloc_state	file:
max_iterations	src/graphlab/schedulers/colored_scheduler.hpp	/^    size_t max_iterations;$/;"	m	class:graphlab::colored_scheduler
max_key_value	src/graphlab/util/sampling_tree.hpp	/^    size_t max_key_value;$/;"	m	class:graphlab::sampling_tree
max_range	src/graphlab/shared_data/thread_shared_data.hpp	/^      size_t max_range;$/;"	m	struct:graphlab::thread_shared_data::sync_task
max_serialize_mem	src/graphlab/extern/bitmagic/bmfunc.h	/^    unsigned max_serialize_mem;$/;"	m	struct:bm::bv_statistics
maxcache	src/graphlab/distributed/distributed_hash_table.hpp	/^  size_t maxcache;     \/\/\/ Maximum cache size allowed$/;"	m	class:graphlab::distributed_hash_table
maxcore	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype maxcore, ccore;$/;"	m	struct:workspacedef
maxgain	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype maxgain;$/;"	m	struct:PQueueType
maximum_backlog	src/graphlab/distributed/distributed_engine.hpp	/^    size_t maximum_backlog;$/;"	m	class:graphlab::distributed_engine
maxiterations	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  size_t maxiterations;               \/\/\/ maximum number of iterations$/;"	m	class:graphlab::distributed_round_robin_scheduler
maxiterations	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  size_t maxiterations;               \/\/\/ maximum number of iterations$/;"	m	class:graphlab::distributed_round_robin_scheduler2
maxiterations	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    size_t maxiterations;               \/\/\/ maximum number of iterations$/;"	m	class:graphlab::round_robin_scheduler
maxnodes	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  int maxnodes;$/;"	m	struct:__anon8
maxnodes	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype maxnodes;$/;"	m	struct:PQueueType
maxvwgt	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype maxvwgt;			\/* The maximum allowed weight for a vertex *\/$/;"	m	struct:controldef
mchunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^typedef struct malloc_chunk  mchunk;$/;"	t	typeref:struct:malloc_chunk	file:
mchunkptr	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^typedef struct malloc_chunk* mchunkptr;$/;"	t	typeref:struct:malloc_chunk	file:
mean	apps/gabp/gabp.cpp	/^  sdouble mean; \/\/ message \\mu_ij$/;"	m	struct:edge_data	file:
mem2chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	781;"	d	file:
mem_alloc	src/graphlab/extern/bitmagic/bmalloc.h	/^    mem_alloc(const BA& block_alloc = BA(), const PA& ptr_alloc = PA())$/;"	f	class:bm::mem_alloc
mem_alloc	src/graphlab/extern/bitmagic/bmalloc.h	/^template<class BA, class PA> class mem_alloc$/;"	c	namespace:bm
mem_save_set	src/graphlab/extern/bitmagic/bm.h	/^typedef bm::miniset<bm::block_allocator, bm::set_total_blocks> mem_save_set;$/;"	t	namespace:bm
mem_used	src/graphlab/extern/bitmagic/bmblocks.h	/^    unsigned mem_used() const$/;"	f	class:bm::blocks_manager
mem_used	src/graphlab/extern/bitmagic/bmvmin.h	/^    unsigned mem_used() const$/;"	f	class:bm::bvector_mini
mem_used	src/graphlab/extern/bitmagic/bmvmin.h	/^    unsigned mem_used() const$/;"	f	class:bm::bvmini
mem_used	src/graphlab/extern/bitmagic/bmvmin.h	/^    unsigned mem_used() const$/;"	f	class:bm::miniset
member_hook_	src/graphlab/distributed/distributed_hash_table.hpp	/^  lru_member_hook_type member_hook_;$/;"	m	class:graphlab::any_lru_list
memory_reads	apps/pagerank/pagerankapp.cpp	/^size_t memory_reads = 0;$/;"	v
memory_used	src/graphlab/extern/bitmagic/bmfunc.h	/^    unsigned  memory_used;$/;"	m	struct:bm::bv_statistics
mengine	src/graphlab/core.hpp	/^    typename types::iengine *mengine;$/;"	m	class:graphlab::core
meopts	src/graphlab/core.hpp	/^    engine_options meopts;$/;"	m	class:graphlab::core
merge_and_apply	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^   void merge_and_apply(size_t index) {$/;"	f	class:graphlab::distributed_fullsweep_sdm
merge_fun	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      merge_function_type merge_fun;$/;"	m	struct:graphlab::distributed_fullsweep_sdm::sync_params
merge_fun	src/graphlab/distributed/distributed_shared_data.hpp	/^      merge_function_type merge_fun;$/;"	m	struct:graphlab::distributed_shared_data::sync_params
merge_function_type	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    typedef typename base::merge_function_type merge_function_type;$/;"	t	class:graphlab::distributed_fullsweep_sdm
merge_function_type	src/graphlab/distributed/distributed_shared_data.hpp	/^    typedef typename base::merge_function_type merge_function_type;$/;"	t	class:graphlab::distributed_shared_data
merge_function_type	src/graphlab/shared_data/ishared_data.hpp	/^    typedef void(*merge_function_type)(size_t index,$/;"	t	class:graphlab::ishared_data
mergeacc	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      any mergeacc; \/\/ only used if merge_fun is set$/;"	m	struct:graphlab::distributed_fullsweep_sdm::sync_state
mergeacc	src/graphlab/distributed/distributed_shared_data.hpp	/^      any mergeacc; \/\/ only used if merge_fun is set$/;"	m	struct:graphlab::distributed_shared_data::sync_state
mergectr	src/graphlab/distributed/distributed_shared_data.hpp	/^      size_t mergectr;$/;"	m	struct:graphlab::distributed_shared_data::sync_state
mergelock	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      mutex mergelock;$/;"	m	struct:graphlab::distributed_fullsweep_sdm::sync_state
mergewaiting	src/graphlab/distributed/distributed_shared_data.hpp	/^      bool mergewaiting;$/;"	m	struct:graphlab::distributed_shared_data::sync_state
message	apps/factor_graph_inference/factor_bp.hpp	/^  factor_type message;$/;"	m	struct:edge_data
message	apps/image_denoise/loopybp_denoise.cpp	/^  graphlab::unary_factor message;$/;"	m	struct:edge_data	file:
message_dispatch_thread	src/graphlab/distributed/distributed_control.hpp	/^    message_dispatch_thread(distributed_control &dc):dc(dc) { }$/;"	f	class:graphlab::distributed_control::message_dispatch_thread
message_dispatch_thread	src/graphlab/distributed/distributed_control.hpp	/^  class message_dispatch_thread:public thread {$/;"	c	class:graphlab::distributed_control
messageproc_thread	src/graphlab/distributed/dc_receive.cpp	/^distributed_control::messageproc_thread::messageproc_thread() {$/;"	f	class:graphlab::distributed_control::messageproc_thread
messageproc_thread	src/graphlab/distributed/distributed_control.hpp	/^  class messageproc_thread :public runnable {$/;"	c	class:graphlab::distributed_control
messages	src/graphlab/logger/logger.cpp	/^const char* messages[] = {  "INFO   ",$/;"	v
metis	src/graphlab/extern/metis/metis.hpp	/^namespace metis {$/;"	n
metis_edgend	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_edgend(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *numflag, idxtype *options, idxtype *perm, idxtype *iperm)$/;"	f
metis_edgend_	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_edgend_(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *numflag, idxtype *options, idxtype *perm, idxtype *iperm)$/;"	f
metis_edgend__	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_edgend__(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *numflag, idxtype *options, idxtype *perm, idxtype *iperm)$/;"	f
metis_estimatememory	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_estimatememory(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *numflag, idxtype *optype, idxtype *nbytes)$/;"	f
metis_estimatememory_	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_estimatememory_(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *numflag, idxtype *optype, idxtype *nbytes)$/;"	f
metis_estimatememory__	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_estimatememory__(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *numflag, idxtype *optype, idxtype *nbytes)$/;"	f
metis_mcpartgraphkway	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_mcpartgraphkway(idxtype *nvtxs, idxtype *ncon, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, float *rubvec, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
metis_mcpartgraphkway_	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_mcpartgraphkway_(idxtype *nvtxs, idxtype *ncon, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, float *rubvec, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
metis_mcpartgraphkway__	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_mcpartgraphkway__(idxtype *nvtxs, idxtype *ncon, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, float *rubvec, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
metis_mcpartgraphrecursive	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_mcpartgraphrecursive(idxtype *nvtxs, idxtype *ncon, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
metis_mcpartgraphrecursive_	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_mcpartgraphrecursive_(idxtype *nvtxs, idxtype *ncon, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
metis_mcpartgraphrecursive__	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_mcpartgraphrecursive__(idxtype *nvtxs, idxtype *ncon, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
metis_meshtodual	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_meshtodual(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *etype, idxtype *numflag, idxtype *dxadj, idxtype *dadjncy)$/;"	f
metis_meshtodual_	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_meshtodual_(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *etype, idxtype *numflag, idxtype *dxadj, idxtype *dadjncy)$/;"	f
metis_meshtodual__	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_meshtodual__(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *etype, idxtype *numflag, idxtype *dxadj, idxtype *dadjncy)$/;"	f
metis_meshtonodal	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_meshtonodal(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *etype, idxtype *numflag, idxtype *dxadj, idxtype *dadjncy)$/;"	f
metis_meshtonodal_	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_meshtonodal_(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *etype, idxtype *numflag, idxtype *dxadj, idxtype *dadjncy)$/;"	f
metis_meshtonodal__	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_meshtonodal__(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *etype, idxtype *numflag, idxtype *dxadj, idxtype *dadjncy)$/;"	f
metis_nodend	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_nodend(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *numflag, idxtype *options, idxtype *perm, idxtype *iperm)$/;"	f
metis_nodend_	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_nodend_(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *numflag, idxtype *options, idxtype *perm, idxtype *iperm)$/;"	f
metis_nodend__	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_nodend__(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *numflag, idxtype *options, idxtype *perm, idxtype *iperm)$/;"	f
metis_nodewnd	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_nodewnd(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *numflag, idxtype *options, idxtype *perm, idxtype *iperm)$/;"	f
metis_nodewnd_	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_nodewnd_(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *numflag, idxtype *options, idxtype *perm, idxtype *iperm)$/;"	f
metis_nodewnd__	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_nodewnd__(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *numflag, idxtype *options, idxtype *perm, idxtype *iperm)$/;"	f
metis_partgraphkway	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_partgraphkway(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
metis_partgraphkway_	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_partgraphkway_(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
metis_partgraphkway__	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_partgraphkway__(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
metis_partgraphrecursive	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_partgraphrecursive(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
metis_partgraphrecursive_	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_partgraphrecursive_(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
metis_partgraphrecursive__	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_partgraphrecursive__(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
metis_partgraphvkaway	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_partgraphvkaway(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *vsize, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, idxtype *options, idxtype *volume, idxtype *part)$/;"	f
metis_partgraphvkaway_	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_partgraphvkaway_(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *vsize, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, idxtype *options, idxtype *volume, idxtype *part)$/;"	f
metis_partgraphvkaway__	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_partgraphvkaway__(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *vsize, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, idxtype *options, idxtype *volume, idxtype *part)$/;"	f
metis_partition	src/graphlab/distributed/graph/cloned_graph.hpp	/^    void metis_partition(size_t nparts, std::vector<uint32_t>& ret_part) {$/;"	f	class:graphlab::cloned_graph
metis_partition	src/graphlab/graph/graph.hpp	/^    void metis_partition(size_t numparts , std::vector<uint32_t>& ret_part) {$/;"	f	class:graphlab::graph
metis_partmeshdual	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_partmeshdual(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *etype, idxtype *numflag, idxtype *nparts, idxtype *edgecut, idxtype *epart, idxtype *npart)$/;"	f
metis_partmeshdual_	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_partmeshdual_(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *etype, idxtype *numflag, idxtype *nparts, idxtype *edgecut, idxtype *epart, idxtype *npart)$/;"	f
metis_partmeshdual__	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_partmeshdual__(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *etype, idxtype *numflag, idxtype *nparts, idxtype *edgecut, idxtype *epart, idxtype *npart)$/;"	f
metis_partmeshnodal	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_partmeshnodal(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *etype, idxtype *numflag, idxtype *nparts, idxtype *edgecut, idxtype *epart, idxtype *npart)$/;"	f
metis_partmeshnodal_	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_partmeshnodal_(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *etype, idxtype *numflag, idxtype *nparts, idxtype *edgecut, idxtype *epart, idxtype *npart)$/;"	f
metis_partmeshnodal__	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_partmeshnodal__(idxtype *ne, idxtype *nn, idxtype *elmnts, idxtype *etype, idxtype *numflag, idxtype *nparts, idxtype *edgecut, idxtype *epart, idxtype *npart)$/;"	f
metis_weighted_partition	src/graphlab/graph/graph.hpp	/^    void metis_weighted_partition(size_t numparts ,$/;"	f	class:graphlab::graph
metis_wpartgraphkway	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_wpartgraphkway(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, float *tpwgts, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
metis_wpartgraphkway_	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_wpartgraphkway_(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, float *tpwgts, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
metis_wpartgraphkway__	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_wpartgraphkway__(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, float *tpwgts, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
metis_wpartgraphrecursive	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_wpartgraphrecursive(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, float *tpwgts, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
metis_wpartgraphrecursive_	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_wpartgraphrecursive_(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, float *tpwgts, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
metis_wpartgraphrecursive__	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_wpartgraphrecursive__(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *adjwgt, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, float *tpwgts, idxtype *options, idxtype *edgecut, idxtype *part)$/;"	f
metis_wpartgraphvkaway	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_wpartgraphvkaway(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *vsize, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, float *tpwgts, idxtype *options, idxtype *volume, idxtype *part)$/;"	f
metis_wpartgraphvkaway_	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_wpartgraphvkaway_(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *vsize, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, float *tpwgts, idxtype *options, idxtype *volume, idxtype *part)$/;"	f
metis_wpartgraphvkaway__	src/graphlab/extern/metis/libmetis/frename.c	/^void metis_wpartgraphvkaway__(idxtype *nvtxs, idxtype *xadj, idxtype *adjncy, idxtype *vwgt, idxtype *vsize, idxtype *wgtflag, idxtype *numflag, idxtype *nparts, float *tpwgts, idxtype *options, idxtype *volume, idxtype *part)$/;"	f
metric	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^     distance_metric   metric;$/;"	m	struct:bm::distance_metric_descriptor
mexFunction	cmake/Mex_stub.cpp	/^void mexFunction(int nlhs, mxArray *plhs[],$/;"	f
mflags	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  flag_t     mflags;$/;"	m	struct:malloc_state	file:
mfprintf	src/graphlab/extern/metis/libmetis/streamio.c	/^int mfprintf(FILE *stream, char *format,...)$/;"	f
mfscanf	src/graphlab/extern/metis/libmetis/streamio.c	/^int mfscanf(FILE *stream, char *format,...)$/;"	f
mgraph	src/graphlab/core.hpp	/^    typename types::graph mgraph;$/;"	m	class:graphlab::core
mgraph	src/graphlab/distributed/graph/cloned_graph.hpp	/^    graph<VertexData, EdgeData> mgraph;$/;"	m	class:graphlab::cloned_graph
mgraph	src/graphlab/distributed/graph/distributed_graph.hpp	/^        graph<VertexData, EdgeData> mgraph;$/;"	m	class:graphlab::distributed_graph
min	apps/image_denoise/image.hpp	/^  double min() {$/;"	f	class:image
min_range	src/graphlab/shared_data/thread_shared_data.hpp	/^      size_t min_range;$/;"	m	struct:graphlab::thread_shared_data::sync_task
mincut	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype mincut, minvol;$/;"	m	struct:graphdef
minimum_buflen	src/graphlab/distributed/distributed_control.hpp	/^    size_t minimum_buflen;$/;"	m	struct:graphlab::distributed_control::recv_buffer
miniset	src/graphlab/extern/bitmagic/bmvmin.h	/^    miniset() $/;"	f	class:bm::miniset
miniset	src/graphlab/extern/bitmagic/bmvmin.h	/^    miniset(const miniset& mset)$/;"	f	class:bm::miniset
miniset	src/graphlab/extern/bitmagic/bmvmin.h	/^template <class A, size_t N> class miniset$/;"	c	namespace:bm
minpriority	src/graphlab/util/sampling_tree.hpp	/^    Priority minpriority;$/;"	m	class:graphlab::sampling_tree
minsize_for_tree_index	src/graphlab/extern/metis/GKlib/dlmalloc.c	1439;"	d	file:
minvol	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype mincut, minvol;$/;"	m	struct:graphdef
misses	src/graphlab/distributed/distributed_hash_table.hpp	/^  size_t misses;$/;"	m	class:graphlab::distributed_hash_table
mk_derivative	src/graphlab/factors/binary_factor.hpp	/^    double mk_derivative() const {$/;"	f	class:graphlab::binary_factor
mmap_align	src/graphlab/extern/metis/GKlib/dlmalloc.c	1226;"	d	file:
mmap_align	src/graphlab/extern/metis/GKlib/dlmalloc.c	1228;"	d	file:
mmap_alloc	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void* mmap_alloc(mstate m, size_t nb) {$/;"	f	file:
mmap_resize	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static mchunkptr mmap_resize(mstate m, mchunkptr oldp, size_t nb) {$/;"	f	file:
mmap_threshold	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  size_t mmap_threshold;$/;"	m	struct:malloc_params	file:
mmdelm	src/graphlab/extern/metis/libmetis/mmd.c	/^void mmdelm(idxtype mdeg_node, idxtype *xadj, idxtype *adjncy, idxtype *head, idxtype *forward,$/;"	f
mmdelm	src/graphlab/extern/metis/libmetis/rename.h	259;"	d
mmdint	src/graphlab/extern/metis/libmetis/mmd.c	/^idxtype  mmdint(idxtype neqns, idxtype *xadj, idxtype *adjncy, idxtype *head, idxtype *forward,$/;"	f
mmdint	src/graphlab/extern/metis/libmetis/rename.h	260;"	d
mmdnum	src/graphlab/extern/metis/libmetis/mmd.c	/^void mmdnum(idxtype neqns, idxtype *perm, idxtype *invp, idxtype *qsize)$/;"	f
mmdnum	src/graphlab/extern/metis/libmetis/rename.h	261;"	d
mmdupd	src/graphlab/extern/metis/libmetis/mmd.c	/^void mmdupd(idxtype ehead, idxtype neqns, idxtype *xadj, idxtype *adjncy, idxtype delta, idxtype *mdeg,$/;"	f
mmdupd	src/graphlab/extern/metis/libmetis/rename.h	262;"	d
modified	src/graphlab/distributed/graph_lock_manager.hpp	/^      bool modified;$/;"	m	struct:graphlab::graph_lock_manager::edge_data_wrapper
modified	src/graphlab/distributed/graph_lock_manager.hpp	/^      bool modified;$/;"	m	struct:graphlab::graph_lock_manager::vertex_data_wrapper
modify_edge	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    void modify_edge(ivertex_set* parent, edge_id_t e) {$/;"	f	class:graphlab::any_inedge_set
modify_edge	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    void modify_edge(base* parent, edge_id_t e) {$/;"	f	class:graphlab::multinomial_vertex_set
modify_edge	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    void modify_edge(base* parent, edge_id_t e) {$/;"	f	class:graphlab::restricted_vertex_set
modify_edge	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    void modify_edge(ivertex_set_type* parent, edge_id_t e) {$/;"	f	class:graphlab::vertex_set
modify_edge_events	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	/^    std::vector<ivertex_set*> modify_edge_events;$/;"	m	class:graphlab::ivertex_set
modify_vertex	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    void modify_vertex(ivertex_set* parent, vertex_id_t v) {$/;"	f	class:graphlab::any_inedge_set
modify_vertex	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    void modify_vertex(base* parent, vertex_id_t v) {$/;"	f	class:graphlab::multinomial_vertex_set
modify_vertex	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    void modify_vertex(base* parent, vertex_id_t v) {$/;"	f	class:graphlab::restricted_vertex_set
modify_vertex	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    void modify_vertex(ivertex_set_type* parent, vertex_id_t v) {$/;"	f	class:graphlab::vertex_set
modify_vertex_events	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	/^    std::vector<ivertex_set*> modify_vertex_events;$/;"	m	class:graphlab::ivertex_set
monitor	src/graphlab/engine/asynchronous_engine.hpp	/^    imonitor_type* monitor;$/;"	m	class:graphlab::asynchronous_engine
monitor	src/graphlab/schedulers/ischeduler.hpp	/^    monitor_type* monitor;$/;"	m	class:graphlab::ischeduler
monitor_multiplexer	src/graphlab/monitoring/monitor_multiplexer.hpp	/^  class monitor_multiplexer : $/;"	c	namespace:graphlab
monitor_type	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    typedef imonitor<Graph> monitor_type;$/;"	t	class:graphlab::distributed_collaborative_scheduler_wrapper
monitor_type	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    typedef typename base::monitor_type monitor_type;$/;"	t	class:graphlab::distributed_phased_sweep_scheduler
monitor_type	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^    typedef typename base::monitor_type monitor_type;$/;"	t	class:graphlab::distributed_round_robin_scheduler
monitor_type	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^    typedef typename base::monitor_type monitor_type;$/;"	t	class:graphlab::distributed_round_robin_scheduler2
monitor_type	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    typedef imonitor<Graph> monitor_type;$/;"	t	class:graphlab::distributed_scheduler_wrapper
monitor_type	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    typedef typename base::monitor_type monitor_type;$/;"	t	class:graphlab::clustered_priority_scheduler
monitor_type	src/graphlab/schedulers/colored_scheduler.hpp	/^    typedef typename base::monitor_type         monitor_type;$/;"	t	class:graphlab::colored_scheduler
monitor_type	src/graphlab/schedulers/fifo_scheduler.hpp	/^    typedef typename base::monitor_type monitor_type;$/;"	t	class:graphlab::fifo_scheduler
monitor_type	src/graphlab/schedulers/ischeduler.hpp	/^    typedef imonitor<Graph> monitor_type;$/;"	t	class:graphlab::ischeduler
monitor_type	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    typedef typename base::monitor_type monitor_type;$/;"	t	class:graphlab::multiqueue_fifo_scheduler
monitor_type	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    typedef typename base::monitor_type         monitor_type;$/;"	t	class:graphlab::multiqueue_priority_scheduler
monitor_type	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^    typedef typename base::monitor_type monitor_type;$/;"	t	class:graphlab::multiqueue_scheduler
monitor_type	src/graphlab/schedulers/priority_scheduler.hpp	/^    typedef typename base::monitor_type monitor_type;$/;"	t	class:graphlab::priority_scheduler
monitor_type	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    typedef typename base::monitor_type monitor_type;$/;"	t	class:graphlab::round_robin_scheduler
monitor_type	src/graphlab/schedulers/sampling_scheduler.hpp	/^    typedef typename base::monitor_type monitor_type;$/;"	t	class:graphlab::sampling_scheduler
monitor_type	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    typedef typename base::monitor_type monitor_type;$/;"	t	class:graphlab::set_scheduler
monitor_type	src/graphlab/schedulers/splash_scheduler.hpp	/^    typedef typename base::monitor_type monitor_type;$/;"	t	class:graphlab::splash_scheduler
monitor_type	src/graphlab/schedulers/sweep_scheduler.hpp	/^    typedef typename base::monitor_type monitor_type;$/;"	t	class:graphlab::sweep_scheduler
mono_block_cnt_	src/graphlab/extern/bitmagic/bmserial.h	/^    unsigned           mono_block_cnt_; \/\/\/< number of 0 or 1 blocks$/;"	m	class:bm::serial_stream_iterator
morecore_mutex	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static MLOCK_T morecore_mutex = NULL_LOCK_INITIALIZER;$/;"	v	file:
morecore_mutex	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static MLOCK_T morecore_mutex = {0, 0 };$/;"	v	file:
morecore_mutex	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static MLOCK_T morecore_mutex = {0, 0, 0 };$/;"	v	file:
morecore_mutex	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static MLOCK_T morecore_mutex = {0, PTHREAD_MUTEX_INITIALIZER };$/;"	v	file:
morecore_mutex	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static MLOCK_T morecore_mutex;$/;"	v	file:
mparams	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static struct malloc_params mparams;$/;"	v	typeref:struct:malloc_params	file:
mpi_barrier	src/graphlab/distributed/distributed_control.hpp	/^  inline void mpi_barrier() {$/;"	f	class:graphlab::distributed_control
mprintf	src/graphlab/extern/metis/libmetis/streamio.c	/^int mprintf(char *format,...)$/;"	f
mscanf	src/graphlab/extern/metis/libmetis/streamio.c	/^int mscanf(char *format,...)$/;"	f
msegment	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^typedef struct malloc_segment  msegment;$/;"	t	typeref:struct:malloc_segment	file:
msegmentptr	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^typedef struct malloc_segment* msegmentptr;$/;"	t	typeref:struct:malloc_segment	file:
msgprocessed	src/graphlab/distributed/distributed_control.hpp	/^  atomic<size_t> msgprocessed;$/;"	m	class:graphlab::distributed_control
msgsent	src/graphlab/distributed/distributed_control.hpp	/^  atomic<size_t> msgsent;$/;"	m	class:graphlab::distributed_control
mshared_data	src/graphlab/core.hpp	/^    typename types::thread_shared_data mshared_data;    $/;"	m	class:graphlab::core
mspace	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	/^typedef void* mspace;$/;"	t
mspace_calloc	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^void* mspace_calloc(mspace msp, size_t n_elements, size_t elem_size) {$/;"	f
mspace_footprint	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^size_t mspace_footprint(mspace msp) {$/;"	f
mspace_free	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^void mspace_free(mspace msp, void* mem) {$/;"	f
mspace_independent_calloc	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^void** mspace_independent_calloc(mspace msp, size_t n_elements,$/;"	f
mspace_independent_comalloc	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^void** mspace_independent_comalloc(mspace msp, size_t n_elements,$/;"	f
mspace_mallinfo	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^struct mallinfo mspace_mallinfo(mspace msp) {$/;"	f
mspace_malloc	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^void* mspace_malloc(mspace msp, size_t bytes) {$/;"	f
mspace_malloc_stats	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^void mspace_malloc_stats(mspace msp) {$/;"	f
mspace_mallopt	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^int mspace_mallopt(int param_number, int value) {$/;"	f
mspace_max_footprint	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^size_t mspace_max_footprint(mspace msp) {$/;"	f
mspace_memalign	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^void* mspace_memalign(mspace msp, size_t alignment, size_t bytes) {$/;"	f
mspace_realloc	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^void* mspace_realloc(mspace msp, void* oldmem, size_t bytes) {$/;"	f
mspace_trim	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^int mspace_trim(mspace msp, size_t pad) {$/;"	f
mspace_usable_size	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^size_t mspace_usable_size(void* mem) {$/;"	f
msprintf	src/graphlab/extern/metis/libmetis/streamio.c	/^int msprintf(char *str, char *format,...)$/;"	f
msscanf	src/graphlab/extern/metis/libmetis/streamio.c	/^int msscanf(char *str, char *format,...)$/;"	f
mstate	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^typedef struct malloc_state*    mstate;$/;"	t	typeref:struct:malloc_state	file:
multinomial	src/graphlab/schedulers/sampling_scheduler.hpp	/^    fast_multinomial multinomial; $/;"	m	class:graphlab::sampling_scheduler
multinomial_vertex_set	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    multinomial_vertex_set(double (*p)(vertex_id_t, const vertex_data_type&)) {$/;"	f	class:graphlab::multinomial_vertex_set
multinomial_vertex_set	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    multinomial_vertex_set(priority_function_type p) {$/;"	f	class:graphlab::multinomial_vertex_set
multinomial_vertex_set	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^  class multinomial_vertex_set : $/;"	c	namespace:graphlab
multiqueue_fifo_scheduler	src/graphlab.hpp	/^    typedef graphlab::multiqueue_fifo_scheduler<graph> multiqueue_fifo_scheduler;$/;"	t	struct:graphlab::types
multiqueue_fifo_scheduler	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    multiqueue_fifo_scheduler(iengine_type* engine,$/;"	f	class:graphlab::multiqueue_fifo_scheduler
multiqueue_fifo_scheduler	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^  class multiqueue_fifo_scheduler : $/;"	c	namespace:graphlab
multiqueue_priority_scheduler	src/graphlab.hpp	/^    typedef graphlab::multiqueue_priority_scheduler<graph> multiqueue_priority_scheduler;$/;"	t	struct:graphlab::types
multiqueue_priority_scheduler	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    multiqueue_priority_scheduler(iengine_type* engine,$/;"	f	class:graphlab::multiqueue_priority_scheduler
multiqueue_priority_scheduler	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^  class multiqueue_priority_scheduler : $/;"	c	namespace:graphlab
multiqueue_scheduler	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^    multiqueue_scheduler(Graph& g, $/;"	f	class:graphlab::multiqueue_scheduler
multiqueue_scheduler	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^  class multiqueue_scheduler : $/;"	c	namespace:graphlab
mustfree	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype mustfree;$/;"	m	struct:PQueueType
mutable_queue	src/graphlab/util/mutable_queue.hpp	/^    mutable_queue()$/;"	f	class:graphlab::mutable_queue
mutable_queue	src/graphlab/util/mutable_queue.hpp	/^  class mutable_queue {$/;"	c	namespace:graphlab
mutable_queue	src/graphlab/util/mutable_queue.hpp	/^  class mutable_queue<size_t, Priority> {$/;"	c	namespace:graphlab
mutex	apps/concomp/lock_concomp.cpp	/^  pthread_mutex_t mutex;$/;"	m	struct:edge_data	file:
mutex	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  MLOCK_T    mutex;     \/* locate lock among fields that rarely change *\/$/;"	m	struct:malloc_state	file:
mutex	src/graphlab/parallel/pthread_tools.hpp	/^    mutex() {$/;"	f	class:graphlab::mutex
mutex	src/graphlab/parallel/pthread_tools.hpp	/^  class mutex {$/;"	c	namespace:graphlab
my_total_lock	src/graphlab/distributed/distributed_terminator.hpp	/^    mutex my_total_lock;$/;"	m	class:graphlab::distributed_terminator
my_total_received	src/graphlab/distributed/distributed_terminator.hpp	/^    size_t my_total_received;$/;"	m	class:graphlab::distributed_terminator
my_total_transmitted	src/graphlab/distributed/distributed_terminator.hpp	/^    size_t my_total_transmitted;$/;"	m	class:graphlab::distributed_terminator
my_vertices	src/graphlab/distributed/graph/cloned_graph.hpp	/^    const std::vector<vertex_id_t>& my_vertices() const{$/;"	f	class:graphlab::cloned_graph
my_vertices	src/graphlab/distributed/graph/distributed_graph.hpp	/^    const std::vector<vertex_id_t>& my_vertices() const{$/;"	f	class:graphlab::distributed_graph
myproc	src/graphlab/distributed/graph/distributed_graph.hpp	/^    procid_t myproc() {$/;"	f	class:graphlab::distributed_graph
myprocid	src/graphlab/distributed/graph/cloned_graph.hpp	/^    procid_t myprocid;$/;"	m	class:graphlab::cloned_graph
myprocid	src/graphlab/distributed/graph/distributed_graph.hpp	/^    procid_t myprocid;$/;"	m	class:graphlab::distributed_graph
myvertices	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  std::vector< vertex_id_t >  myvertices;$/;"	m	class:graphlab::distributed_round_robin_scheduler
myvertices	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  std::vector< vertex_id_t >  myvertices;$/;"	m	class:graphlab::distributed_round_robin_scheduler2
myvertices	src/graphlab/distributed/graph/distributed_graph.hpp	/^    std::vector<vertex_id_t> myvertices;$/;"	m	class:graphlab::distributed_graph
n	apps/gabp/gabp.cpp	/^  uint32_t n = 0; \/\/ number of rows of A$/;"	v
n	src/graphlab/extern/metis/GKlib/gk_struct.h	/^    int n;$/;"	m	struct:__anon14
name	src/graphlab/extern/metis/GKlib/gk_getopt.h	/^  const char *name; \/*!< This field is the name of the option. *\/$/;"	m	struct:gk_option
name	src/graphlab/extern/metis/GKlib/gk_struct.h	/^	char      *name;$/;"	m	struct:__anon12
name	src/graphlab/extern/metis/GKlib/gk_struct.h	/^    char *name; \/* Stores the name of the sequence *\/$/;"	m	struct:__anon15
name	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  char *name;$/;"	m	struct:__anon9
name	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    std::string name(void) const {$/;"	f	class:graphlab::any_inedge_set
name	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    std::string name(void) const{$/;"	f	class:graphlab::multinomial_vertex_set
name	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    std::string name(void) const {$/;"	f	class:graphlab::restricted_vertex_set
name	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    std::string name(void) const {$/;"	f	class:graphlab::vertex_set
natoms	src/graphlab/extern/metis/GKlib/gk_struct.h	/^	int natoms;			\/* Number of atoms *\/$/;"	m	struct:__anon13
nattachcalls	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^      size_t nattachcalls;  \/\/ number of calls to attach so far$/;"	m	class:graphlab::set_scheduler::scheduler_worker
nbbs	src/graphlab/extern/metis/GKlib/gk_struct.h	/^	int nbbs;$/;"	m	struct:__anon13
nblocks	src/graphlab/util/synchronized_unordered_map.hpp	/^   size_t nblocks;$/;"	m	class:graphlab::synchronized_unordered_map
nbnd	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype nbnd;$/;"	m	struct:graphdef
ncas	src/graphlab/extern/metis/GKlib/gk_struct.h	/^	int ncas;$/;"	m	struct:__anon13
ncols	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  int nrows, ncols;$/;"	m	struct:__anon7
ncon	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype ncon;			\/* The # of constrains *\/ $/;"	m	struct:graphdef
ncpus	apps/factor_graph_inference/factor_bp.cpp	/^  size_t ncpus;$/;"	m	struct:options	file:
ncpus	apps/factor_graph_inference/factor_gibbs.cpp	/^  size_t ncpus;$/;"	m	struct:options	file:
ncpus	apps/image_denoise/gibbs_denoise.cpp	/^  size_t ncpus;$/;"	m	struct:options	file:
ncpus	apps/image_denoise/loopybp_denoise.cpp	/^  size_t ncpus;$/;"	m	struct:options	file:
ncpus	src/graphlab/distributed/distributed_engine.hpp	/^    size_t ncpus;$/;"	m	class:graphlab::distributed_engine
ncpus	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    size_t ncpus;$/;"	m	class:graphlab::pushy_distributed_engine
ncpus	src/graphlab/engine/asynchronous_engine.hpp	/^    size_t ncpus; $/;"	m	class:graphlab::asynchronous_engine
ncpus	src/graphlab/engine/engine_options.hpp	/^    size_t ncpus;$/;"	m	struct:graphlab::engine_options
ncpus	src/graphlab/engine/sim_thread_engine.hpp	/^    size_t ncpus;$/;"	m	class:graphlab::sim_thread_engine
ncpus	src/graphlab/engine/synchronous_engine.hpp	/^    size_t ncpus;$/;"	m	class:graphlab::synchronous_engine
ncpus	src/graphlab/engine/threaded_engine.hpp	/^    size_t ncpus;$/;"	m	class:graphlab::threaded_engine
ncpus	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    size_t ncpus;$/;"	m	class:graphlab::clustered_priority_scheduler
ncpus	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    size_t ncpus;$/;"	m	class:graphlab::any_inedge_set
ncpus	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    size_t ncpus;$/;"	m	class:graphlab::restricted_vertex_set
ncpus	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    size_t ncpus;$/;"	m	class:graphlab::vertex_set
ncpus	src/graphlab/schedulers/splash_scheduler.hpp	/^    size_t ncpus;$/;"	m	class:graphlab::splash_scheduler
ncpus	src/graphlab/util/optimal_termination.hpp	/^    size_t ncpus;$/;"	m	class:graphlab::optimal_termination
ndegrees	src/graphlab/extern/metis/libmetis/struct.h	/^ idxtype ndegrees;          	\/* The number of different ext-degrees *\/$/;"	m	struct:rinfodef
ndegrees	src/graphlab/extern/metis/libmetis/struct.h	/^ idxtype ndegrees;          	\/* The number of different ext-degrees *\/$/;"	m	struct:vrinfodef
ned	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype ed, ned;$/;"	m	struct:vedegreedef
nedges	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype nvtxs, nedges;	\/* The # of vertices and edges in the graph *\/$/;"	m	struct:graphdef
need_vertex_locks	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    bool need_vertex_locks() {$/;"	f	class:graphlab::set_scheduler
needed	src/graphlab/parallel/pthread_tools.hpp	/^    int needed;$/;"	m	class:graphlab::barrier
needvertexdata	src/graphlab/distributed/graph_lock_manager.hpp	/^      std::vector<bool> needvertexdata;$/;"	m	struct:graphlab::graph_lock_manager::request_descriptor
neighbor_vertex_data	src/graphlab/distributed/distributed_scope.hpp	/^    const vertex_data_type& neighbor_vertex_data(vertex_id_t vertex) const {    $/;"	f	class:graphlab::distributed_scope
neighbor_vertex_data	src/graphlab/distributed/distributed_scope.hpp	/^    vertex_data_type& neighbor_vertex_data(vertex_id_t vertex) {$/;"	f	class:graphlab::distributed_scope
neighbor_vertex_data	src/graphlab/scope/general_scope.hpp	/^    const vertex_data_type& neighbor_vertex_data(vertex_id_t vertex) const {$/;"	f	class:graphlab::general_scope
neighbor_vertex_data	src/graphlab/scope/general_scope.hpp	/^    vertex_data_type& neighbor_vertex_data(vertex_id_t vertex) {$/;"	f	class:graphlab::general_scope
neighbor_vertex_data	src/graphlab/scope/synchronous_scope.hpp	/^    const vertex_data_type& neighbor_vertex_data(vertex_id_t vertex) const {$/;"	f	class:graphlab::synchronous_scope
neighbor_vertex_data	src/graphlab/scope/synchronous_scope.hpp	/^    vertex_data_type& neighbor_vertex_data(vertex_id_t vertex) {$/;"	f	class:graphlab::synchronous_scope
nelements	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  int nelements;                \/* The overall size of the hash-table *\/$/;"	m	struct:__anon10
network_filename	apps/factor_graph_inference/factor_bp.cpp	/^  std::string network_filename;$/;"	m	struct:options	file:
network_filename	apps/factor_graph_inference/factor_gibbs.cpp	/^  std::string network_filename;$/;"	m	struct:options	file:
new_blocks_strat_	src/graphlab/extern/bitmagic/bm.h	/^    strategy             new_blocks_strat_; \/\/!< block allocation strategy$/;"	m	class:bm::bvector
new_engine	src/graphlab/engine/engine_factory.hpp	/^    iengine<Graph>* new_engine(const std::string& engine,$/;"	f	namespace:graphlab::engine_factory
new_job	src/graphlab/util/optimal_termination.hpp	/^    void new_job() {$/;"	f	class:graphlab::optimal_termination
new_job	src/graphlab/util/optimal_termination.hpp	/^    void new_job(size_t cpuhint) {$/;"	f	class:graphlab::optimal_termination
new_job	src/graphlab/util/shared_termination.hpp	/^    void new_job() {$/;"	f	class:graphlab::shared_termination
new_job	src/graphlab/util/shared_termination.hpp	/^    void new_job(size_t cpuhint) {$/;"	f	class:graphlab::shared_termination
new_job	src/graphlab/util/task_count_termination.hpp	/^    void new_job() {$/;"	f	class:graphlab::task_count_termination
newsatisfied	src/graphlab/distributed/graph_lock_manager.hpp	/^      std::queue<dist_scope_request> newsatisfied;$/;"	m	struct:graphlab::graph_lock_manager::block_request
newtaskcount	src/graphlab/util/task_count_termination.hpp	/^    atomic<size_t> newtaskcount;$/;"	m	class:graphlab::task_count_termination
next	src/graphlab/extern/bitmagic/bmserial.h	/^void serial_stream_iterator<DEC>::next()$/;"	f	class:bm::serial_stream_iterator
next	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  struct malloc_segment* next;   \/* ptr to next segment *\/$/;"	m	struct:malloc_segment	typeref:struct:malloc_segment::malloc_segment	file:
next	src/graphlab/extern/metis/libmetis/struct.h	/^  struct ListNodeType *prev, *next;     \/* It's a doubly-linked list *\/$/;"	m	struct:ListNodeType	typeref:struct:ListNodeType::
next	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    bool next(vertex_id_t &i, size_t cpuid) {$/;"	f	class:graphlab::any_inedge_set
next	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    bool next(vertex_id_t &i, size_t cpuid) {$/;"	f	class:graphlab::multinomial_vertex_set
next	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    bool next(vertex_id_t &i, size_t cpuid) {$/;"	f	class:graphlab::restricted_vertex_set
next	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    bool next(vertex_id_t &i, size_t cpuid) {$/;"	f	class:graphlab::vertex_set
next_bit	src/graphlab/util/dense_bitset.hpp	/^    inline bool next_bit(uint32_t &b) {$/;"	f	class:graphlab::dense_bitset
next_bit	src/graphlab/util/dense_bitset.hpp	/^    inline bool next_bit(uint32_t &b) {$/;"	f	class:graphlab::fixed_dense_bitset
next_bit_in_block	src/graphlab/util/dense_bitset.hpp	/^    inline size_t next_bit_in_block(const uint32_t &b, const size_t &block) {$/;"	f	class:graphlab::fixed_dense_bitset
next_bit_in_block	src/graphlab/util/dense_bitset.hpp	/^    inline size_t next_bit_in_block(const uint32_t& b, const size_t& block) {$/;"	f	class:graphlab::dense_bitset
next_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	832;"	d	file:
next_pinuse	src/graphlab/extern/metis/GKlib/dlmalloc.c	836;"	d	file:
next_powerof2	src/graphlab/util/dense_bitset.hpp	/^    inline size_t next_powerof2(size_t val) {$/;"	f	class:graphlab::dense_bitset
next_powerof2	src/graphlab/util/dense_bitset.hpp	/^    inline size_t next_powerof2(size_t val) {$/;"	f	class:graphlab::fixed_dense_bitset
next_powerof2	src/graphlab/util/fast_multinomial.hpp	/^    uint64_t next_powerof2(uint64_t val) {$/;"	f	class:graphlab::fast_multinomial
next_task_from_splash	src/graphlab/schedulers/splash_scheduler.hpp	/^    sched_status::status_enum next_task_from_splash(size_t cpuid, update_task_type &ret_task){$/;"	f	class:graphlab::splash_scheduler
next_time	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      float next_time;$/;"	m	struct:graphlab::distributed_fullsweep_sdm::sync_task
next_time	src/graphlab/distributed/distributed_shared_data.hpp	/^      float next_time;$/;"	m	struct:graphlab::distributed_shared_data::sync_task
next_time	src/graphlab/shared_data/thread_shared_data.hpp	/^      size_t next_time;$/;"	m	struct:graphlab::thread_shared_data::sync_task
nextchar	src/graphlab/extern/metis/GKlib/getopt.c	/^static char *nextchar;$/;"	v	file:
nextpow2	src/graphlab/util/sampling_tree.hpp	/^    size_t nextpow2(size_t val) {$/;"	f	class:graphlab::sampling_tree
nextschedpos	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    std::vector<vertex_id_t> nextschedpos;    \/\/\/The position of the "next" iterator$/;"	m	class:graphlab::set_scheduler
ngainspan	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype pgainspan, ngainspan;     \/* plus and negative gain span *\/$/;"	m	struct:PQueueType
nid	src/graphlab/extern/metis/libmetis/struct.h	/^ idxtype id, ed, nid;            	\/* ID\/ED of nodes *\/$/;"	m	struct:vrinfodef
niterations	src/graphlab/engine/synchronous_engine.hpp	/^    size_t niterations;$/;"	m	class:graphlab::synchronous_engine
nleafs	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype nnodes, nleafs;$/;"	m	struct:__anon4
nmaxvwgt	src/graphlab/extern/metis/libmetis/struct.h	/^  float nmaxvwgt;		\/* The maximum allowed weight for a vertex for each constrain *\/$/;"	m	struct:controldef
nmyverts_in_range	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      size_t nmyverts_in_range;$/;"	m	struct:graphlab::distributed_fullsweep_sdm::sync_params
nnodes	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  int nnodes;$/;"	m	struct:__anon8
nnodes	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype nnodes, nleafs;$/;"	m	struct:__anon4
nnodes	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype nnodes;$/;"	m	struct:PQueueType
no_argument	src/graphlab/extern/metis/GKlib/gk_getopt.h	52;"	d
nodes	src/graphlab/extern/metis/libmetis/struct.h	/^  ListNodeType *nodes;$/;"	m	struct:PQueueType
noisy_fn	apps/image_denoise/gibbs_denoise.cpp	/^  std::string noisy_fn;$/;"	m	struct:options	file:
noisy_fn	apps/image_denoise/loopybp_denoise.cpp	/^  std::string noisy_fn;$/;"	m	struct:options	file:
none	src/graphlab/extern/bitmagic/bm.h	/^    bool none() const$/;"	f	class:bm::bvector
normalize	src/graphlab/factors/binary_factor.hpp	/^    inline void normalize() {$/;"	f	class:graphlab::binary_factor
normalize	src/graphlab/factors/table_factor.hpp	/^    void normalize() {$/;"	f	class:graphlab::table_factor
normalize	src/graphlab/factors/unary_factor.hpp	/^    inline void normalize() {$/;"	f	class:graphlab::unary_factor
nprocs	src/graphlab/distributed/distributed_control.hpp	/^  procid_t nprocs;$/;"	m	class:graphlab::distributed_control
npwgts	src/graphlab/extern/metis/libmetis/struct.h	/^  float *npwgts;		\/* The normalized partition weights *\/$/;"	m	struct:graphdef
nresidues	src/graphlab/extern/metis/GKlib/gk_struct.h	/^	int nresidues;  \/* Number of residues based on coordinates *\/$/;"	m	struct:__anon13
nrinfo	src/graphlab/extern/metis/libmetis/struct.h	/^  NRInfoType *nrinfo;$/;"	m	struct:graphdef
nrinfodef	src/graphlab/extern/metis/libmetis/struct.h	/^struct nrinfodef {$/;"	s
nrows	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  int nrows, ncols;$/;"	m	struct:__anon7
nsamples	apps/factor_graph_inference/factor_gibbs.cpp	/^  size_t nsamples;$/;"	m	struct:options	file:
nsamples	apps/factor_graph_inference/factor_gibbs.cpp	/^size_t nsamples;$/;"	v
nsamples	apps/image_denoise/gibbs_denoise.cpp	/^size_t nsamples;$/;"	v
nsamples_terminator	apps/shooting/shooting.cpp	/^bool nsamples_terminator(const gl_types::ishared_data& shared_data) {$/;"	f
nseps	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype nseps;			\/* The number of separators to be found during multiple bisections *\/$/;"	m	struct:controldef
nsvtxs	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype nsvtxs;$/;"	m	struct:__anon3
nsymbols	src/graphlab/extern/metis/GKlib/gk_struct.h	/^    int nsymbols;$/;"	m	struct:__anon15
ntoks	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  int ntoks;        \/* The number of tokens in the input string *\/$/;"	m	struct:__anon11
num_active	src/graphlab/util/shared_termination.hpp	/^    size_t num_active() {$/;"	f	class:graphlab::shared_termination
num_asg	src/graphlab/util/fast_multinomial.hpp	/^    size_t num_asg;$/;"	m	class:graphlab::fast_multinomial
num_cpus	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    size_t num_cpus;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
num_cpus	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    size_t num_cpus() const {$/;"	f	class:graphlab::set_scheduler
num_cpus	src/graphlab/schedulers/sweep_scheduler.hpp	/^    size_t num_cpus;$/;"	m	class:graphlab::sweep_scheduler
num_edges	src/graphlab/distributed/graph/cloned_graph.hpp	/^    size_t num_edges() const {$/;"	f	class:graphlab::cloned_graph
num_edges	src/graphlab/distributed/graph/distributed_graph.hpp	/^    size_t num_edges() const {$/;"	f	class:graphlab::distributed_graph
num_edges	src/graphlab/graph/graph.hpp	/^    size_t num_edges() const {$/;"	f	class:graphlab::graph
num_elements	src/graphlab/util/sampling_tree.hpp	/^    atomic<size_t> num_elements;$/;"	m	class:graphlab::sampling_tree
num_gets	src/graphlab/distributed/distributed_hash_table.hpp	/^  size_t num_gets() const {$/;"	f	class:graphlab::distributed_hash_table
num_handledpendingtask	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^	atomic<size_t> numpendingtasks, num_handledpendingtask;$/;"	m	class:graphlab::distributed_collaborative_scheduler_wrapper
num_in_neighbors	src/graphlab/distributed/graph/cloned_graph.hpp	/^    size_t num_in_neighbors(vertex_id_t v) const {$/;"	f	class:graphlab::cloned_graph
num_in_neighbors	src/graphlab/distributed/graph/distributed_graph.hpp	/^    size_t num_in_neighbors(vertex_id_t v) const {$/;"	f	class:graphlab::distributed_graph
num_in_neighbors	src/graphlab/graph/graph.hpp	/^    size_t num_in_neighbors(vertex_id_t v) const {$/;"	f	class:graphlab::graph
num_local_edges	src/graphlab/distributed/graph/cloned_graph.hpp	/^    size_t num_local_edges() const{$/;"	f	class:graphlab::cloned_graph
num_local_edges	src/graphlab/distributed/graph/distributed_graph.hpp	/^    size_t num_local_edges() const {$/;"	f	class:graphlab::distributed_graph
num_misses	src/graphlab/distributed/distributed_hash_table.hpp	/^  size_t num_misses() const {$/;"	f	class:graphlab::distributed_hash_table
num_of_buffered_tasks	src/graphlab/schedulers/icallback.hpp	/^     virtual int num_of_buffered_tasks() { return 0; }$/;"	f	class:graphlab::icallback
num_of_buffered_tasks	src/graphlab/schedulers/support/direct_callback.hpp	/^    int num_of_buffered_tasks() {$/;"	f	class:graphlab::direct_callback
num_of_updatefunctions	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    uint8_t num_of_updatefunctions;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
num_of_updatefunctions	src/graphlab/schedulers/support/binary_vertex_task_set.hpp	/^    size_t num_of_updatefunctions;$/;"	m	class:graphlab::binary_vertex_task_set
num_of_updatefunctions	src/graphlab/schedulers/sweep_scheduler.hpp	/^    uint8_t num_of_updatefunctions;$/;"	m	class:graphlab::sweep_scheduler
num_out_neighbors	src/graphlab/distributed/graph/cloned_graph.hpp	/^    size_t num_out_neighbors(vertex_id_t v) const  {$/;"	f	class:graphlab::cloned_graph
num_out_neighbors	src/graphlab/distributed/graph/distributed_graph.hpp	/^    size_t num_out_neighbors(vertex_id_t v) const  {$/;"	f	class:graphlab::distributed_graph
num_out_neighbors	src/graphlab/graph/graph.hpp	/^    size_t num_out_neighbors(vertex_id_t v) const  {$/;"	f	class:graphlab::graph
num_queues	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    size_t num_queues;$/;"	m	class:graphlab::multiqueue_fifo_scheduler
num_queues	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    size_t num_queues;$/;"	m	class:graphlab::multiqueue_priority_scheduler
num_queues_full	src/graphlab/util/prioritized_multiqueue.hpp	/^    atomic<size_t> num_queues_full;$/;"	m	class:graphlab::prioritized_multiqueue
num_queues_full	src/graphlab/util/synchronized_multiqueue.hpp	/^    atomic<size_t> num_queues_full;$/;"	m	class:graphlab::synchronized_multiqueue
num_recvcalls	src/graphlab/distributed/distributed_control.hpp	/^    size_t num_recvcalls;$/;"	m	struct:graphlab::distributed_control::recv_buffer
num_rings	apps/image_denoise/gibbs_denoise.cpp	/^  size_t num_rings;$/;"	m	struct:options	file:
num_rings	apps/image_denoise/loopybp_denoise.cpp	/^  size_t num_rings;$/;"	m	struct:options	file:
num_support	src/graphlab/util/fast_multinomial.hpp	/^    atomic<size_t> num_support;$/;"	m	class:graphlab::fast_multinomial
num_vars	src/graphlab/factors/table_factor.hpp	/^    size_t num_vars() const { return _args.num_vars(); }$/;"	f	class:graphlab::assignment
num_vars	src/graphlab/factors/table_factor.hpp	/^    size_t num_vars() const { return _args.num_vars(); }$/;"	f	class:graphlab::table_factor
num_vars	src/graphlab/factors/table_factor.hpp	/^    size_t num_vars() const { return _num_vars; }$/;"	f	class:graphlab::domain
num_vertices	src/graphlab/distributed/distributed_engine.hpp	/^    size_t num_vertices() const{$/;"	f	class:graphlab::distributed_engine
num_vertices	src/graphlab/distributed/graph/cloned_graph.hpp	/^    size_t num_vertices() const {$/;"	f	class:graphlab::cloned_graph
num_vertices	src/graphlab/distributed/graph/distributed_graph.hpp	/^    size_t num_vertices() const {$/;"	f	class:graphlab::distributed_graph
num_vertices	src/graphlab/graph/graph.hpp	/^    size_t num_vertices() const {$/;"	f	class:graphlab::graph
num_vertices	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    size_t num_vertices;  $/;"	m	class:graphlab::clustered_priority_scheduler
num_vertices	src/graphlab/schedulers/priority_scheduler.hpp	/^    size_t num_vertices;  $/;"	m	class:graphlab::priority_scheduler
num_vertices	src/graphlab/scope/general_scope_factory.hpp	/^    size_t num_vertices() const { return graph.num_vertices(); }$/;"	f	class:graphlab::general_scope_factory
num_vertices	src/graphlab/scope/iscope.hpp	/^    size_t num_vertices() {$/;"	f	class:graphlab::iscope
num_vertices	src/graphlab/scope/synchronous_scope_factory.hpp	/^    size_t num_vertices() const {$/;"	f	class:graphlab::synchronous_scope_factory
numactive	src/graphlab/util/shared_termination.hpp	/^    size_t numactive;$/;"	m	class:graphlab::shared_termination
numargs	src/graphlab/distributed/dc_packet_headers.hpp	/^  uint32_t numargs;$/;"	m	struct:graphlab::remotecall_packdata
numcpus	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    unsigned int  numcpus;$/;"	m	class:graphlab::distributed_fullsweep_sdm
numcpus	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    size_t numcpus; \/\/\/ number of processors$/;"	m	class:graphlab::set_scheduler
numcpus	src/graphlab/util/shared_termination.hpp	/^    size_t numcpus;$/;"	m	class:graphlab::shared_termination
numflips	apps/demo/concise_demo.cpp	/^  size_t numflips;$/;"	m	struct:vertex_data	file:
numflips	apps/demo/demo.cpp	/^  size_t numflips;$/;"	m	struct:vertex_data	file:
numissued	src/graphlab/distributed/graph_lock_manager.hpp	/^      size_t numissued;  \/\/ number of requests where the lock request has been issued$/;"	m	struct:graphlab::graph_lock_manager::block_request
numlocks	src/graphlab/distributed/graph_lock_manager.hpp	/^      atomic<int> numlocks;$/;"	m	struct:graphlab::graph_lock_manager::edge_data_wrapper
numlocks	src/graphlab/distributed/graph_lock_manager.hpp	/^      atomic<int> numlocks;$/;"	m	struct:graphlab::graph_lock_manager::vertex_data_wrapper
numpendingtasks	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^	atomic<size_t> numpendingtasks, num_handledpendingtask;$/;"	m	class:graphlab::distributed_collaborative_scheduler_wrapper
numprocs	src/graphlab/distributed/distributed_control.hpp	/^  inline const procid_t numprocs() const {$/;"	f	class:graphlab::distributed_control
numprocs	src/graphlab/distributed/distributed_hash_table.hpp	/^  procid_t numprocs;   \/\/\/ NUmber of processors$/;"	m	class:graphlab::distributed_hash_table
numqueues	src/graphlab/util/prioritized_multiqueue.hpp	/^    size_t numqueues;$/;"	m	class:graphlab::prioritized_multiqueue
numqueues	src/graphlab/util/synchronized_multiqueue.hpp	/^    size_t numqueues;$/;"	m	class:graphlab::synchronized_multiqueue
numreaders	src/graphlab/distributed/lock_manager.hpp	/^    atomic<uint16_t> numreaders;$/;"	m	struct:graphlab::distributed_lock_manager::distrwlock
numreleased	src/graphlab/distributed/graph_lock_manager.hpp	/^      size_t numreleased; \/\/ number of requests released$/;"	m	struct:graphlab::graph_lock_manager::block_request
numreqs	src/graphlab/distributed/graph_lock_manager.hpp	/^      size_t numreqs; \/\/ total number of requests$/;"	m	struct:graphlab::graph_lock_manager::block_request
numsatisfied	src/graphlab/distributed/graph_lock_manager.hpp	/^      size_t numsatisfied;  \/\/ number if requests satisfied$/;"	m	struct:graphlab::graph_lock_manager::block_request
numtasksreceived	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    atomic<size_t> numtasksreceived;$/;"	m	class:graphlab::distributed_collaborative_scheduler_wrapper
numtasksreceived	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    atomic<size_t> numtasksreceived;$/;"	m	class:graphlab::distributed_scheduler_wrapper
numtaskstransmitted	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    atomic<size_t> numtaskstransmitted;$/;"	m	class:graphlab::distributed_collaborative_scheduler_wrapper
numtaskstransmitted	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    atomic<size_t> numtaskstransmitted;$/;"	m	class:graphlab::distributed_scheduler_wrapper
numv	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    atomic<size_t> numv;$/;"	m	class:graphlab::any_inedge_set
numv	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    atomic<size_t> numv;$/;"	m	class:graphlab::restricted_vertex_set
numv	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    atomic<size_t> numv;$/;"	m	class:graphlab::vertex_set
numvertices	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    size_t numvertices;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
numvertices	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  size_t numvertices; \/\/\/ Remember the number of vertices in the graph$/;"	m	class:graphlab::distributed_round_robin_scheduler
numvertices	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  size_t numvertices; \/\/\/ Remember the number of vertices in the graph$/;"	m	class:graphlab::distributed_round_robin_scheduler2
numvertices	src/graphlab/schedulers/fifo_scheduler.hpp	/^    size_t numvertices; \/\/\/ Remember the number of vertices in the graph$/;"	m	class:graphlab::fifo_scheduler
numvertices	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    size_t numvertices; \/\/\/ Remember the number of vertices in the graph$/;"	m	class:graphlab::multiqueue_fifo_scheduler
numvertices	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    size_t numvertices; \/\/\/ Remember the number of vertices in the graph$/;"	m	class:graphlab::multiqueue_priority_scheduler
numvertices	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^    size_t numvertices; \/\/\/ Remember the number of vertices in the graph$/;"	m	class:graphlab::multiqueue_scheduler
numvertices	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    size_t numvertices; \/\/\/ Remember the number of vertices in the graph$/;"	m	class:graphlab::round_robin_scheduler
numvertices	src/graphlab/schedulers/sweep_scheduler.hpp	/^    size_t numvertices;$/;"	m	class:graphlab::sweep_scheduler
nvtxs	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype nvtxs, nedges;	\/* The # of vertices and edges in the graph *\/$/;"	m	struct:graphdef
nvtxs	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype nvtxs;$/;"	m	struct:__anon3
nvtxs	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype nvtxs;$/;"	m	struct:__anon4
nvwgt	src/graphlab/extern/metis/libmetis/struct.h	/^  float *nvwgt;			\/* Normalized vertex weights *\/$/;"	m	struct:graphdef
o	src/graphlab/serialization/oarchive.hpp	/^    std::ostream* o;$/;"	m	class:graphlab::oarchive
oarchive	src/graphlab/serialization/oarchive.hpp	/^    oarchive(std::ostream& os)$/;"	f	class:graphlab::oarchive
oarchive	src/graphlab/serialization/oarchive.hpp	/^  class oarchive{$/;"	c	namespace:graphlab
oarchive_detail	src/graphlab/serialization/oarchive.hpp	/^namespace oarchive_detail {$/;"	n	namespace:graphlab
observes_scope_changes	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    bool observes_scope_changes() {$/;"	f	class:graphlab::set_scheduler
oflags	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype oflags;$/;"	m	struct:controldef
ok_address	src/graphlab/extern/metis/GKlib/dlmalloc.c	1534;"	d	file:
ok_address	src/graphlab/extern/metis/GKlib/dlmalloc.c	1543;"	d	file:
ok_cinuse	src/graphlab/extern/metis/GKlib/dlmalloc.c	1538;"	d	file:
ok_cinuse	src/graphlab/extern/metis/GKlib/dlmalloc.c	1545;"	d	file:
ok_magic	src/graphlab/extern/metis/GKlib/dlmalloc.c	1551;"	d	file:
ok_magic	src/graphlab/extern/metis/GKlib/dlmalloc.c	1553;"	d	file:
ok_next	src/graphlab/extern/metis/GKlib/dlmalloc.c	1536;"	d	file:
ok_next	src/graphlab/extern/metis/GKlib/dlmalloc.c	1544;"	d	file:
ok_pinuse	src/graphlab/extern/metis/GKlib/dlmalloc.c	1540;"	d	file:
ok_pinuse	src/graphlab/extern/metis/GKlib/dlmalloc.c	1546;"	d	file:
old_SIGABRT_handler	src/graphlab/extern/metis/GKlib/error.c	/^static  sighandler_t old_SIGABRT_handler;$/;"	v	file:
old_SIGABRT_handler	src/graphlab/extern/metis/GKlib/error.c	/^static __thread sighandler_t old_SIGABRT_handler;$/;"	v	file:
old_SIGBUS_handler	src/graphlab/extern/metis/GKlib/error.c	/^static  sighandler_t old_SIGBUS_handler;$/;"	v	file:
old_SIGBUS_handler	src/graphlab/extern/metis/GKlib/error.c	/^static __thread sighandler_t old_SIGBUS_handler;$/;"	v	file:
old_SIGERR_handler	src/graphlab/extern/metis/GKlib/error.c	/^static  sighandler_t old_SIGERR_handler;  \/* Custom signal *\/$/;"	v	file:
old_SIGERR_handler	src/graphlab/extern/metis/GKlib/error.c	/^static __thread sighandler_t old_SIGERR_handler;  \/* Custom signal *\/$/;"	v	file:
old_SIGFPE_handler	src/graphlab/extern/metis/GKlib/error.c	/^static  sighandler_t old_SIGFPE_handler;$/;"	v	file:
old_SIGFPE_handler	src/graphlab/extern/metis/GKlib/error.c	/^static __thread sighandler_t old_SIGFPE_handler;$/;"	v	file:
old_SIGILL_handler	src/graphlab/extern/metis/GKlib/error.c	/^static  sighandler_t old_SIGILL_handler;$/;"	v	file:
old_SIGILL_handler	src/graphlab/extern/metis/GKlib/error.c	/^static __thread sighandler_t old_SIGILL_handler;$/;"	v	file:
old_SIGMEM_handler	src/graphlab/extern/metis/GKlib/error.c	/^static  sighandler_t old_SIGMEM_handler;  \/* Custom signal *\/$/;"	v	file:
old_SIGMEM_handler	src/graphlab/extern/metis/GKlib/error.c	/^static __thread sighandler_t old_SIGMEM_handler;  \/* Custom signal *\/$/;"	v	file:
old_SIGSEGV_handler	src/graphlab/extern/metis/GKlib/error.c	/^static  sighandler_t old_SIGSEGV_handler;$/;"	v	file:
old_SIGSEGV_handler	src/graphlab/extern/metis/GKlib/error.c	/^static __thread sighandler_t old_SIGSEGV_handler;$/;"	v	file:
old_message	apps/factor_graph_inference/factor_bp.hpp	/^  factor_type old_message;$/;"	m	struct:edge_data
old_message	apps/image_denoise/loopybp_denoise.cpp	/^  graphlab::unary_factor old_message;$/;"	m	struct:edge_data	file:
omp_get_dynamic	src/graphlab/extern/metis/GKlib/omp.c	/^int omp_get_dynamic(void) { return 0; }$/;"	f
omp_get_max_threads	src/graphlab/extern/metis/GKlib/omp.c	/^int omp_get_max_threads(void) { return 1; }$/;"	f
omp_get_nested	src/graphlab/extern/metis/GKlib/omp.c	/^int omp_get_nested(void) { return 0; }$/;"	f
omp_get_num_procs	src/graphlab/extern/metis/GKlib/omp.c	/^int omp_get_num_procs(void) { return 1; }$/;"	f
omp_get_num_threads	src/graphlab/extern/metis/GKlib/omp.c	/^int omp_get_num_threads(void) { return 1; }$/;"	f
omp_get_thread_num	src/graphlab/extern/metis/GKlib/omp.c	/^int omp_get_thread_num(void) { return 1; }$/;"	f
omp_in_parallel	src/graphlab/extern/metis/GKlib/omp.c	/^int omp_in_parallel(void) { return 0; }$/;"	f
omp_set_dynamic	src/graphlab/extern/metis/GKlib/omp.c	/^void omp_set_dynamic(int num_threads) { return; }$/;"	f
omp_set_nested	src/graphlab/extern/metis/GKlib/omp.c	/^void omp_set_nested(int nested) { return; }$/;"	f
omp_set_num_threads	src/graphlab/extern/metis/GKlib/omp.c	/^void omp_set_num_threads(int num_threads) { return; }$/;"	f
on_empty_block	src/graphlab/extern/bitmagic/bmblocks.h	/^        void on_empty_block(unsigned \/* block_idx*\/ ) { ++empty_; }$/;"	f	class:bm::blocks_manager::block_opt_func
on_empty_block	src/graphlab/extern/bitmagic/bmblocks.h	/^        void on_empty_block(unsigned \/* block_idx*\/ ) {}$/;"	f	class:bm::blocks_manager::bm_func_base
on_empty_block	src/graphlab/extern/bitmagic/bmblocks.h	/^        void on_empty_block(unsigned \/* block_idx*\/ ) {}$/;"	f	class:bm::blocks_manager::bm_func_base_const
on_empty_top	src/graphlab/extern/bitmagic/bmblocks.h	/^        void on_empty_top(unsigned \/* top_block_idx*\/ ) {}$/;"	f	class:bm::blocks_manager::bm_func_base
on_empty_top	src/graphlab/extern/bitmagic/bmblocks.h	/^        void on_empty_top(unsigned \/* top_block_idx*\/ ) {}$/;"	f	class:bm::blocks_manager::bm_func_base_const
on_empty_top	src/graphlab/extern/bitmagic/bmblocks.h	/^        void on_empty_top(unsigned i)$/;"	f	class:bm::blocks_manager::block_opt_func
only_local_edges	src/graphlab/distributed/graph/distributed_graph.hpp	/^    bool only_local_edges;$/;"	m	class:graphlab::distributed_graph
op_and	src/graphlab/extern/bitmagic/bmsse4.h	/^unsigned op_and(unsigned a, unsigned b)$/;"	f	namespace:bm
op_or	src/graphlab/extern/bitmagic/bmsse4.h	/^unsigned op_or(unsigned a, unsigned b)$/;"	f	namespace:bm
op_xor	src/graphlab/extern/bitmagic/bmsse4.h	/^unsigned op_xor(unsigned a, unsigned b)$/;"	f	namespace:bm
opcy	src/graphlab/extern/metis/GKlib/gk_struct.h	/^	double    opcy;$/;"	m	struct:__anon12
open_listening_udt	src/graphlab/distributed/distributed_control.cpp	/^void distributed_control::open_listening_udt() {$/;"	f	class:graphlab::distributed_control
operation	src/graphlab/extern/bitmagic/bmfunc.h	/^enum operation$/;"	g	namespace:bm
operation2metric	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^distance_metric operation2metric(set_operation op)$/;"	f	namespace:bm
operation_deserializer	src/graphlab/extern/bitmagic/bmserial.h	/^class operation_deserializer$/;"	c	namespace:bm
operation_functions	src/graphlab/extern/bitmagic/bmfunc.h	/^struct operation_functions$/;"	s	namespace:bm
operator !	src/graphlab/extern/bitmagic/bm.h	/^        bool operator!() const$/;"	f	class:bm::bvector::reference
operator !=	src/graphlab/extern/bitmagic/bm.h	/^        bool operator!=(const iterator_base& it) const$/;"	f	class:bm::bvector::iterator_base
operator !=	src/graphlab/extern/bitmagic/bm.h	/^    bool operator != (const bvector<Alloc, MS>& bvect) const$/;"	f	class:bm::bvector
operator !=	src/graphlab/factors/table_factor.hpp	/^    bool operator!=(const assignment& other) const {$/;"	f	class:graphlab::assignment
operator !=	src/graphlab/factors/table_factor.hpp	/^    bool operator!=(const domain& other) {$/;"	f	class:graphlab::domain
operator !=	src/graphlab/factors/table_factor.hpp	/^    bool operator!=(const variable& other) const { return id != other.id; }$/;"	f	struct:graphlab::variable
operator &	src/graphlab/extern/bitmagic/bm.h	/^inline bvector<Alloc, MS> operator& (const bvector<Alloc, MS>& v1,$/;"	f	namespace:bm
operator &	src/graphlab/factors/table_factor.hpp	/^    assignment operator&(const assignment& other) const {$/;"	f	class:graphlab::assignment
operator &=	src/graphlab/extern/bitmagic/bm.h	/^        const reference& operator&=(bool value) const$/;"	f	class:bm::bvector::reference
operator &=	src/graphlab/extern/bitmagic/bm.h	/^    void operator &= (const bvector<Alloc, MS>& bvect)$/;"	f	class:bm::bvector
operator &=	src/graphlab/factors/table_factor.hpp	/^    inline assignment& operator&=(const assignment& asg2) {$/;"	f	class:graphlab::assignment
operator ()	src/graphlab/distributed/graph/distributed_graph.hpp	/^      bool operator()(edge_id_t a, edge_id_t b) {$/;"	f	struct:graphlab::distributed_graph::edge_id_less_functor
operator ()	src/graphlab/extern/bitmagic/bmblocks.h	/^        bool operator()(const bm::word_t* block, unsigned idx)$/;"	f	class:bm::blocks_manager::block_any_func
operator ()	src/graphlab/extern/bitmagic/bmblocks.h	/^        void operator()(bm::word_t* block, unsigned idx)$/;"	f	class:bm::blocks_manager::block_copy_func
operator ()	src/graphlab/extern/bitmagic/bmblocks.h	/^        void operator()(bm::word_t* block, unsigned idx)$/;"	f	class:bm::blocks_manager::block_free_func
operator ()	src/graphlab/extern/bitmagic/bmblocks.h	/^        void operator()(bm::word_t* block, unsigned idx)$/;"	f	class:bm::blocks_manager::block_invert_func
operator ()	src/graphlab/extern/bitmagic/bmblocks.h	/^        void operator()(bm::word_t* block, unsigned idx)$/;"	f	class:bm::blocks_manager::block_one_func
operator ()	src/graphlab/extern/bitmagic/bmblocks.h	/^        void operator()(bm::word_t* block, unsigned idx)$/;"	f	class:bm::blocks_manager::block_opt_func
operator ()	src/graphlab/extern/bitmagic/bmblocks.h	/^        void operator()(bm::word_t* block, unsigned idx)$/;"	f	class:bm::blocks_manager::block_zero_func
operator ()	src/graphlab/extern/bitmagic/bmblocks.h	/^        void operator()(bm::word_t* block, unsigned idx)$/;"	f	class:bm::blocks_manager::gap_level_func
operator ()	src/graphlab/extern/bitmagic/bmblocks.h	/^        void operator()(const bm::word_t* block, unsigned idx)$/;"	f	class:bm::blocks_manager::block_count_arr_func
operator ()	src/graphlab/extern/bitmagic/bmblocks.h	/^        void operator()(const bm::word_t* block, unsigned idx)$/;"	f	class:bm::blocks_manager::block_count_change_func
operator ()	src/graphlab/extern/bitmagic/bmblocks.h	/^        void operator()(const bm::word_t* block, unsigned idx)$/;"	f	class:bm::blocks_manager::block_count_func
operator ()	src/graphlab/extern/bitmagic/bmfunc.h	/^	void operator()(unsigned bit_idx) $/;"	f	class:bm::copy_to_array_functor_inc
operator ()	src/graphlab/extern/bitmagic/bmfunc.h	/^	void operator()(unsigned bit_idx) { *bp_++ = (B)bit_idx; }$/;"	f	class:bm::copy_to_array_functor
operator ()	src/graphlab/extern/bitmagic/bmfunc.h	/^	void operator()(unsigned bit_idx0, $/;"	f	class:bm::copy_to_array_functor
operator ()	src/graphlab/extern/bitmagic/bmfunc.h	/^	void operator()(unsigned bit_idx0, $/;"	f	class:bm::copy_to_array_functor_inc
operator ()	src/graphlab/extern/bitmagic/bmfunc.h	/^    W operator()(W w1, W w2) $/;"	f	struct:bm::bit_COUNT
operator ()	src/graphlab/extern/bitmagic/bmfunc.h	/^    W operator()(W w1, W w2) $/;"	f	struct:bm::bit_COUNT_A
operator ()	src/graphlab/extern/bitmagic/bmfunc.h	/^    W operator()(W w1, W w2) $/;"	f	struct:bm::bit_COUNT_AND
operator ()	src/graphlab/extern/bitmagic/bmfunc.h	/^    W operator()(W w1, W w2) $/;"	f	struct:bm::bit_COUNT_B
operator ()	src/graphlab/extern/bitmagic/bmfunc.h	/^    W operator()(W w1, W w2) $/;"	f	struct:bm::bit_COUNT_OR
operator ()	src/graphlab/extern/bitmagic/bmfunc.h	/^    W operator()(W w1, W w2) $/;"	f	struct:bm::bit_COUNT_SUB_AB
operator ()	src/graphlab/extern/bitmagic/bmfunc.h	/^    W operator()(W w1, W w2) $/;"	f	struct:bm::bit_COUNT_SUB_BA
operator ()	src/graphlab/extern/bitmagic/bmfunc.h	/^    W operator()(W w1, W w2) $/;"	f	struct:bm::bit_COUNT_XOR
operator ()	src/graphlab/extern/bitmagic/bmfunc.h	/^    W operator()(W w1, W w2) { return w1 & w2; }$/;"	f	struct:bm::bit_AND
operator ()	src/graphlab/extern/bitmagic/bmfunc.h	/^    W operator()(W w1, W w2) { return w1 & ~w2; }$/;"	f	struct:bm::bit_SUB
operator ()	src/graphlab/extern/bitmagic/bmfunc.h	/^    W operator()(W w1, W w2) { return w1 ^ w2; }$/;"	f	struct:bm::bit_XOR
operator ()	src/graphlab/extern/bitmagic/bmfunc.h	/^    W operator()(W w1, W w2) { return w1 | w2; }$/;"	f	struct:bm::bit_OR
operator ()	src/graphlab/extern/bitmagic/bmfunc.h	/^    W operator()(W w1, W w2) { return w2; }$/;"	f	struct:bm::bit_ASSIGN
operator ()	src/graphlab/extern/bitmagic/bmfunc.h	/^    void operator()(T dgap) { *dgap_buf_++ = dgap; }$/;"	f	struct:bm::d_copy_func
operator ()	src/graphlab/extern/bitmagic/bmgamma.h	/^    T operator()(void)$/;"	f	class:bm::gamma_decoder
operator ()	src/graphlab/extern/bitmagic/encoding.h	/^    T operator()(void)$/;"	f	class:bm::gamma_decoder
operator ()	src/graphlab/extern/bitmagic/encoding.h	/^    void operator()(T value)$/;"	f	class:bm::gamma_encoder
operator ()	src/graphlab/graph/graph.hpp	/^      bool operator()(edge_id_t a, edge_id_t b) {$/;"	f	struct:graphlab::graph::edge_id_less_functor
operator ()	src/graphlab/tasks/update_task.hpp	/^      size_t operator()(const update_task& t) const { return t.hash();  }$/;"	f	struct:graphlab::update_task::hash_functor
operator ()	src/graphlab/util/hash_functions.hpp	/^    size_t operator()(const size_t &t) const{$/;"	f	class:graphlab::identity_hash
operator *	src/graphlab/extern/bitmagic/bm.h	/^        bm::id_t operator*() const$/;"	f	class:bm::bvector::enumerator
operator *	src/graphlab/extern/bitmagic/bm.h	/^        insert_iterator& operator*() { return *this; }$/;"	f	class:bm::bvector::insert_iterator
operator *	src/graphlab/factors/table_factor.hpp	/^    table_factor operator*(const table_factor& other) const {$/;"	f	class:graphlab::table_factor
operator *=	src/graphlab/factors/table_factor.hpp	/^    inline table_factor& operator*=(const table_factor& other) {$/;"	f	class:graphlab::table_factor
operator +	src/graphlab/factors/table_factor.hpp	/^    domain operator+(const domain& other) const {$/;"	f	class:graphlab::domain
operator ++	src/graphlab/extern/bitmagic/bm.h	/^        counted_enumerator operator++(int)$/;"	f	class:bm::bvector::counted_enumerator
operator ++	src/graphlab/extern/bitmagic/bm.h	/^        counted_enumerator& operator++()$/;"	f	class:bm::bvector::counted_enumerator
operator ++	src/graphlab/extern/bitmagic/bm.h	/^        enumerator operator++(int)$/;"	f	class:bm::bvector::enumerator
operator ++	src/graphlab/extern/bitmagic/bm.h	/^        enumerator& operator++()$/;"	f	class:bm::bvector::enumerator
operator ++	src/graphlab/extern/bitmagic/bm.h	/^        insert_iterator& operator++() { return *this; }$/;"	f	class:bm::bvector::insert_iterator
operator ++	src/graphlab/extern/bitmagic/bm.h	/^        insert_iterator& operator++(int) { return *this; }$/;"	f	class:bm::bvector::insert_iterator
operator ++	src/graphlab/factors/table_factor.hpp	/^    assignment& operator++() {$/;"	f	class:graphlab::assignment
operator +=	src/graphlab/factors/table_factor.hpp	/^    domain& operator+=(const domain& other) {$/;"	f	class:graphlab::domain
operator +=	src/graphlab/factors/table_factor.hpp	/^    inline table_factor& operator+=(const table_factor& other) {$/;"	f	class:graphlab::table_factor
operator -	src/graphlab/extern/bitmagic/bm.h	/^inline bvector<Alloc, MS> operator- (const bvector<Alloc, MS>& v1,$/;"	f	namespace:bm
operator -	src/graphlab/factors/table_factor.hpp	/^    domain operator-(const domain& other) const {$/;"	f	class:graphlab::domain
operator -=	src/graphlab/extern/bitmagic/bm.h	/^    void operator -= (const bvector<Alloc, MS>& bvect)$/;"	f	class:bm::bvector
operator -=	src/graphlab/factors/table_factor.hpp	/^    domain& operator-=(const domain& other) {$/;"	f	class:graphlab::domain
operator /	src/graphlab/factors/table_factor.hpp	/^    table_factor operator\/(const table_factor& other) const {$/;"	f	class:graphlab::table_factor
operator /=	src/graphlab/factors/table_factor.hpp	/^    inline table_factor& operator\/=(const table_factor& other) {$/;"	f	class:graphlab::table_factor
operator <	src/graphlab/distributed/lock_manager.hpp	/^  bool operator<(const lockrequest &req) const {$/;"	f	struct:graphlab::lockrequest
operator <	src/graphlab/extern/bitmagic/bm.h	/^        bool operator < (const iterator_base& it) const$/;"	f	class:bm::bvector::iterator_base
operator <	src/graphlab/extern/bitmagic/bm.h	/^    bool operator < (const bvector<Alloc, MS>& bvect) const$/;"	f	class:bm::bvector
operator <	src/graphlab/factors/table_factor.hpp	/^    bool operator<(const assignment& other) const {$/;"	f	class:graphlab::assignment
operator <	src/graphlab/factors/table_factor.hpp	/^    bool operator<(const variable& other) const { return id < other.id; }$/;"	f	struct:graphlab::variable
operator <	src/graphlab/graph/graph.hpp	/^      bool operator<(const edge& other) const {$/;"	f	class:graphlab::graph::edge
operator <	src/graphlab/tasks/update_task.hpp	/^    bool operator<(const update_task &i) const{$/;"	f	class:graphlab::update_task
operator <<	src/graphlab/factors/binary_factor.cpp	/^std::ostream& operator<<(std::ostream& out, $/;"	f
operator <<	src/graphlab/factors/table_factor.cpp	/^std::ostream& operator<<(std::ostream& out, const graphlab::variable& var) {$/;"	f
operator <<	src/graphlab/factors/table_factor.hpp	/^std::ostream& operator<<(std::ostream& out,$/;"	f
operator <<	src/graphlab/factors/unary_factor.cpp	/^std::ostream& operator<<(std::ostream& out, $/;"	f
operator <<	src/graphlab/graph/graph.hpp	/^  std::ostream& operator<<(std::ostream& out,$/;"	f	namespace:graphlab
operator <<	src/graphlab/logger/logger.hpp	/^  file_logger& operator<<(T a) {$/;"	f	class:file_logger
operator <<	src/graphlab/logger/logger.hpp	/^  file_logger& operator<<(const char* a) {$/;"	f	class:file_logger
operator <<	src/graphlab/serialization/judy_map_kdcell.hpp	/^  oarchive& operator<<(oarchive& a, const judy_map_kdcell<T,U>& vec){$/;"	f	namespace:graphlab
operator <<	src/graphlab/serialization/list.hpp	/^  oarchive& operator<<(oarchive& a, const std::list<T>& vec){$/;"	f	namespace:graphlab
operator <<	src/graphlab/serialization/map.hpp	/^  oarchive& operator<<(oarchive& a, const std::map<T,U>& vec){$/;"	f	namespace:graphlab
operator <<	src/graphlab/serialization/oarchive.cpp	/^  oarchive& operator<<(oarchive& a, const char i) {$/;"	f	namespace:graphlab
operator <<	src/graphlab/serialization/oarchive.cpp	/^  oarchive& operator<<(oarchive& a, const char* s) {$/;"	f	namespace:graphlab
operator <<	src/graphlab/serialization/oarchive.cpp	/^  oarchive& operator<<(oarchive& a, const std::string& s){$/;"	f	namespace:graphlab
operator <<	src/graphlab/serialization/oarchive.cpp	/^  oarchive& operator<<(oarchive& a, void* const t) {$/;"	f	namespace:graphlab
operator <<	src/graphlab/serialization/oarchive.cpp	/^  oarchive& operator<<(oarchive& a,const double i) {$/;"	f	namespace:graphlab
operator <<	src/graphlab/serialization/oarchive.cpp	/^  oarchive& operator<<(oarchive& a,const float i) {$/;"	f	namespace:graphlab
operator <<	src/graphlab/serialization/oarchive.hpp	/^  inline oarchive& operator<<(oarchive& a, const T& t) {$/;"	f	namespace:graphlab
operator <<	src/graphlab/serialization/oarchive.hpp	/^  oarchive& operator<<(oarchive& a, const std::pair<T,U>& p) {$/;"	f	namespace:graphlab
operator <<	src/graphlab/serialization/set.hpp	/^  oarchive& operator<<(oarchive& a, const std::set<T>& vec){$/;"	f	namespace:graphlab
operator <<	src/graphlab/serialization/vector.hpp	/^  oarchive& operator<<(oarchive& a, const std::vector<T>& vec){$/;"	f	namespace:graphlab
operator <<	src/graphlab/util/stl_util.hpp	/^  std::ostream& operator<<(std::ostream& out, const std::map<Key, T>& m) {$/;"	f	namespace:graphlab
operator <<	src/graphlab/util/stl_util.hpp	/^  std::ostream& operator<<(std::ostream& out, const std::set<T>& s) {$/;"	f	namespace:graphlab
operator <<	src/graphlab/util/timer.cpp	/^std::ostream&  operator<<(std::ostream& out, const graphlab::timer& t) {$/;"	f
operator <=	src/graphlab/extern/bitmagic/bm.h	/^        bool operator <= (const iterator_base& it) const$/;"	f	class:bm::bvector::iterator_base
operator <=	src/graphlab/extern/bitmagic/bm.h	/^    bool operator <= (const bvector<Alloc, MS>& bvect) const$/;"	f	class:bm::bvector
operator =	src/graphlab/distributed/graph/cloned_graph.hpp	/^      operator=(const graph<VertexData, EdgeData> &g) { $/;"	f	class:graphlab::cloned_graph
operator =	src/graphlab/distributed/graph/distributed_graph.hpp	/^      operator=(const graph<VertexData, EdgeData> &g) { $/;"	f	class:graphlab::distributed_graph
operator =	src/graphlab/extern/bitmagic/bm.h	/^        const reference& operator=(bool value) const$/;"	f	class:bm::bvector::reference
operator =	src/graphlab/extern/bitmagic/bm.h	/^        const reference& operator=(const reference& ref) const$/;"	f	class:bm::bvector::reference
operator =	src/graphlab/extern/bitmagic/bm.h	/^        counted_enumerator& operator=(const enumerator& en)$/;"	f	class:bm::bvector::counted_enumerator
operator =	src/graphlab/extern/bitmagic/bm.h	/^        insert_iterator& operator=(bm::id_t n)$/;"	f	class:bm::bvector::insert_iterator
operator =	src/graphlab/extern/bitmagic/bm.h	/^    bvector& operator=(const bvector<Alloc, MS>& bvect)$/;"	f	class:bm::bvector
operator =	src/graphlab/factors/binary_factor.hpp	/^    binary_factor& operator=(const binary_factor& other) {$/;"	f	class:graphlab::binary_factor
operator =	src/graphlab/factors/table_factor.hpp	/^    table_factor& operator=(const table_factor& other) {$/;"	f	class:graphlab::table_factor
operator =	src/graphlab/factors/unary_factor.hpp	/^    unary_factor& operator=(const unary_factor& other) {$/;"	f	class:graphlab::unary_factor
operator =	src/graphlab/util/dense_bitset.hpp	/^    inline dense_bitset& operator=(const dense_bitset& db) {$/;"	f	class:graphlab::dense_bitset
operator =	src/graphlab/util/dense_bitset.hpp	/^    inline fixed_dense_bitset& operator=(const fixed_dense_bitset& db) {$/;"	f	class:graphlab::fixed_dense_bitset
operator =	src/graphlab/util/generics/any.hpp	/^    any& operator=(const ValueType & rhs) {$/;"	f	class:graphlab::any
operator =	src/graphlab/util/generics/any.hpp	/^    any& operator=(const any & rhs) {$/;"	f	class:graphlab::any
operator =	src/graphlab/util/generics/blob.hpp	/^    blob& operator=(const blob& b){$/;"	f	class:graphlab::blob
operator ==	src/graphlab/distributed/lock_manager.hpp	/^  bool operator==(const lockrequest &req) const {$/;"	f	struct:graphlab::lockrequest
operator ==	src/graphlab/extern/bitmagic/bm.h	/^        bool operator==(const iterator_base& it) const$/;"	f	class:bm::bvector::iterator_base
operator ==	src/graphlab/extern/bitmagic/bm.h	/^        bool operator==(const reference& ref) const$/;"	f	class:bm::bvector::reference
operator ==	src/graphlab/extern/bitmagic/bm.h	/^    bool operator == (const bvector<Alloc, MS>& bvect) const$/;"	f	class:bm::bvector
operator ==	src/graphlab/factors/table_factor.hpp	/^    bool operator==(const assignment& other) const {$/;"	f	class:graphlab::assignment
operator ==	src/graphlab/factors/table_factor.hpp	/^    bool operator==(const domain& other) const {$/;"	f	class:graphlab::domain
operator ==	src/graphlab/factors/table_factor.hpp	/^    bool operator==(const variable& other) const {$/;"	f	struct:graphlab::variable
operator ==	src/graphlab/tasks/update_task.hpp	/^    bool operator==(const update_task &i) const{$/;"	f	class:graphlab::update_task
operator >	src/graphlab/extern/bitmagic/bm.h	/^        bool operator > (const iterator_base& it) const$/;"	f	class:bm::bvector::iterator_base
operator >	src/graphlab/extern/bitmagic/bm.h	/^    bool operator > (const bvector<Alloc, MS>& bvect) const$/;"	f	class:bm::bvector
operator >=	src/graphlab/extern/bitmagic/bm.h	/^        bool operator >= (const iterator_base& it) const$/;"	f	class:bm::bvector::iterator_base
operator >=	src/graphlab/extern/bitmagic/bm.h	/^    bool operator >= (const bvector<Alloc, MS>& bvect) const$/;"	f	class:bm::bvector
operator >>	src/graphlab/serialization/iarchive.cpp	/^  iarchive& operator>>(iarchive& a, char& i) {$/;"	f	namespace:graphlab
operator >>	src/graphlab/serialization/iarchive.cpp	/^  iarchive& operator>>(iarchive& a, char*& s) {$/;"	f	namespace:graphlab
operator >>	src/graphlab/serialization/iarchive.cpp	/^  iarchive& operator>>(iarchive& a, double& i) {$/;"	f	namespace:graphlab
operator >>	src/graphlab/serialization/iarchive.cpp	/^  iarchive& operator>>(iarchive& a, float& i) {$/;"	f	namespace:graphlab
operator >>	src/graphlab/serialization/iarchive.cpp	/^  iarchive& operator>>(iarchive& a, std::string& s){$/;"	f	namespace:graphlab
operator >>	src/graphlab/serialization/iarchive.cpp	/^  iarchive& operator>>(iarchive& a, void* &t) {$/;"	f	namespace:graphlab
operator >>	src/graphlab/serialization/iarchive.hpp	/^  iarchive& operator>>(iarchive& a, std::pair<T,U>& p){$/;"	f	namespace:graphlab
operator >>	src/graphlab/serialization/iarchive.hpp	/^  inline iarchive& operator>>(iarchive& a, T& t) {$/;"	f	namespace:graphlab
operator >>	src/graphlab/serialization/judy_map_kdcell.hpp	/^  iarchive& operator>>(iarchive& a, judy_map_kdcell<T,U>& vec){$/;"	f	namespace:graphlab
operator >>	src/graphlab/serialization/list.hpp	/^  iarchive& operator>>(iarchive& a, std::list<T>& vec){$/;"	f	namespace:graphlab
operator >>	src/graphlab/serialization/map.hpp	/^  iarchive& operator>>(iarchive& a, std::map<T,U>& vec){$/;"	f	namespace:graphlab
operator >>	src/graphlab/serialization/set.hpp	/^  iarchive& operator>>(iarchive& a, std::set<T>& vec){$/;"	f	namespace:graphlab
operator >>	src/graphlab/serialization/vector.hpp	/^  iarchive& operator>>(iarchive& a, std::vector<T>& vec){$/;"	f	namespace:graphlab
operator []	src/graphlab/extern/bitmagic/bm.h	/^    bool operator[](bm::id_t n) const$/;"	f	class:bm::bvector
operator []	src/graphlab/extern/bitmagic/bm.h	/^    reference operator[](bm::id_t n)$/;"	f	class:bm::bvector
operator []	src/graphlab/util/mutable_queue.hpp	/^    Priority operator[](T item) const {$/;"	f	class:graphlab::mutable_queue
operator []	src/graphlab/util/mutable_queue.hpp	/^    Priority operator[](size_t item) const {$/;"	f	class:graphlab::mutable_queue
operator ^	src/graphlab/extern/bitmagic/bm.h	/^inline bvector<Alloc, MS> operator^ (const bvector<Alloc, MS>& v1,$/;"	f	namespace:bm
operator ^=	src/graphlab/extern/bitmagic/bm.h	/^        const reference& operator^=(bool value) const$/;"	f	class:bm::bvector::reference
operator ^=	src/graphlab/extern/bitmagic/bm.h	/^    void operator ^= (const bvector<Alloc, MS>& bvect)$/;"	f	class:bm::bvector
operator bool	src/graphlab/extern/bitmagic/bm.h	/^        operator bool() const$/;"	f	class:bm::bvector::reference
operator |	src/graphlab/extern/bitmagic/bm.h	/^inline bvector<Alloc, MS> operator| (const bvector<Alloc, MS>& v1,$/;"	f	namespace:bm
operator |=	src/graphlab/extern/bitmagic/bm.h	/^        const reference& operator|=(bool value) const$/;"	f	class:bm::bvector::reference
operator |=	src/graphlab/extern/bitmagic/bm.h	/^    void operator |= (const bvector<Alloc, MS>& bvect)$/;"	f	class:bm::bvector
operator ~	src/graphlab/extern/bitmagic/bm.h	/^        bool operator~() const$/;"	f	class:bm::bvector::reference
operator ~	src/graphlab/extern/bitmagic/bm.h	/^    bvector<Alloc, MS> operator~() const$/;"	f	class:bm::bvector
opt_compress	src/graphlab/extern/bitmagic/bm.h	/^        opt_compress  = 3  \/\/\/< compress blocks when possible$/;"	e	enum:bm::bvector::optmode
opt_free_0	src/graphlab/extern/bitmagic/bm.h	/^        opt_free_0    = 1, \/\/\/< Free unused 0 blocks$/;"	e	enum:bm::bvector::optmode
opt_free_01	src/graphlab/extern/bitmagic/bm.h	/^        opt_free_01   = 2, \/\/\/< Free unused 0 and 1 blocks$/;"	e	enum:bm::bvector::optmode
opt_mode_	src/graphlab/extern/bitmagic/bmblocks.h	/^        int                 opt_mode_;$/;"	m	class:bm::blocks_manager::block_opt_func
optimal_termination	src/graphlab/util/optimal_termination.hpp	/^    optimal_termination(size_t _ncpus):worker(this),t(&worker) {$/;"	f	class:graphlab::optimal_termination
optimal_termination	src/graphlab/util/optimal_termination.hpp	/^  class optimal_termination {$/;"	c	namespace:graphlab
optimal_termination_worker	src/graphlab/util/optimal_termination.hpp	/^      optimal_termination_worker(optimal_termination* _st) : st(_st) {  }$/;"	f	class:graphlab::optimal_termination::optimal_termination_worker
optimal_termination_worker	src/graphlab/util/optimal_termination.hpp	/^    class optimal_termination_worker: public runnable {      $/;"	c	class:graphlab::optimal_termination
optimize	src/graphlab/extern/bitmagic/bm.h	/^void bvector<Alloc, MS>::optimize(bm::word_t* temp_block, $/;"	f	class:bm::bvector
optimize_gap_size	src/graphlab/extern/bitmagic/bm.h	/^void bvector<Alloc, MS>::optimize_gap_size()$/;"	f	class:bm::bvector
optional_argument	src/graphlab/extern/metis/GKlib/gk_getopt.h	54;"	d
options	apps/factor_graph_inference/factor_bp.cpp	/^struct options {$/;"	s	file:
options	apps/factor_graph_inference/factor_gibbs.cpp	/^struct options {$/;"	s	file:
options	apps/image_denoise/gibbs_denoise.cpp	/^struct options {$/;"	s	file:
options	apps/image_denoise/loopybp_denoise.cpp	/^struct options {$/;"	s	file:
options_enum	src/graphlab/schedulers/ischeduler.hpp	/^    enum options_enum {$/;"	g	struct:graphlab::scheduler_options
optmode	src/graphlab/extern/bitmagic/bm.h	/^    enum optmode$/;"	g	class:bm::bvector
optype	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype optype;			\/* Type of operation *\/$/;"	m	struct:controldef
or_bit_block	src/graphlab/extern/bitmagic/bmfunc.h	/^inline void or_bit_block(unsigned* dest, $/;"	f	namespace:bm
ordblks	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	/^  MALLINFO_FIELD_TYPE ordblks;  \/* number of free chunks *\/$/;"	m	struct:mallinfo
ordering	src/graphlab/extern/metis/GKlib/getopt.c	/^} ordering;$/;"	v	typeref:enum:__anon6	file:
orig_fn	apps/image_denoise/gibbs_denoise.cpp	/^  std::string orig_fn;$/;"	m	struct:options	file:
orig_fn	apps/image_denoise/loopybp_denoise.cpp	/^  std::string orig_fn;$/;"	m	struct:options	file:
out_edge_ids	src/graphlab/distributed/graph/cloned_graph.hpp	/^    const std::vector<edge_id_t>& out_edge_ids(vertex_id_t v) const {$/;"	f	class:graphlab::cloned_graph
out_edge_ids	src/graphlab/distributed/graph/distributed_graph.hpp	/^    const std::vector<edge_id_t>& out_edge_ids(vertex_id_t v) const {$/;"	f	class:graphlab::distributed_graph
out_edge_ids	src/graphlab/graph/graph.hpp	/^    const std::vector<edge_id_t>& out_edge_ids(vertex_id_t v) const {$/;"	f	class:graphlab::graph
out_edge_ids	src/graphlab/scope/iscope.hpp	/^    const std::vector<edge_id_t>& out_edge_ids() const {$/;"	f	class:graphlab::iscope
out_edge_ids	src/graphlab/scope/iscope.hpp	/^    const std::vector<edge_id_t>& out_edge_ids(vertex_id_t v) const {$/;"	f	class:graphlab::iscope
out_edges	src/graphlab/graph/graph.hpp	/^    std::vector< std::vector<edge_id_t> >  out_edges;$/;"	m	class:graphlab::graph
output_priority_freq_tasks	src/graphlab/monitoring/console_monitor.hpp	/^    unsigned long output_priority_freq_tasks;$/;"	m	class:graphlab::console_monitor
overhead_for	src/graphlab/extern/metis/GKlib/dlmalloc.c	854;"	d	file:
owner	src/graphlab/distributed/graph/cloned_graph.hpp	/^    const procid_t owner(const vertex_id_t &v) const{$/;"	f	class:graphlab::cloned_graph
owner	src/graphlab/distributed/graph/distributed_graph.hpp	/^    const procid_t owner(const vertex_id_t &v) const{$/;"	f	class:graphlab::distributed_graph
owner	src/graphlab/distributed/graph_lock_manager.hpp	/^      graph_lock_manager<Graph> &owner;$/;"	m	class:graphlab::graph_lock_manager::background_unlock_thread
owner	src/graphlab/distributed/graph_lock_manager.hpp	/^      graph_lock_manager<Graph> &owner;$/;"	m	class:graphlab::graph_lock_manager::lock_send_request_thread
owner2vertex	src/graphlab/distributed/graph/cloned_graph.hpp	/^    std::vector<std::vector<vertex_id_t> > owner2vertex;$/;"	m	class:graphlab::cloned_graph
pack_edge_writes	src/graphlab/distributed/graph_lock_manager.hpp	/^void pack_edge_writes(const std::vector<edge_id_t> &edgelist, $/;"	f	class:graphlab::graph_lock_manager
pack_vertex_writes	src/graphlab/distributed/graph_lock_manager.hpp	/^  void pack_vertex_writes(const std::vector<lockrequest> &lockreqs, $/;"	f	class:graphlab::graph_lock_manager
packet_ids	src/graphlab/distributed/dc_packet_headers.hpp	/^enum packet_ids{$/;"	g	namespace:graphlab
packtype	src/graphlab/distributed/dc_packet_headers.hpp	/^  uint16_t packtype;$/;"	m	struct:graphlab::fence_packdata
packtype	src/graphlab/distributed/dc_packet_headers.hpp	/^  uint16_t packtype;$/;"	m	struct:graphlab::remotecall_packdata
packtype	src/graphlab/distributed/dc_packet_headers.hpp	/^  uint16_t packtype;$/;"	m	struct:graphlab::remotecallx_packdata
packtype	src/graphlab/distributed/dc_packet_headers.hpp	/^  uint16_t packtype;$/;"	m	struct:graphlab::remotecallxs_packdata
pad_request	src/graphlab/extern/metis/GKlib/dlmalloc.c	790;"	d	file:
page_align	src/graphlab/extern/metis/GKlib/dlmalloc.c	1215;"	d	file:
page_size	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  size_t page_size;$/;"	m	struct:malloc_params	file:
pagerank_graph	apps/pagerank/pagerank.cpp	/^typedef graphlab::graph<vertex_data, edge_data> pagerank_graph;$/;"	t	file:
pagerank_graph	apps/pagerank/pagerankapp.hpp	/^typedef graph<vertex_data, edge_data> pagerank_graph;$/;"	t
pagerank_graph	apps/pagerank/sync_pagerank.cpp	/^typedef graphlab::graph<vertex_data, edge_data> pagerank_graph;$/;"	t	file:
pagerank_init	apps/pagerank/pagerank.cpp	/^void pagerank_init(gl_types::iscope &scope,$/;"	f
pagerank_init	apps/pagerank/sync_pagerank.cpp	/^void pagerank_init(gl_types::iscope &scope,$/;"	f
pagerank_update	apps/pagerank/pagerank.cpp	/^void pagerank_update(gl_types::iscope &scope,$/;"	f
pagerank_update	apps/pagerank/sync_pagerank.cpp	/^void pagerank_update(gl_types::iscope &scope,$/;"	f
pagerankapp	apps/pagerank/pagerankapp.cpp	/^pagerankapp::pagerankapp(std::string ifile, std::string bfile, bool optimize) {$/;"	f	class:pagerankapp
pagerankapp	apps/pagerank/pagerankapp.hpp	/^class pagerankapp : public iapp<pagerank_graph> {$/;"	c
pagerankdumper	apps/pagerank/pagerankapp.cpp	/^std::vector<double> pagerankdumper(gl_types::graph &g) {$/;"	f
paint_sunset	apps/image_denoise/image.hpp	/^void image::paint_sunset(size_t num_rings) {$/;"	f	class:image
par_transform	src/graphlab/util/par_transform.hpp	/^  void par_transform(Iterator start, Iterator end, const TransformF& f, size_t ncpus = 0){$/;"	f	namespace:graphlab
par_transform	src/graphlab/util/par_transform.hpp	/^  void par_transform(Iterator start, Iterator end, const TransformF& f,$/;"	f	namespace:graphlab
parallel_graph_color	apps/factor_graph_inference/factor_gibbs.hpp	/^uint16_t parallel_graph_color(gl_types::graph& graph,$/;"	f
parallel_popcnt_32	src/graphlab/extern/bitmagic/bmfunc.h	/^unsigned parallel_popcnt_32(unsigned b)$/;"	f	namespace:bm
params	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      sync_params params;$/;"	m	struct:graphlab::distributed_fullsweep_sdm::sync_task
params	src/graphlab/distributed/distributed_shared_data.hpp	/^      sync_params params;$/;"	m	struct:graphlab::distributed_shared_data::sync_state
params	src/graphlab/distributed/distributed_shared_data.hpp	/^      sync_params params;$/;"	m	struct:graphlab::distributed_shared_data::sync_task
parent	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  struct malloc_tree_chunk* parent;$/;"	m	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk	file:
parent	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^      set_scheduler* parent;$/;"	m	class:graphlab::set_scheduler::scheduler_worker
parent	src/graphlab/util/fast_multinomial.hpp	/^    size_t parent(size_t i) const { return (i-1) \/ 2; }$/;"	f	class:graphlab::fast_multinomial
parent	src/graphlab/util/mutable_queue.hpp	/^    size_t parent(size_t i) const { $/;"	f	class:graphlab::mutable_queue
parse	src/graphlab/util/command_line_options.hpp	/^    bool parse(int argc, char** argv) {$/;"	f	class:graphlab::command_line_options
parse_command_line	apps/factor_graph_inference/factor_bp.cpp	/^bool parse_command_line(int argc, char** argv, options& opts) {$/;"	f
parse_command_line	apps/factor_graph_inference/factor_gibbs.cpp	/^bool parse_command_line(int argc, char** argv, options& opts) {$/;"	f
parse_command_line	apps/image_denoise/gibbs_denoise.cpp	/^bool parse_command_line(int argc, char** argv, options& opts) {$/;"	f
parse_engine_options	src/graphlab/core.hpp	/^    bool parse_engine_options(int argc, char **argv) {$/;"	f	class:graphlab::core
part	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *part;                        \/* The actual partitioning vector *\/$/;"	m	struct:__anon4
partid	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype partid;$/;"	m	struct:__anon3
partition	src/graphlab/distributed/graph/cloned_graph.hpp	/^    void partition(partition_method::partition_method_enum partmethod,$/;"	f	class:graphlab::cloned_graph
partition	src/graphlab/graph/graph.hpp	/^    void partition(partition_method::partition_method_enum partmethod,$/;"	f	class:graphlab::graph
partition_graph_tofile	src/graphlab/distributed/graph/distributed_graph.hpp	/^    static void partition_graph_tofile(graph<VertexData, EdgeData> &_mgraph, int nparts, partition_method::partition_method_enum partmethod,$/;"	f	class:graphlab::distributed_graph
partition_method	src/graphlab.hpp	/^    typedef graphlab::partition_method           partition_method;$/;"	t	struct:graphlab::types
partition_method	src/graphlab/graph/graph.hpp	/^  struct partition_method {$/;"	s	namespace:graphlab
partition_method_enum	src/graphlab/graph/graph.hpp	/^    enum partition_method_enum {$/;"	g	struct:graphlab::partition_method
partmethod	apps/image_denoise/loopybp_denoise.cpp	/^  std::string partmethod;$/;"	m	struct:options	file:
partransform_impl	src/graphlab/util/par_transform.hpp	/^  namespace partransform_impl {$/;"	n	namespace:graphlab
payload	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    	any payload;$/;"	m	struct:graphlab::distributed_fullsweep_sdm::cached_any
pdbf	src/graphlab/extern/metis/GKlib/gk_struct.h	/^} pdbf;$/;"	t	typeref:struct:__anon13
pending_tasks	src/graphlab/distributed/distributed_engine.hpp	/^    pending_tasks_map_type pending_tasks;$/;"	m	class:graphlab::distributed_engine
pending_tasks_map_type	src/graphlab/distributed/distributed_engine.hpp	/^    typedef synchronized_unordered_map<locked_pending_queue_type> pending_tasks_map_type;$/;"	t	class:graphlab::distributed_engine
pendinglocks	src/graphlab/distributed/distributed_shared_data.hpp	/^    atomic<size_t> pendinglocks;$/;"	m	class:graphlab::distributed_shared_data
pendingrequests	src/graphlab/distributed/graph_lock_manager.hpp	/^      std::queue<dist_scope_request> pendingrequests;$/;"	m	struct:graphlab::graph_lock_manager::block_request
pendingtaskctr	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    atomic<size_t> pendingtaskctr;  \/\/\/ A counter of the number of tasks pending$/;"	m	class:graphlab::set_scheduler
pendingtasks	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    synchronized_circular_queue<update_task_type> pendingtasks;$/;"	m	class:graphlab::set_scheduler
perform_tree_merge	src/graphlab/distributed/distributed_shared_data.hpp	/^    void perform_tree_merge(sync_state &state, any &acc, bool mergeacc) {$/;"	f	class:graphlab::distributed_shared_data
pfactor	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype pfactor;			\/* .1*prunning factor *\/$/;"	m	struct:controldef
pfunction	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    priority_function_type pfunction;$/;"	m	class:graphlab::multinomial_vertex_set
pgainspan	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype pgainspan, ngainspan;     \/* plus and negative gain span *\/$/;"	m	struct:PQueueType
pheaderlen_t	src/graphlab/distributed/dc_packet_headers.hpp	/^typedef uint32_t pheaderlen_t;$/;"	t	namespace:graphlab
pid	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype pid;$/;"	m	struct:edegreedef
pid	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype pid;$/;"	m	struct:vedegreedef
pinuse	src/graphlab/extern/metis/GKlib/dlmalloc.c	821;"	d	file:
pixel	apps/image_denoise/image.hpp	/^  double pixel(size_t i) const { return data.at(i); }$/;"	f	class:image
pixel	apps/image_denoise/image.hpp	/^  double pixel(size_t i, size_t j) const { return data[vertid(i,j)]; }$/;"	f	class:image
pixel	apps/image_denoise/image.hpp	/^  double& pixel(size_t i) { return data.at(i); }$/;"	f	class:image
pixel	apps/image_denoise/image.hpp	/^  double& pixel(size_t i, size_t j) { return data[vertid(i,j)]; }$/;"	f	class:image
pixels	apps/image_denoise/image.hpp	/^  size_t pixels() const { return _rows * _cols; }$/;"	f	class:image
plan_edge	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    struct plan_edge { };$/;"	s	class:graphlab::execution_plan
plan_graph_type	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    typedef graph<plan_vertex, plan_edge> plan_graph_type;$/;"	t	class:graphlab::execution_plan
plan_vertex	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    struct plan_vertex {$/;"	s	class:graphlab::execution_plan
planned_color_schedule	apps/factor_graph_inference/factor_gibbs.hpp	/^void planned_color_schedule(gl_types::set_scheduler &sched) {$/;"	f
planorder	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    std::vector<ivertex_set_type*> planorder;$/;"	m	class:graphlab::execution_plan
plus	src/graphlab/factors/unary_factor.hpp	/^    inline void plus(const unary_factor& other) {$/;"	f	class:graphlab::unary_factor
pmat	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *pmat;			\/* An array of k^2 used for eliminating domain $/;"	m	struct:workspacedef
pointer	src/graphlab/extern/bitmagic/bm.h	/^        typedef unsigned*  pointer;$/;"	t	class:bm::bvector::enumerator
pointer	src/graphlab/extern/bitmagic/bm.h	/^        typedef void pointer;$/;"	t	class:bm::bvector::insert_iterator
poll_termination	src/graphlab/util/optimal_termination.hpp	/^    bool poll_termination(size_t cpuid) {$/;"	f	class:graphlab::optimal_termination
pop	src/graphlab/schedulers/support/vertex_task_set.hpp	/^    bool pop(size_t vertex_id,$/;"	f	class:graphlab::vertex_task_set
pop	src/graphlab/util/fast_multinomial.hpp	/^    bool pop(size_t& ret_asg, size_t cpuid) {$/;"	f	class:graphlab::fast_multinomial
pop	src/graphlab/util/mutable_queue.hpp	/^    std::pair<T, Priority> pop() {$/;"	f	class:graphlab::mutable_queue
pop	src/graphlab/util/mutable_queue.hpp	/^    std::pair<size_t, Priority> pop() {$/;"	f	class:graphlab::mutable_queue
pop	src/graphlab/util/sampling_tree.hpp	/^    bool pop(size_t &key , Data &ret, Priority &pr, size_t cpuid = 0) {$/;"	f	class:graphlab::sampling_tree
pop	src/graphlab/util/synchronized_circular_queue.hpp	/^    T pop() {$/;"	f	class:graphlab::synchronized_circular_queue
pop	src/graphlab/util/synchronized_queue.hpp	/^    T pop() {$/;"	f	class:graphlab::synchronized_queue
pop_all_tasks	src/graphlab/schedulers/support/binary_vertex_task_set.hpp	/^    size_t pop_all_tasks(size_t vid) {$/;"	f	class:graphlab::binary_vertex_task_set
pop_leaf	src/graphlab/util/sampling_tree.hpp	/^    bool pop_leaf(size_t leaf, std::pair<Data, Priority> &entry) {$/;"	f	class:graphlab::sampling_tree
popped_but_incomplete_tasks	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    binary_vertex_task_set<Graph> popped_but_incomplete_tasks;$/;"	m	class:graphlab::distributed_collaborative_scheduler_wrapper
popped_but_incomplete_tasks	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    binary_vertex_task_set<Graph> popped_but_incomplete_tasks;$/;"	m	class:graphlab::distributed_scheduler_wrapper
pos	src/graphlab/extern/bitmagic/bm.h	/^            bm::id_t            pos;      \/\/!< Last bit position before $/;"	m	struct:bm::bvector::iterator_base::bitblock_descr
pos_opts	src/graphlab/util/command_line_options.hpp	/^    pos_opts;$/;"	m	class:graphlab::command_line_options
position_	src/graphlab/extern/bitmagic/bm.h	/^        bm::id_t                position_;   \/\/!< Bit position (bit idx)$/;"	m	class:bm::bvector::iterator_base
position_	src/graphlab/extern/bitmagic/bm.h	/^        bm::id_t            position_; \/\/!< Position in the parent bitvector.$/;"	m	class:bm::bvector::reference
position_type	src/graphlab/extern/bitmagic/encoding.h	/^    typedef unsigned char* position_type;$/;"	t	class:bm::encoder
positive_support	src/graphlab/util/fast_multinomial.hpp	/^    size_t positive_support() {$/;"	f	class:graphlab::fast_multinomial
posixly_correct	src/graphlab/extern/metis/GKlib/getopt.c	/^static char *posixly_correct;$/;"	v	file:
post	src/graphlab/parallel/pthread_tools.hpp	/^    inline void post() const {$/;"	f	class:graphlab::semaphore
post_update_probe_function	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^  post_update_probe_function;$/;"	t	namespace:graphlab
potential	apps/factor_graph_inference/factor_bp.hpp	/^  factor_type potential;$/;"	m	struct:vertex_data
potential	apps/image_denoise/gibbs_denoise.cpp	/^  graphlab::unary_factor potential;$/;"	m	struct:vertex_data	file:
potential	apps/image_denoise/loopybp_denoise.cpp	/^  graphlab::unary_factor potential;$/;"	m	struct:vertex_data	file:
pqueue_type	src/graphlab/schedulers/splash_scheduler.hpp	/^    typedef mutable_queue<size_t, double> pqueue_type;$/;"	t	class:graphlab::splash_scheduler
pqueues	src/graphlab/schedulers/splash_scheduler.hpp	/^    std::vector< pqueue_type > pqueues;$/;"	m	class:graphlab::splash_scheduler
prec	apps/gabp/gabp.cpp	/^  sdouble prec; \/\/ message P_ij$/;"	m	struct:edge_data	file:
pred_fn	apps/image_denoise/loopybp_denoise.cpp	/^  std::string pred_fn;$/;"	m	struct:options	file:
pred_type	apps/image_denoise/gibbs_denoise.cpp	/^  std::string pred_type;$/;"	m	struct:options	file:
pred_type	apps/image_denoise/loopybp_denoise.cpp	/^  std::string pred_type;$/;"	m	struct:options	file:
prefetch	src/graphlab/util/dense_bitset.hpp	/^    inline void prefetch(uint32_t b) const{$/;"	f	class:graphlab::dense_bitset
prefetch	src/graphlab/util/dense_bitset.hpp	/^    inline void prefetch(uint32_t b) const{$/;"	f	class:graphlab::fixed_dense_bitset
prefetch_range	src/graphlab/parallel/pthread_tools.hpp	/^  inline void prefetch_range(void *addr, size_t len) {$/;"	f	namespace:graphlab
prefetch_range_write	src/graphlab/parallel/pthread_tools.hpp	/^  inline void prefetch_range_write(void *addr, size_t len) {$/;"	f	namespace:graphlab
prepend_alloc	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void* prepend_alloc(mstate m, char* newbase, char* oldbase,$/;"	f	file:
prev	src/graphlab/extern/metis/libmetis/struct.h	/^  struct ListNodeType *prev, *next;     \/* It's a doubly-linked list *\/$/;"	m	struct:ListNodeType	typeref:struct:ListNodeType::ListNodeType
prev_block_border_bit_	src/graphlab/extern/bitmagic/bmblocks.h	/^        bm::id_t   prev_block_border_bit_;$/;"	m	class:bm::blocks_manager::block_count_change_func
prev_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	833;"	d	file:
prev_foot	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  size_t                    prev_foot;$/;"	m	struct:malloc_tree_chunk	file:
prev_foot	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  size_t               prev_foot;  \/* Size of previous chunk (if free).  *\/$/;"	m	struct:malloc_chunk	file:
prev_mean	apps/gabp/gabp.cpp	/^  sdouble prev_mean; \/\/  mean value from previous round (for convergence detection) $/;"	m	struct:vertex_data	file:
prev_prec	apps/gabp/gabp.cpp	/^  sdouble prev_prec; \/\/precision value from previous round (for convergence detection)$/;"	m	struct:vertex_data	file:
primal_loss	apps/svm/svm.cpp	/^  float primal_loss;$/;"	m	struct:dat_vertex_data	file:
primal_loss	apps/svm/svm.cpp	/^  float primal_loss;$/;"	m	struct:feat_vertex_data	file:
primal_terminator	apps/svm/svm.cpp	/^bool primal_terminator(const gl_types::ishared_data* shared_data) {$/;"	f
print	src/graphlab/engine/engine_options.hpp	/^    virtual void print() const {$/;"	f	struct:graphlab::engine_options
print	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    void print() {$/;"	f	class:graphlab::multiqueue_fifo_scheduler
print	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    void print() {$/;"	f	class:graphlab::multiqueue_priority_scheduler
print	src/graphlab/util/generics/any.hpp	/^      std::ostream& print(std::ostream& out) const {$/;"	f	class:graphlab::any::holder
print	src/graphlab/util/generics/any.hpp	/^    std::ostream& print(std::ostream& out) const {$/;"	f	class:graphlab::any
print	src/graphlab/util/task_count_termination.hpp	/^    void print() {$/;"	f	class:graphlab::task_count_termination
printP	src/graphlab/factors/binary_factor.hpp	/^    void printP(std::ostream& out) const {$/;"	f	class:graphlab::binary_factor
print_bc	src/graphlab/extern/bitmagic/bmdbg.h	/^void print_bc(unsigned i, unsigned count)$/;"	f
print_blocks_count	src/graphlab/extern/bitmagic/bmdbg.h	/^void print_blocks_count(const BV& bv)$/;"	f
print_description	src/graphlab/util/command_line_options.hpp	/^    void print_description() const { std::cout << desc << std::endl; }$/;"	f	class:graphlab::command_line_options
print_plan	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    void print_plan(size_t cpuid) {$/;"	f	class:graphlab::execution_plan
print_queues	src/graphlab/distributed/lock_manager.hpp	/^  void print_queues() {$/;"	f	class:graphlab::distributed_lock_manager
print_stat	src/graphlab/extern/bitmagic/bmdbg.h	/^void print_stat(const BV& bv, unsigned blocks = 0)$/;"	f
print_stats	src/graphlab/distributed/distributed_control.cpp	/^void distributed_control::print_stats(procid_t target) {$/;"	f	class:graphlab::distributed_control
print_stats	src/graphlab/distributed/graph_lock_manager.hpp	/^  void print_stats() {$/;"	f	class:graphlab::graph_lock_manager
print_tree	src/graphlab/util/fast_multinomial.hpp	/^    void print_tree() {$/;"	f	class:graphlab::fast_multinomial
print_tree	src/graphlab/util/sampling_tree.hpp	/^    void print_tree() {$/;"	f	class:graphlab::sampling_tree
print_type_or_content	src/graphlab/util/generics/any.hpp	/^print_type_or_content(std::ostream& out, const ValueType &h) { $/;"	f	namespace:graphlab::any_detail
print_warning	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    void print_warning() {$/;"	f	class:graphlab::set_scheduler
printed	src/graphlab/distributed/distributed_engine.hpp	/^    bool printed;$/;"	m	class:graphlab::distributed_engine
prior_mean	apps/gabp/gabp.cpp	/^  sdouble prior_mean;  \/\/prior mean (b_i \/ A_ii)  $/;"	m	struct:vertex_data	file:
prior_prec	apps/gabp/gabp.cpp	/^  sdouble prior_prec;   \/\/prior precision P_ii = A_ii $/;"	m	struct:vertex_data	file:
prioritized_multiqueue	src/graphlab/util/prioritized_multiqueue.hpp	/^    prioritized_multiqueue(size_t numqueues_ = 8) {$/;"	f	class:graphlab::prioritized_multiqueue
prioritized_multiqueue	src/graphlab/util/prioritized_multiqueue.hpp	/^  class prioritized_multiqueue {$/;"	c	namespace:graphlab
priority_at	src/graphlab/util/mutable_queue.hpp	/^    Priority priority_at(size_t i) { $/;"	f	class:graphlab::mutable_queue
priority_function_type	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    priority_function_type;$/;"	t	class:graphlab::multinomial_vertex_set
priority_scheduler	src/graphlab.hpp	/^    typedef graphlab::priority_scheduler<graph> priority_scheduler;$/;"	t	struct:graphlab::types
priority_scheduler	src/graphlab/schedulers/priority_scheduler.hpp	/^    priority_scheduler(iengine_type* engine,$/;"	f	class:graphlab::priority_scheduler
priority_scheduler	src/graphlab/schedulers/priority_scheduler.hpp	/^  class priority_scheduler : $/;"	c	namespace:graphlab
probability_t	apps/svm/svm.cpp	/^typedef double probability_t;$/;"	t	file:
proc2dirty	src/graphlab/distributed/lock_manager.hpp	/^  std::vector<dense_bitset> proc2dirty;$/;"	m	class:graphlab::distributed_lock_manager
proc2dirtyedge	src/graphlab/distributed/lock_manager.hpp	/^  std::vector<dense_bitset> proc2dirtyedge;$/;"	m	class:graphlab::distributed_lock_manager
proc2lockrequests	src/graphlab/distributed/graph_lock_manager.hpp	/^      std::vector<std::vector<lockrequest> > proc2lockrequests;$/;"	m	struct:graphlab::graph_lock_manager::request_descriptor
process_word	src/graphlab/extern/bitmagic/bmrandom.h	/^unsigned random_subset<BV>::process_word(bm::word_t*       blk_out, $/;"	f	class:bm::random_subset
procid	src/graphlab/distributed/distributed_control.hpp	/^  inline const procid_t procid() const {$/;"	f	class:graphlab::distributed_control
procid_set	src/graphlab/distributed/lock_manager.hpp	/^  typedef fixed_dense_bitset<32> procid_set;$/;"	t	class:graphlab::distributed_lock_manager
procid_t	src/graphlab/distributed/distributed_control_types.hpp	/^  typedef uint16_t procid_t;$/;"	t	namespace:graphlab
procs	src/graphlab/distributed/distributed_control.hpp	/^  std::vector<messageproc_thread> procs;$/;"	m	class:graphlab::distributed_control
procthreads	src/graphlab/distributed/distributed_control.hpp	/^  thread_group procthreads;$/;"	m	class:graphlab::distributed_control
progress	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    void progress(size_t cpuid, iscope_type * scope) {$/;"	f	class:graphlab::distributed_fullsweep_sdm
progress	src/graphlab/distributed/distributed_shared_data.hpp	/^    bool progress(size_t cpuid) {$/;"	f	class:graphlab::distributed_shared_data
progress	src/graphlab/shared_data/ishared_data_manager.hpp	/^    virtual void progress(size_t cpuid, iscope_type * scope) {}$/;"	f	class:graphlab::ishared_data_manager
progress_lock	src/graphlab/distributed/graph_lock_manager.hpp	/^  void progress_lock(size_t requestid) {$/;"	f	class:graphlab::graph_lock_manager
progress_requests	src/graphlab/distributed/graph_lock_manager.hpp	/^    blocking_queue<size_t> progress_requests;$/;"	m	class:graphlab::graph_lock_manager
progress_state	src/graphlab/distributed/distributed_shared_data.hpp	/^    void progress_state(size_t cpuid, sync_state &state) {$/;"	f	class:graphlab::distributed_shared_data
propagate_change	src/graphlab/util/fast_multinomial.hpp	/^    void propagate_change(size_t loc) {$/;"	f	class:graphlab::fast_multinomial
propagate_up	src/graphlab/util/sampling_tree.hpp	/^    void propagate_up(size_t leaf) {$/;"	f	class:graphlab::sampling_tree
psfm	src/graphlab/extern/metis/GKlib/gk_struct.h	/^    int **psfm; \/* Stores the psfm matrix *\/$/;"	m	struct:__anon15
pssm	src/graphlab/extern/metis/GKlib/gk_struct.h	/^    int **pssm; \/* Stores the pssm matrix *\/$/;"	m	struct:__anon15
pthread_acquire_lock	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static FORCEINLINE int pthread_acquire_lock (MLOCK_T *sl) {$/;"	f	file:
pthread_init_lock	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static FORCEINLINE int pthread_init_lock (MLOCK_T *sl) {$/;"	f	file:
pthread_islocked	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static FORCEINLINE int pthread_islocked (MLOCK_T *sl) {$/;"	f	file:
pthread_mlock_t	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^struct pthread_mlock_t$/;"	s	file:
pthread_release_lock	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static FORCEINLINE void pthread_release_lock (MLOCK_T *sl) {$/;"	f	file:
pthread_try_lock	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static FORCEINLINE int pthread_try_lock (MLOCK_T *sl) {$/;"	f	file:
pthreadid	src/graphlab/parallel/pthread_tools.hpp	/^    virtual pthread_t pthreadid() {$/;"	f	class:graphlab::thread
ptr	src/graphlab/extern/bitmagic/bm.h	/^            const bm::word_t*   ptr;      \/\/!< Word pointer.$/;"	m	struct:bm::bvector::iterator_base::bitblock_descr
ptr	src/graphlab/extern/bitmagic/bm.h	/^            const gap_word_t*   ptr;       \/\/!< Word pointer.$/;"	m	struct:bm::bvector::iterator_base::dgap_descr
ptr	src/graphlab/extern/bitmagic/bmfunc.h	/^	B* ptr() { return bp_; }$/;"	f	class:bm::copy_to_array_functor
ptr	src/graphlab/extern/bitmagic/bmfunc.h	/^	B* ptr() { return bp_; }$/;"	f	class:bm::copy_to_array_functor_inc
ptr_alloc_	src/graphlab/extern/bitmagic/bmalloc.h	/^    PA            ptr_alloc_;$/;"	m	class:bm::mem_alloc
ptr_allocator	src/graphlab/extern/bitmagic/bmalloc.h	/^class ptr_allocator$/;"	c	namespace:bm
ptr_allocator_type	src/graphlab/extern/bitmagic/bmalloc.h	/^    typedef PA  ptr_allocator_type;$/;"	t	class:bm::mem_alloc
push	src/graphlab/util/mutable_queue.hpp	/^    void push(T item, Priority priority) {$/;"	f	class:graphlab::mutable_queue
push	src/graphlab/util/mutable_queue.hpp	/^    void push(size_t item, Priority priority) {$/;"	f	class:graphlab::mutable_queue
push	src/graphlab/util/prioritized_multiqueue.hpp	/^    inline void push(const T &item, size_t queuehint) {$/;"	f	class:graphlab::prioritized_multiqueue
push	src/graphlab/util/prioritized_multiqueue.hpp	/^    void push(const T &item) {$/;"	f	class:graphlab::prioritized_multiqueue
push	src/graphlab/util/sampling_tree.hpp	/^    void push(const size_t& key, const Data& item, const Priority &pr) {$/;"	f	class:graphlab::sampling_tree
push	src/graphlab/util/synchronized_circular_queue.hpp	/^    void push(const T &item) {$/;"	f	class:graphlab::synchronized_circular_queue
push	src/graphlab/util/synchronized_multiqueue.hpp	/^    inline void push(const T &item, size_t queuehint) {$/;"	f	class:graphlab::synchronized_multiqueue
push	src/graphlab/util/synchronized_multiqueue.hpp	/^    void push(const T &item) {$/;"	f	class:graphlab::synchronized_multiqueue
push	src/graphlab/util/synchronized_queue.hpp	/^    void push(const T &item) {$/;"	f	class:graphlab::synchronized_queue
push_back	src/graphlab/extern/bitmagic/bmfunc.h	/^    void push_back(bm::word_t w) { *b_++ = w; }$/;"	f	class:bm::bitblock_store_adapter
push_back	src/graphlab/extern/bitmagic/bmfunc.h	/^    void push_back(bm::word_t w) { this->sum_+= w; }$/;"	f	class:bm::bitblock_sum_adapter
push_changes	src/graphlab/distributed/pushy_distributed_engine.hpp	/^     void push_changes(iscope_type *scope) { $/;"	f	class:graphlab::pushy_distributed_engine
push_receiver_function	src/graphlab/distributed/lock_manager.hpp	/^  pushed_cache_update_handler_type push_receiver_function;$/;"	m	class:graphlab::distributed_lock_manager
pushed_cache_update	src/graphlab/distributed/graph_lock_manager.hpp	/^  static void pushed_cache_update(distributed_control& dc, size_t source,$/;"	f	class:graphlab::graph_lock_manager
pushed_cache_update_edge	src/graphlab/distributed/graph_lock_manager.hpp	/^  static void pushed_cache_update_edge(distributed_control& dc, size_t source,$/;"	f	class:graphlab::graph_lock_manager
pushed_cache_update_handler_type	src/graphlab/distributed/lock_manager.hpp	/^  typedef void (*pushed_cache_update_handler_type)(distributed_control& dc, size_t source,$/;"	t	class:graphlab::distributed_lock_manager
pushed_updates	src/graphlab/distributed/distributed_hash_table.hpp	/^  bool pushed_updates;$/;"	m	class:graphlab::distributed_hash_table
pushy_distributed_engine	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    pushy_distributed_engine(distributed_control &_dc, DistGraph& g, $/;"	f	class:graphlab::pushy_distributed_engine
pushy_distributed_engine	src/graphlab/distributed/pushy_distributed_engine.hpp	/^  class pushy_distributed_engine : $/;"	c	namespace:graphlab
put_16	src/graphlab/extern/bitmagic/encoding.h	/^BMFORCEINLINE void encoder::put_16(bm::short_t s)$/;"	f	class:bm::encoder
put_16	src/graphlab/extern/bitmagic/encoding.h	/^inline void encoder::put_16(const bm::short_t* s, unsigned count)$/;"	f	class:bm::encoder
put_32	src/graphlab/extern/bitmagic/encoding.h	/^BMFORCEINLINE void encoder::put_32(bm::word_t w)$/;"	f	class:bm::encoder
put_32	src/graphlab/extern/bitmagic/encoding.h	/^void encoder::put_32(const bm::word_t* w, unsigned count)$/;"	f	class:bm::encoder
put_8	src/graphlab/extern/bitmagic/encoding.h	/^BMFORCEINLINE void encoder::put_8(unsigned char c)$/;"	f	class:bm::encoder
put_bit	src/graphlab/extern/bitmagic/encoding.h	/^    void put_bit(unsigned value)$/;"	f	class:bm::bit_out
put_bits	src/graphlab/extern/bitmagic/encoding.h	/^    void put_bits(unsigned value, unsigned count)$/;"	f	class:bm::bit_out
put_prefixed_array_16	src/graphlab/extern/bitmagic/encoding.h	/^inline void encoder::put_prefixed_array_16(unsigned char c, $/;"	f	class:bm::encoder
put_prefixed_array_32	src/graphlab/extern/bitmagic/encoding.h	/^inline void encoder::put_prefixed_array_32(unsigned char c, $/;"	f	class:bm::encoder
put_zero_bit	src/graphlab/extern/bitmagic/encoding.h	/^    void put_zero_bit()$/;"	f	class:bm::bit_out
put_zero_bits	src/graphlab/extern/bitmagic/encoding.h	/^    void put_zero_bits(register unsigned count)$/;"	f	class:bm::bit_out
pwgts	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *where, *pwgts;$/;"	m	struct:graphdef
queue	src/graphlab/util/prioritized_multiqueue.hpp	/^    std::vector<std::queue<T> > queue;$/;"	m	class:graphlab::prioritized_multiqueue
queue	src/graphlab/util/synchronized_circular_queue.hpp	/^    T* queue;$/;"	m	class:graphlab::synchronized_circular_queue
queue	src/graphlab/util/synchronized_multiqueue.hpp	/^    std::vector<std::queue<T> > queue;$/;"	m	class:graphlab::synchronized_multiqueue
queue_lock	src/graphlab/schedulers/fifo_scheduler.hpp	/^    spinlock queue_lock; \/\/ The lock to get an element from the queue$/;"	m	class:graphlab::fifo_scheduler
queue_lock	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^    spinlock queue_lock; \/\/ The lock to get an element from the queue$/;"	m	class:graphlab::multiqueue_scheduler
queue_locks	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    std::vector<spinlock> queue_locks;$/;"	m	class:graphlab::multiqueue_fifo_scheduler
queue_locks	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    std::vector<mutex> queue_locks;$/;"	m	class:graphlab::multiqueue_priority_scheduler
queue_multiple	src/graphlab/schedulers/splash_scheduler.hpp	/^    static const size_t queue_multiple = 5;$/;"	m	class:graphlab::splash_scheduler
queue_type	src/graphlab/util/blocking_queue.hpp	/^    typedef typename std::list<T> queue_type;$/;"	t	class:graphlab::blocking_queue
queuelock	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    spinlock queuelock; $/;"	m	class:graphlab::clustered_priority_scheduler
queuelock	src/graphlab/schedulers/priority_scheduler.hpp	/^    spinlock queuelock; $/;"	m	class:graphlab::priority_scheduler
queuelock	src/graphlab/util/synchronized_circular_queue.hpp	/^    spinlock queuelock;$/;"	m	class:graphlab::synchronized_circular_queue
queuelocks	src/graphlab/schedulers/splash_scheduler.hpp	/^    std::vector< mutex >    queuelocks;$/;"	m	class:graphlab::splash_scheduler
queues_per_cpu	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    size_t queues_per_cpu;$/;"	m	class:graphlab::multiqueue_fifo_scheduler
queues_per_cpu	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    size_t queues_per_cpu;$/;"	m	class:graphlab::multiqueue_priority_scheduler
queuesize	src/graphlab/util/synchronized_circular_queue.hpp	/^    size_t queuesize; \/\/\/ the size of the queue array$/;"	m	class:graphlab::synchronized_circular_queue
quit	src/graphlab/distributed/distributed_terminator.hpp	/^    bool quit;$/;"	m	class:graphlab::distributed_terminator
rand01	src/graphlab/parallel/pthread_tools.hpp	/^    double rand01() { return dist_real_type(0,1)(rng_); }$/;"	f	class:graphlab::thread_specific_data
rand01	src/graphlab/util/random.hpp	/^    static double rand01() {$/;"	f	struct:graphlab::random
rand_int	src/graphlab/parallel/pthread_tools.hpp	/^    size_t rand_int(size_t max) {$/;"	f	class:graphlab::thread_specific_data
rand_int	src/graphlab/util/prioritized_multiqueue.hpp	/^    static inline size_t rand_int(size_t q) {$/;"	f	class:graphlab::prioritized_multiqueue
rand_int	src/graphlab/util/random.hpp	/^    static size_t rand_int(size_t max) {$/;"	f	struct:graphlab::random
rand_src_type	src/graphlab/parallel/pthread_tools.hpp	/^    typedef boost::mt11213b rand_src_type;$/;"	t	class:graphlab::thread_specific_data
random	src/graphlab.hpp	/^    typedef graphlab::random  random;$/;"	t	struct:graphlab::types
random	src/graphlab/util/random.hpp	/^  struct random {$/;"	s	namespace:graphlab
random_partition	src/graphlab/distributed/graph/cloned_graph.hpp	/^    void random_partition(size_t nparts, std::vector<uint32_t> &vertex2part) {$/;"	f	class:graphlab::cloned_graph
random_partition	src/graphlab/graph/graph.hpp	/^    void random_partition(size_t nparts, std::vector<uint32_t>& vertex2part) {$/;"	f	class:graphlab::graph
random_source	src/graphlab/util/fast_multinomial.hpp	/^    typedef boost::lagged_fibonacci607 random_source;$/;"	t	class:graphlab::fast_multinomial
random_source	src/graphlab/util/sampling_tree.hpp	/^    typedef boost::lagged_fibonacci607 random_source;$/;"	t	class:graphlab::sampling_tree
random_subset	src/graphlab/extern/bitmagic/bmrandom.h	/^class random_subset$/;"	c	namespace:bm
random_subset	src/graphlab/extern/bitmagic/bmrandom.h	/^random_subset<BV>::random_subset()$/;"	f	class:bm::random_subset
rangehigh	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      size_t rangehigh;$/;"	m	struct:graphlab::distributed_fullsweep_sdm::sync_params
rangehigh	src/graphlab/distributed/distributed_shared_data.hpp	/^      size_t rangehigh;$/;"	m	struct:graphlab::distributed_shared_data::sync_params
rangehigh	src/graphlab/shared_data/thread_shared_data.hpp	/^      size_t rangehigh;$/;"	m	struct:graphlab::thread_shared_data::sync_task
rangelow	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      size_t rangelow;$/;"	m	struct:graphlab::distributed_fullsweep_sdm::sync_params
rangelow	src/graphlab/distributed/distributed_shared_data.hpp	/^      size_t rangelow;$/;"	m	struct:graphlab::distributed_shared_data::sync_params
rangelow	src/graphlab/shared_data/thread_shared_data.hpp	/^      size_t rangelow;$/;"	m	struct:graphlab::thread_shared_data::sync_task
rb_pred_fn	apps/image_denoise/gibbs_denoise.cpp	/^  std::string rb_pred_fn;$/;"	m	struct:options	file:
rdunlock	src/graphlab/parallel/pthread_tools.hpp	/^    inline void rdunlock() const {$/;"	f	class:graphlab::rwlock
rdunlock	src/graphlab/parallel/pthread_tools.hpp	/^    inline void rdunlock() const {$/;"	f	class:graphlab::spinrwlock
read	src/graphlab/parallel/pthread_tools.hpp	/^        unsigned char read;$/;"	m	struct:graphlab::spinrwlock::rwticket::__anon2
read	src/graphlab/util/binary_parser.hpp	/^    template<typename T> T read() {$/;"	f	class:graphlab::binary_input_stream
read_edges	apps/gabp/gabp.cpp	/^int read_edges(FILE * f, int len, int offset, int nodes,$/;"	f
read_from_binary	apps/pagerank/tsv_to_graphlab_bin.cpp	/^void read_from_binary(const char* src, const char* dest) {$/;"	f
read_from_tsv	apps/pagerank/tsv_to_graphlab_bin.cpp	/^void read_from_tsv(const char* src, const char* dest) {$/;"	f
read_gap_block	src/graphlab/extern/bitmagic/bmserial.h	/^void deseriaizer_base<DEC>::read_gap_block(decoder_type&   decoder, $/;"	f	class:bm::deseriaizer_base
read_nodes	apps/gabp/gabp.cpp	/^void read_nodes(FILE * f, int len, int offset, int nodes,$/;"	f
read_tcp_buflen	src/graphlab/distributed/distributed_control.cpp	/^size_t distributed_control::read_tcp_buflen(int fd) {$/;"	f	class:graphlab::distributed_control
read_vec	apps/gabp/gabp.cpp	/^double * read_vec(FILE * f, size_t len){$/;"	f
readlock	src/graphlab/distributed/lock_manager.hpp	/^    inline void readlock() {$/;"	f	struct:graphlab::distributed_lock_manager::distrwlock
readlock	src/graphlab/parallel/pthread_tools.hpp	/^    inline void readlock() const {$/;"	f	class:graphlab::rwlock
readlock	src/graphlab/parallel/pthread_tools.hpp	/^    inline void readlock() const {$/;"	f	class:graphlab::spinrwlock
readlockqueue	src/graphlab/distributed/lock_manager.hpp	/^  std::vector<std::list<lock_descriptor*> > readlockqueue; $/;"	m	class:graphlab::distributed_lock_manager
ready	src/graphlab/distributed/graph_lock_manager.hpp	/^      bool ready;$/;"	m	struct:graphlab::graph_lock_manager::request_descriptor
real	apps/gabp/gabp.cpp	/^  sdouble real;   \/\/the real solution (if known) x = inv(A)*b for square matrix or x = pinv(A) for skinny matrix $/;"	m	struct:vertex_data	file:
rebuild	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    void rebuild(ivertex_set* parent, const ss_set_type &rebuildset) {$/;"	f	class:graphlab::any_inedge_set
rebuild	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    void rebuild(base* parent, const ss_set_type &rebuildset) {$/;"	f	class:graphlab::multinomial_vertex_set
rebuild	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    void rebuild(base* parent, const ss_set_type &rebuildset) {$/;"	f	class:graphlab::restricted_vertex_set
rebuild	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    void rebuild(ivertex_set_type* parent, const ss_set_type &rebuildset) {$/;"	f	class:graphlab::vertex_set
rebuild_engine	src/graphlab/core.hpp	/^    bool rebuild_engine() {$/;"	f	class:graphlab::core
rebuild_splash	src/graphlab/schedulers/splash_scheduler.hpp	/^    void rebuild_splash(size_t cpuid) {$/;"	f	class:graphlab::splash_scheduler
recalc_count	src/graphlab/extern/bitmagic/bm.h	/^    bm::id_t recalc_count()$/;"	f	class:bm::bvector
receive_call_message	src/graphlab/distributed/dc_receive.cpp	/^void distributed_control::receive_call_message(char* msg, size_t len) {$/;"	f	class:graphlab::distributed_control
receive_callx_message	src/graphlab/distributed/dc_receive.cpp	/^void distributed_control::receive_callx_message(char* msg, size_t len) {$/;"	f	class:graphlab::distributed_control
receive_callxs_message	src/graphlab/distributed/dc_receive.cpp	/^void distributed_control::receive_callxs_message(char* msg, size_t len) {$/;"	f	class:graphlab::distributed_control
receive_graph_handler	src/graphlab/distributed/graph/cloned_graph.hpp	/^    static void receive_graph_handler(distributed_control& dc, size_t source, $/;"	f	class:graphlab::cloned_graph
receive_handler	src/graphlab/distributed/dc_receive.cpp	/^void distributed_control::receive_handler(sockfd_t sock,recv_buffer &buffer) {$/;"	f	class:graphlab::distributed_control
receive_target	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    static distributed_fullsweep_sdm<Graph>* receive_target;$/;"	m	class:graphlab::distributed_fullsweep_sdm
receive_target	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^distributed_fullsweep_sdm<Graph>* distributed_fullsweep_sdm<Graph>::receive_target;$/;"	m	class:graphlab::distributed_fullsweep_sdm
receive_target	src/graphlab/distributed/distributed_shared_data.hpp	/^    static distributed_shared_data<Graph>* receive_target;$/;"	m	class:graphlab::distributed_shared_data
receive_target	src/graphlab/distributed/distributed_shared_data.hpp	/^distributed_shared_data<Graph>* distributed_shared_data<Graph>::receive_target;$/;"	m	class:graphlab::distributed_shared_data
receive_target	src/graphlab/distributed/graph/cloned_graph.hpp	/^    static cloned_graph<VertexData, EdgeData>* receive_target;$/;"	m	class:graphlab::cloned_graph
receive_target	src/graphlab/distributed/graph/cloned_graph.hpp	/^  cloned_graph<VertexData, EdgeData>* cloned_graph<VertexData, EdgeData>::receive_target = NULL;$/;"	m	class:graphlab::cloned_graph
receive_target	src/graphlab/distributed/graph/distributed_graph.hpp	/^    static distributed_graph<VertexData, EdgeData>* receive_target;$/;"	m	class:graphlab::distributed_graph
receive_target	src/graphlab/distributed/graph/distributed_graph.hpp	/^  distributed_graph<VertexData, EdgeData>* distributed_graph<VertexData, EdgeData>::receive_target = NULL;$/;"	m	class:graphlab::distributed_graph
recompute_asgs	src/graphlab/factors/table_factor.hpp	/^    void recompute_asgs() {$/;"	f	class:graphlab::assignment
recompute_linear_index	src/graphlab/factors/table_factor.hpp	/^    void recompute_linear_index() {$/;"	f	class:graphlab::assignment
recompute_size	src/graphlab/factors/table_factor.hpp	/^    void recompute_size() {$/;"	f	class:graphlab::domain
recv_buffer	src/graphlab/distributed/distributed_control.hpp	/^  struct recv_buffer{$/;"	s	class:graphlab::distributed_control
recvlocks	src/graphlab/distributed/distributed_control.hpp	/^  std::vector<spinlock> recvlocks;  \/\/ $/;"	m	class:graphlab::distributed_control
reduce_red_proportion	apps/demo/concise_demo.cpp	/^void reduce_red_proportion(size_t index,$/;"	f
reduce_red_proportion	apps/demo/demo.cpp	/^void reduce_red_proportion(size_t index,$/;"	f
reference	src/graphlab/extern/bitmagic/bm.h	/^        reference(bvector<Alloc, MS>& bv, bm::id_t position) $/;"	f	class:bm::bvector::reference
reference	src/graphlab/extern/bitmagic/bm.h	/^        reference(const reference& ref)$/;"	f	class:bm::bvector::reference
reference	src/graphlab/extern/bitmagic/bm.h	/^        typedef unsigned&  reference;$/;"	t	class:bm::bvector::enumerator
reference	src/graphlab/extern/bitmagic/bm.h	/^        typedef void reference;$/;"	t	class:bm::bvector::insert_iterator
reference	src/graphlab/extern/bitmagic/bm.h	/^    class reference$/;"	c	class:bm::bvector
referencecounter	src/graphlab/distributed/graph_lock_manager.hpp	/^      size_t referencecounter;$/;"	m	struct:graphlab::graph_lock_manager::request_descriptor
referencecounter_locks	src/graphlab/distributed/graph_lock_manager.hpp	/^    std::vector<mutex> referencecounter_locks;$/;"	m	class:graphlab::graph_lock_manager
register_monitor	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    void register_monitor(monitor_type* monitor_) { $/;"	f	class:graphlab::distributed_collaborative_scheduler_wrapper
register_monitor	src/graphlab/distributed/distributed_engine.hpp	/^    void register_monitor(imonitor_type* _listener) {$/;"	f	class:graphlab::distributed_engine
register_monitor	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    void register_monitor(monitor_type* monitor_) { $/;"	f	class:graphlab::distributed_scheduler_wrapper
register_monitor	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    void register_monitor(imonitor_type* _listener) {$/;"	f	class:graphlab::pushy_distributed_engine
register_monitor	src/graphlab/engine/asynchronous_engine.hpp	/^    void register_monitor(imonitor<Graph>* _monitor = NULL) {$/;"	f	class:graphlab::asynchronous_engine
register_monitor	src/graphlab/engine/sim_thread_engine.hpp	/^    void register_monitor(imonitor_type* _listener) {$/;"	f	class:graphlab::sim_thread_engine
register_monitor	src/graphlab/engine/synchronous_engine.hpp	/^    void register_monitor(imonitor_type* _listener) {$/;"	f	class:graphlab::synchronous_engine
register_monitor	src/graphlab/engine/threaded_engine.hpp	/^    void register_monitor(imonitor_type* _listener) {$/;"	f	class:graphlab::threaded_engine
register_monitor	src/graphlab/schedulers/ischeduler.hpp	/^    virtual void register_monitor(monitor_type* monitor_) { $/;"	f	class:graphlab::ischeduler
rekey	src/graphlab/util/stl_util.hpp	/^  rekey(const std::map<OldKey, T>& map,$/;"	f	namespace:graphlab
release	src/graphlab/distributed/graph_lock_manager.hpp	/^  void release(const size_t &reqid) {$/;"	f	class:graphlab::graph_lock_manager
release_blocking	src/graphlab/distributed/graph_lock_manager.hpp	/^  void release_blocking(const size_t &reqid) {$/;"	f	class:graphlab::graph_lock_manager
release_checks	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  size_t     release_checks;$/;"	m	struct:malloc_state	file:
release_full_edge_scope	src/graphlab/scope/general_scope_factory.hpp	/^    void release_full_edge_scope(general_scope_type* scope) {$/;"	f	class:graphlab::general_scope_factory
release_lock	src/graphlab/distributed/lock_manager.hpp	/^  void release_lock(const std::vector<lockrequest> &vertexlists) {$/;"	f	class:graphlab::distributed_lock_manager
release_lock	src/graphlab/distributed/lock_manager.hpp	/^  void release_lock(const std::vector<lockrequest> &vertexlists,$/;"	f	class:graphlab::distributed_lock_manager
release_null_scope	src/graphlab/scope/general_scope_factory.hpp	/^    void release_null_scope(general_scope_type* scope) {$/;"	f	class:graphlab::general_scope_factory
release_scope	src/graphlab/distributed/distributed_engine.hpp	/^    void release_scope(iscope<Graph>* s){$/;"	f	class:graphlab::distributed_engine
release_scope	src/graphlab/scope/general_scope_factory.hpp	/^    void release_scope(iscope_type* scopei) {$/;"	f	class:graphlab::general_scope_factory
release_scope	src/graphlab/scope/synchronous_scope_factory.hpp	/^    void release_scope(iscope_type* scope) { }$/;"	f	class:graphlab::synchronous_scope_factory
release_unused_segments	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static size_t release_unused_segments(mstate m) {$/;"	f	file:
release_vertex_scope	src/graphlab/scope/general_scope_factory.hpp	/^    void release_vertex_scope(general_scope_type* scope) {$/;"	f	class:graphlab::general_scope_factory
remap	src/graphlab/util/stl_util.hpp	/^  remap(const std::map<Key, OldT>& map,$/;"	f	namespace:graphlab
remap	src/graphlab/util/stl_util.hpp	/^  void remap(std::map<Key, T>& map,$/;"	f	namespace:graphlab
remote_call	src/graphlab/distributed/distributed_control.hpp	/^  void remote_call(procid_t target, F remote_function, void* ptr, size_t len) {$/;"	f	class:graphlab::distributed_control
remote_call	src/graphlab/distributed/distributed_control.hpp	/^  void remote_call(procid_t target, F remote_function, void* ptr, size_t len, $/;"	f	class:graphlab::distributed_control
remote_call_control	src/graphlab/distributed/distributed_control.hpp	/^  void remote_call_control(procid_t target, F remote_function, void* ptr, size_t len) {$/;"	f	class:graphlab::distributed_control
remote_call_control	src/graphlab/distributed/distributed_control.hpp	/^  void remote_call_control(procid_t target, F remote_function, void* ptr, size_t len,$/;"	f	class:graphlab::distributed_control
remote_callx	src/graphlab/distributed/distributed_control.hpp	/^  void remote_callx(procid_t target, F remote_function, void* ptr, size_t len) {$/;"	f	class:graphlab::distributed_control
remote_callx	src/graphlab/distributed/distributed_control.hpp	/^  void remote_callx(procid_t target, F remote_function, void* ptr, size_t len, $/;"	f	class:graphlab::distributed_control
remote_callxs	src/graphlab/distributed/distributed_control.hpp	/^  void remote_callxs(procid_t target, F remote_function, void* ptr, size_t len) {$/;"	f	class:graphlab::distributed_control
remote_callxs	src/graphlab/distributed/distributed_control.hpp	/^  void remote_callxs(procid_t target, F remote_function, void* ptr, size_t len, $/;"	f	class:graphlab::distributed_control
remote_edata	src/graphlab/distributed/graph_lock_manager.hpp	/^    remote_edata_type remote_edata;$/;"	m	class:graphlab::graph_lock_manager
remote_edata_type	src/graphlab/distributed/graph_lock_manager.hpp	/^    typedef synchronized_unordered_map<edge_data_wrapper> remote_edata_type;$/;"	t	class:graphlab::graph_lock_manager
remote_set_value	src/graphlab/distributed/metrics/distributed_metrics.cpp	/^void distributed_metrics::remote_set_value(distributed_control& _dc, size_t source, void *ptr, size_t len,$/;"	f	class:graphlab::distributed_metrics
remote_vdata	src/graphlab/distributed/graph_lock_manager.hpp	/^    remote_vdata_type remote_vdata;$/;"	m	class:graphlab::graph_lock_manager
remote_vdata_type	src/graphlab/distributed/graph_lock_manager.hpp	/^    typedef synchronized_unordered_map<vertex_data_wrapper> remote_vdata_type;$/;"	t	class:graphlab::graph_lock_manager
remotecall_packdata	src/graphlab/distributed/dc_packet_headers.hpp	/^struct remotecall_packdata{$/;"	s	namespace:graphlab
remotecallx_packdata	src/graphlab/distributed/dc_packet_headers.hpp	/^struct remotecallx_packdata{$/;"	s	namespace:graphlab
remotecallxs_packdata	src/graphlab/distributed/dc_packet_headers.hpp	/^struct remotecallxs_packdata{$/;"	s	namespace:graphlab
remove	src/graphlab/schedulers/support/binary_vertex_task_set.hpp	/^    void remove(const update_task_type& task) {$/;"	f	class:graphlab::binary_vertex_task_set
remove	src/graphlab/schedulers/support/vertex_task_set.hpp	/^    bool remove(const update_task_type &task) {$/;"	f	class:graphlab::vertex_task_set
remove	src/graphlab/util/mutable_queue.hpp	/^    bool remove(T item) {$/;"	f	class:graphlab::mutable_queue
remove	src/graphlab/util/mutable_queue.hpp	/^    bool remove(size_t item) {$/;"	f	class:graphlab::mutable_queue
remove_lru	src/graphlab/distributed/distributed_hash_table.cpp	/^void distributed_hash_table::remove_lru() {$/;"	f	class:graphlab::distributed_hash_table
replace_dv	src/graphlab/extern/metis/GKlib/dlmalloc.c	2126;"	d	file:
reply_found	src/graphlab/distributed/distributed_hash_table.hpp	/^    bool reply_found;$/;"	m	struct:graphlab::distributed_hash_table::mapreplydata
reply_lock_success	src/graphlab/distributed/lock_manager.hpp	/^  void reply_lock_success(lock_descriptor &lockset) {$/;"	f	class:graphlab::distributed_lock_manager
reply_set	src/graphlab/distributed/distributed_hash_table.hpp	/^    bool reply_set;$/;"	m	struct:graphlab::distributed_hash_table::mapreplydata
reply_value	src/graphlab/distributed/distributed_hash_table.hpp	/^    any reply_value;$/;"	m	struct:graphlab::distributed_hash_table::mapreplydata
report	src/graphlab/distributed/metrics/distributed_metrics.hpp	/^ void report() {$/;"	f	class:graphlab::distributed_metrics
report_stats	src/graphlab/distributed/distributed_control.cpp	/^void distributed_control::report_stats() {$/;"	f	class:graphlab::distributed_control
reqdesc_container	src/graphlab/distributed/graph_lock_manager.hpp	/^    typedef synchronized_unordered_map<request_descriptor> reqdesc_container;$/;"	t	class:graphlab::graph_lock_manager
reqids	src/graphlab/distributed/graph_lock_manager.hpp	/^      std::set<size_t> reqids;$/;"	m	struct:graphlab::graph_lock_manager::block_request
reqs	src/graphlab/distributed/distributed_hash_table.hpp	/^  size_t reqs;$/;"	m	class:graphlab::distributed_hash_table
request2size	src/graphlab/extern/metis/GKlib/dlmalloc.c	794;"	d	file:
request_descriptor	src/graphlab/distributed/graph_lock_manager.hpp	/^    struct request_descriptor{$/;"	s	class:graphlab::graph_lock_manager
request_lock_deferred	src/graphlab/distributed/lock_manager.hpp	/^  void request_lock_deferred(size_t sourcemachine, size_t requestid,$/;"	f	class:graphlab::distributed_lock_manager
request_lock_handler	src/graphlab/distributed/lock_manager.hpp	/^  static void request_lock_handler(distributed_control& dc, size_t source,$/;"	f	class:graphlab::distributed_lock_manager
request_unlock_handler	src/graphlab/distributed/lock_manager.hpp	/^  static void request_unlock_handler(distributed_control& dc, size_t source,$/;"	f	class:graphlab::distributed_lock_manager
request_unlock_write_handler	src/graphlab/distributed/lock_manager.hpp	/^  static void request_unlock_write_handler(distributed_control& dc, size_t source,$/;"	f	class:graphlab::distributed_lock_manager
requestid	src/graphlab/distributed/graph_lock_manager.hpp	/^      size_t requestid;$/;"	m	struct:graphlab::graph_lock_manager::request_descriptor
requestid	src/graphlab/distributed/graph_lock_manager.hpp	/^  size_t requestid;       \/\/ the lock request id which satisfied this scope request$/;"	m	class:graphlab::dist_scope_request
requestid	src/graphlab/distributed/lock_manager.hpp	/^    size_t requestid; \/\/\/ an id of the request, set by the requester$/;"	m	struct:graphlab::distributed_lock_manager::lock_descriptor
required_argument	src/graphlab/extern/metis/GKlib/gk_getopt.h	53;"	d
resSeq	src/graphlab/extern/metis/GKlib/gk_struct.h	/^	char *resSeq;	  \/* Residue sequence based on coordinates    *\/$/;"	m	struct:__anon13
reserve	src/graphlab/extern/bitmagic/bmblocks.h	/^    void reserve(unsigned max_bits)$/;"	f	class:bm::blocks_manager
reserve_top_blocks	src/graphlab/extern/bitmagic/bmblocks.h	/^    void reserve_top_blocks(unsigned top_blocks) $/;"	f	class:bm::blocks_manager
reset	src/graphlab/distributed/distributed_terminator.hpp	/^    inline void reset() {$/;"	f	class:graphlab::distributed_terminator
reset	src/graphlab/extern/bitmagic/bm.h	/^    bvector<Alloc, MS>& reset()$/;"	f	class:bm::bvector
reset	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^    void reset()$/;"	f	struct:bm::distance_metric_descriptor
reset	src/graphlab/schedulers/support/binary_scheduler_callback.hpp	/^    void reset() {$/;"	f	class:graphlab::binary_scheduler_callback
reset	src/graphlab/util/shared_termination.hpp	/^    void reset() {$/;"	f	class:graphlab::shared_termination
reset_color	src/graphlab/logger/logger.cpp	/^void reset_color(FILE* handle)$/;"	f
reset_on_error	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void reset_on_error(mstate m) {$/;"	f	file:
residual	apps/pagerank/pagerankapp.hpp	/^  float residual;$/;"	m	struct:edge_data
residual	apps/pagerank/tsv_to_graphlab_bin.cpp	/^  float residual;$/;"	m	struct:edge_data	file:
residual	src/graphlab/factors/table_factor.hpp	/^    inline double residual(const table_factor& other) const {$/;"	f	class:graphlab::table_factor
residual	src/graphlab/factors/unary_factor.hpp	/^    inline double residual(const unary_factor& other) const {  $/;"	f	class:graphlab::unary_factor
resize	apps/image_denoise/image.hpp	/^void image::resize(size_t rows, size_t cols) {$/;"	f	class:image
resize	src/graphlab/extern/bitmagic/bm.h	/^void bvector<Alloc, MS>::resize(size_type new_size)$/;"	f	class:bm::bvector
resize	src/graphlab/factors/binary_factor.hpp	/^    void resize(uint16_t arity1, uint16_t arity2) {$/;"	f	class:graphlab::binary_factor
resize	src/graphlab/factors/unary_factor.hpp	/^    inline void resize(uint16_t arity) {$/;"	f	class:graphlab::unary_factor
resize	src/graphlab/graph/graph.hpp	/^    void resize(size_t num_vertices ) {$/;"	f	class:graphlab::graph
resize	src/graphlab/util/dense_bitset.hpp	/^    inline void resize(size_t n) {$/;"	f	class:graphlab::dense_bitset
resize	src/graphlab/util/generics/blob.hpp	/^    void resize(size_t new_size) {$/;"	f	class:graphlab::blob
resname	src/graphlab/extern/metis/GKlib/gk_struct.h	/^	char      *resname;$/;"	m	struct:__anon12
resolve_event_handlers	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	/^    virtual void resolve_event_handlers() {$/;"	f	class:graphlab::ivertex_set
responsehandler	src/graphlab/distributed/lock_manager.hpp	/^    lock_response_handler responsehandler;  \/\/\/ the handler I reply to$/;"	m	struct:graphlab::distributed_lock_manager::lock_descriptor
restart	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    void restart() {aborted = false; }$/;"	f	class:graphlab::distributed_phased_sweep_scheduler
restart	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  void restart() { terminator.restart(); }$/;"	f	class:graphlab::distributed_round_robin_scheduler
restart	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  void restart() { terminator.restart(); }$/;"	f	class:graphlab::distributed_round_robin_scheduler2
restart	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    void restart() { $/;"	f	class:graphlab::clustered_priority_scheduler
restart	src/graphlab/schedulers/fifo_scheduler.hpp	/^    void restart() { terminator.restart(); }$/;"	f	class:graphlab::fifo_scheduler
restart	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    void restart() { terminator.restart(); }$/;"	f	class:graphlab::multiqueue_fifo_scheduler
restart	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    void restart() { terminator.restart(); }$/;"	f	class:graphlab::multiqueue_priority_scheduler
restart	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^    void restart() { terminator.restart(); }$/;"	f	class:graphlab::multiqueue_scheduler
restart	src/graphlab/schedulers/priority_scheduler.hpp	/^    void restart() { terminator.restart(); }$/;"	f	class:graphlab::priority_scheduler
restart	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    void restart() { terminator.restart(); }$/;"	f	class:graphlab::round_robin_scheduler
restart	src/graphlab/schedulers/sampling_scheduler.hpp	/^    void restart() { terminator.restart(); }$/;"	f	class:graphlab::sampling_scheduler
restart	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    void restart(){$/;"	f	class:graphlab::set_scheduler
restart	src/graphlab/schedulers/splash_scheduler.hpp	/^    void restart() { $/;"	f	class:graphlab::splash_scheduler
restart	src/graphlab/schedulers/sweep_scheduler.hpp	/^    void restart() {aborted = false; }$/;"	f	class:graphlab::sweep_scheduler
restart	src/graphlab/util/task_count_termination.hpp	/^    void restart(){$/;"	f	class:graphlab::task_count_termination
restrict	src/graphlab/factors/table_factor.hpp	/^    assignment restrict(const domain_type& sub_domain) const {$/;"	f	class:graphlab::assignment
restricted_vertex_set	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    restricted_vertex_set(scoped_selector_function_type sel, $/;"	f	class:graphlab::restricted_vertex_set
restricted_vertex_set	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    restricted_vertex_set(selector_function_type sel,$/;"	f	class:graphlab::restricted_vertex_set
restricted_vertex_set	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^  class restricted_vertex_set : $/;"	c	namespace:graphlab
result	src/graphlab/extern/bitmagic/bmalgo_impl.h	/^     bm::id_t          result;$/;"	m	struct:bm::distance_metric_descriptor
reusedscopes	src/graphlab/distributed/graph_lock_manager.hpp	/^    atomic<size_t> reusedscopes;$/;"	m	class:graphlab::graph_lock_manager
rev_edge_id	src/graphlab/distributed/graph/cloned_graph.hpp	/^    edge_id_t rev_edge_id(edge_id_t eid) const {$/;"	f	class:graphlab::cloned_graph
rev_edge_id	src/graphlab/distributed/graph/distributed_graph.hpp	/^    edge_id_t rev_edge_id(edge_id_t eid) const {$/;"	f	class:graphlab::distributed_graph
rev_edge_id	src/graphlab/graph/graph.hpp	/^    edge_id_t rev_edge_id(edge_id_t eid) const {$/;"	f	class:graphlab::graph
rev_foreach	src/graphlab/macros_def.hpp	30;"	d
rev_foreach	src/graphlab/macros_undef.hpp	12;"	d
reverse_edge	src/graphlab/scope/iscope.hpp	/^    edge_id_t reverse_edge(edge_id_t eid) const {      $/;"	f	class:graphlab::iscope
right	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype left, right;$/;"	m	struct:__anon3
right	src/graphlab/util/mutable_queue.hpp	/^    size_t right(size_t i) const { $/;"	f	class:graphlab::mutable_queue
right_child	src/graphlab/util/fast_multinomial.hpp	/^    size_t right_child(size_t i) const { return 2 * i + 2; }$/;"	f	class:graphlab::fast_multinomial
rinfo	src/graphlab/extern/metis/libmetis/struct.h	/^  RInfoType *rinfo;$/;"	m	struct:graphdef
rinfodef	src/graphlab/extern/metis/libmetis/struct.h	/^struct rinfodef {$/;"	s
rint	src/graphlab/extern/metis/GKlib/gk_arch.h	66;"	d
rint	src/graphlab/extern/metis/libmetis/metislib.h	43;"	d
rng_	src/graphlab/parallel/pthread_tools.hpp	/^    rand_src_type rng_;$/;"	m	class:graphlab::thread_specific_data
rngs	src/graphlab/util/fast_multinomial.hpp	/^    std::vector<random_source> rngs;$/;"	m	class:graphlab::fast_multinomial
rngs	src/graphlab/util/sampling_tree.hpp	/^    std::vector<random_source> rngs;$/;"	m	class:graphlab::sampling_tree
root_set	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    ivertex_set_type& root_set() { return rootset; }$/;"	f	class:graphlab::set_scheduler
rootset	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    vertex_set<Graph> rootset;$/;"	m	class:graphlab::set_scheduler
rootsetevents	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    size_t rootsetevents; $/;"	m	class:graphlab::set_scheduler
round_robin_scheduler	src/graphlab.hpp	/^    typedef graphlab::round_robin_scheduler<graph> round_robin_scheduler;$/;"	t	struct:graphlab::types
round_robin_scheduler	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    round_robin_scheduler(iengine_type* engine,$/;"	f	class:graphlab::round_robin_scheduler
round_robin_scheduler	src/graphlab/schedulers/round_robin_scheduler.hpp	/^  class round_robin_scheduler: public ischeduler<Graph> {$/;"	c	namespace:graphlab
row	src/graphlab/extern/bitmagic/bmtrans.h	/^    const T* row(unsigned row_idx) const { return value[row_idx]; }$/;"	f	struct:bm::tmatrix
rowind	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  int *rowind, *colind;$/;"	m	struct:__anon7
rowptr	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  int *rowptr, *colptr;$/;"	m	struct:__anon7
rows	apps/image_denoise/gibbs_denoise.cpp	/^  size_t rows;$/;"	m	struct:options	file:
rows	apps/image_denoise/image.hpp	/^  size_t rows() const { return _rows; }$/;"	f	class:image
rows	apps/image_denoise/loopybp_denoise.cpp	/^  size_t rows;$/;"	m	struct:options	file:
rows	src/graphlab/extern/bitmagic/bmtrans.h	/^    static unsigned rows() { return ROWS; }$/;"	f	struct:bm::tmatrix
rserial	src/graphlab/extern/metis/GKlib/gk_struct.h	/^	int       rserial;$/;"	m	struct:__anon12
run	src/graphlab/distributed/dc_receive.cpp	/^void distributed_control::message_dispatch_thread::run() {$/;"	f	class:graphlab::distributed_control::message_dispatch_thread
run	src/graphlab/distributed/dc_receive.cpp	/^void distributed_control::messageproc_thread::run() {$/;"	f	class:graphlab::distributed_control::messageproc_thread
run	src/graphlab/distributed/distributed_control.hpp	/^    void run() {$/;"	f	class:graphlab::distributed_control::background_send_thread
run	src/graphlab/distributed/distributed_engine.hpp	/^      void run() {$/;"	f	class:graphlab::distributed_engine::task_worker
run	src/graphlab/distributed/graph_lock_manager.hpp	/^      void run() {$/;"	f	class:graphlab::graph_lock_manager::background_unlock_thread
run	src/graphlab/distributed/graph_lock_manager.hpp	/^      void run() {$/;"	f	class:graphlab::graph_lock_manager::lock_send_request_thread
run	src/graphlab/distributed/pushy_distributed_engine.hpp	/^      void run() {$/;"	f	class:graphlab::pushy_distributed_engine::task_worker
run	src/graphlab/engine/asynchronous_engine.hpp	/^      void run() {$/;"	f	class:graphlab::asynchronous_engine::engine_thread
run	src/graphlab/engine/synchronous_engine.hpp	/^      void run() {$/;"	f	class:graphlab::synchronous_engine::synchronous_worker
run	src/graphlab/engine/threaded_engine.hpp	/^      void run() {$/;"	f	class:graphlab::threaded_engine::engine_thread
run	src/graphlab/parallel/pthread_tools.hpp	/^    virtual void run() {$/;"	f	class:graphlab::thread
run	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^      void run() {$/;"	f	class:graphlab::set_scheduler::scheduler_worker
run	src/graphlab/util/optimal_termination.hpp	/^      void run() {$/;"	f	class:graphlab::optimal_termination::optimal_termination_worker
run_next_task	src/graphlab/distributed/distributed_engine.hpp	/^    bool run_next_task(int cpuid, size_t lock_block_id, pending_tasks_map_type &pending_tasks) {$/;"	f	class:graphlab::distributed_engine
run_next_task	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    bool run_next_task(int cpuid) {$/;"	f	class:graphlab::pushy_distributed_engine
run_next_task	src/graphlab/engine/sim_thread_engine.hpp	/^    bool run_next_task(int cpuid) {$/;"	f	class:graphlab::sim_thread_engine
run_next_task	src/graphlab/engine/threaded_engine.hpp	/^    bool run_next_task(int cpuid) {$/;"	f	class:graphlab::threaded_engine
run_once	src/graphlab/engine/asynchronous_engine.hpp	/^    bool run_once(size_t cpuid) {$/;"	f	class:graphlab::asynchronous_engine
run_simulated	src/graphlab/engine/asynchronous_engine.hpp	/^    void run_simulated() {$/;"	f	class:graphlab::asynchronous_engine
run_threaded	src/graphlab/engine/asynchronous_engine.hpp	/^    void run_threaded() {$/;"	f	class:graphlab::asynchronous_engine
runnable	src/graphlab/parallel/pthread_tools.hpp	/^  class runnable {$/;"	c	namespace:graphlab
rvset	src/graphlab.hpp	/^    typedef graphlab::restricted_vertex_set<graph> rvset;$/;"	t	struct:graphlab::types
rwlock	src/graphlab/parallel/pthread_tools.hpp	/^    rwlock() {$/;"	f	class:graphlab::rwlock
rwlock	src/graphlab/parallel/pthread_tools.hpp	/^  class rwlock {$/;"	c	namespace:graphlab
rwticket	src/graphlab/parallel/pthread_tools.hpp	/^    union rwticket {$/;"	u	class:graphlab::spinrwlock
s	src/graphlab/parallel/pthread_tools.hpp	/^      } s;$/;"	m	union:graphlab::spinrwlock::rwticket	typeref:struct:graphlab::spinrwlock::rwticket::__anon2
safe_get	src/graphlab/util/judy_util.hpp	/^  const T safe_get(const judy_map_kdcell<Key, T>& map, Key k) {$/;"	f	namespace:graphlab
safe_get	src/graphlab/util/judy_util.hpp	/^  const T& safe_get(const judy_map_m<Key, T, H, L, E>& map, Key k) {$/;"	f	namespace:graphlab
safe_get	src/graphlab/util/stl_util.hpp	/^  const T safe_get(const std::map<Key, T>& map,$/;"	f	namespace:graphlab
safe_get	src/graphlab/util/stl_util.hpp	/^  const T& safe_get(const std::map<Key, T>& map,$/;"	f	namespace:graphlab
safepop	src/graphlab/util/prioritized_multiqueue.hpp	/^    inline bool safepop(T* ret, size_t queuehint) {$/;"	f	class:graphlab::prioritized_multiqueue
safepop	src/graphlab/util/synchronized_circular_queue.hpp	/^    bool safepop(T * ret) {$/;"	f	class:graphlab::synchronized_circular_queue
safepop	src/graphlab/util/synchronized_multiqueue.hpp	/^    inline bool safepop(T* ret, size_t queuehint) {$/;"	f	class:graphlab::synchronized_multiqueue
safepop	src/graphlab/util/synchronized_queue.hpp	/^    bool safepop(T * ret) {$/;"	f	class:graphlab::synchronized_queue
same_or_left_bits	src/graphlab/extern/metis/GKlib/dlmalloc.c	1501;"	d	file:
sample	src/graphlab/extern/bitmagic/bmrandom.h	/^void random_subset<BV>::sample(BV&       bv_out, $/;"	f	class:bm::random_subset
sample	src/graphlab/factors/table_factor.hpp	/^    inline assignment_type sample() const {$/;"	f	class:graphlab::table_factor
sample	src/graphlab/factors/unary_factor.hpp	/^    inline size_t sample() const {  $/;"	f	class:graphlab::unary_factor
sample	src/graphlab/util/fast_multinomial.hpp	/^    bool sample(size_t& ret_asg, size_t cpuid) {$/;"	f	class:graphlab::fast_multinomial
sample	src/graphlab/util/sampling_tree.hpp	/^    bool sample(size_t &k, size_t cpuid = 0) {$/;"	f	class:graphlab::sampling_tree
sample_tree	src/graphlab/util/sampling_tree.hpp	/^    bool sample_tree(size_t &leaf, size_t cpuid) {$/;"	f	class:graphlab::sampling_tree
samples	apps/factor_graph_inference/factor_gibbs.hpp	/^  uint32_t samples;$/;"	m	struct:vertex_data
samples	apps/image_denoise/gibbs_denoise.cpp	/^  size_t samples;$/;"	m	struct:options	file:
sampling_scheduler	src/graphlab.hpp	/^    typedef graphlab::sampling_scheduler<graph> sampling_scheduler;$/;"	t	struct:graphlab::types
sampling_scheduler	src/graphlab/schedulers/sampling_scheduler.hpp	/^    sampling_scheduler(iengine_type* engine,$/;"	f	class:graphlab::sampling_scheduler
sampling_scheduler	src/graphlab/schedulers/sampling_scheduler.hpp	/^  class sampling_scheduler : $/;"	c	namespace:graphlab
sampling_tree	src/graphlab/util/sampling_tree.hpp	/^    sampling_tree(size_t maxkeyval,$/;"	f	class:graphlab::sampling_tree
sampling_tree	src/graphlab/util/sampling_tree.hpp	/^  class sampling_tree{$/;"	c	namespace:graphlab
satisfies_termination_condition	src/graphlab/engine/asynchronous_engine.hpp	/^    bool satisfies_termination_condition() {$/;"	f	class:graphlab::asynchronous_engine
save	apps/demo/concise_demo.cpp	/^  void save(oarchive& archive) const {$/;"	f	struct:vertex_data
save	apps/factor_graph_inference/factor_bp.hpp	/^  void save(graphlab::oarchive& arc) const {$/;"	f	struct:edge_data
save	apps/factor_graph_inference/factor_bp.hpp	/^  void save(graphlab::oarchive& arc) const {$/;"	f	struct:vertex_data
save	apps/image_denoise/image.hpp	/^  void save(graphlab::oarchive &oarc) const {$/;"	f	class:image
save	apps/image_denoise/image.hpp	/^void image::save(const char* filename) const {$/;"	f	class:image
save	apps/pagerank/pagerankapp.hpp	/^  void save(graphlab::oarchive &oarc) const{$/;"	f	struct:edge_data
save	apps/pagerank/pagerankapp.hpp	/^  void save(graphlab::oarchive &oarc) const{$/;"	f	struct:vertex_data
save	apps/svm/svm.cpp	/^  void save(oarchive &arc) const{$/;"	f	struct:vertex_data
save	src/graphlab/core.hpp	/^    void save(const std::string& filename) const {$/;"	f	class:graphlab::core
save	src/graphlab/core.hpp	/^    void save(oarchive& arc) const {$/;"	f	class:graphlab::core
save	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      void save(graphlab::oarchive &oarc) const{$/;"	f	struct:graphlab::distributed_fullsweep_sdm::sync_params
save	src/graphlab/distributed/distributed_shared_data.hpp	/^      void save(graphlab::oarchive &oarc) const{$/;"	f	struct:graphlab::distributed_shared_data::sync_params
save	src/graphlab/distributed/graph/cloned_graph.hpp	/^    void save(const std::string& filename) const {$/;"	f	class:graphlab::cloned_graph
save	src/graphlab/distributed/graph/cloned_graph.hpp	/^    void save(oarchive &arc) const {$/;"	f	class:graphlab::cloned_graph
save	src/graphlab/distributed/graph/distributed_graph.hpp	/^    void save(const std::string& filename, int procid, int numofprocs) const {$/;"	f	class:graphlab::distributed_graph
save	src/graphlab/distributed/graph/distributed_graph.hpp	/^    void save(oarchive &arc) const {$/;"	f	class:graphlab::distributed_graph
save	src/graphlab/distributed/lock_manager.hpp	/^  void save(oarchive &arc) const{$/;"	f	struct:graphlab::lockrequest
save	src/graphlab/distributed/serialize_dispatch.hpp	/^  void save(oarchive &arc) const {$/;"	f	struct:graphlab::SERPACKSTRUCT0
save	src/graphlab/distributed/serialize_dispatch.hpp	/^  void save(oarchive &arc) const {$/;"	f	struct:graphlab::SERPACKSTRUCT1
save	src/graphlab/distributed/serialize_dispatch.hpp	/^  void save(oarchive &arc) const {$/;"	f	struct:graphlab::SERPACKSTRUCT2
save	src/graphlab/distributed/serialize_dispatch.hpp	/^  void save(oarchive &arc) const {$/;"	f	struct:graphlab::SERPACKSTRUCT3
save	src/graphlab/distributed/serialize_dispatch.hpp	/^  void save(oarchive &arc) const {$/;"	f	struct:graphlab::SERPACKSTRUCT4
save	src/graphlab/distributed/serialize_dispatch.hpp	/^  void save(oarchive &arc) const {$/;"	f	struct:graphlab::SERPACKSTRUCT5
save	src/graphlab/distributed/serialize_dispatch.hpp	/^  void save(oarchive &arc) const {$/;"	f	struct:graphlab::SERPACKSTRUCT6
save	src/graphlab/engine/engine_options.hpp	/^    void save(oarchive& arc) const {$/;"	f	struct:graphlab::engine_options
save	src/graphlab/factors/binary_factor.hpp	/^    void save(oarchive &oarc) const {$/;"	f	class:graphlab::binary_factor
save	src/graphlab/factors/table_factor.hpp	/^    void save(oarchive& arc) const { arc << id; arc << arity; }$/;"	f	struct:graphlab::variable
save	src/graphlab/factors/table_factor.hpp	/^    void save(oarchive& arc) const {$/;"	f	class:graphlab::assignment
save	src/graphlab/factors/table_factor.hpp	/^    void save(oarchive& arc) const {$/;"	f	class:graphlab::domain
save	src/graphlab/factors/table_factor.hpp	/^    void save(oarchive& arc) const {$/;"	f	class:graphlab::table_factor
save	src/graphlab/factors/unary_factor.hpp	/^    void save(oarchive &oarc) const {$/;"	f	class:graphlab::unary_factor
save	src/graphlab/graph/graph.hpp	/^      void save(oarchive& arc) const {$/;"	f	class:graphlab::graph::edge
save	src/graphlab/graph/graph.hpp	/^    void save(const std::string& filename) const {$/;"	f	class:graphlab::graph
save	src/graphlab/graph/graph.hpp	/^    void save(oarchive& arc) const {$/;"	f	class:graphlab::graph
save	src/graphlab/serialization/unsupported_serialize.hpp	/^    void save(oarchive& archive) const {      $/;"	f	struct:graphlab::unsupported_serialize
save	src/graphlab/util/dense_bitset.hpp	/^    inline void save(oarchive& oarc) const {$/;"	f	class:graphlab::dense_bitset
save	src/graphlab/util/dense_bitset.hpp	/^    inline void save(oarchive& oarc) const {$/;"	f	class:graphlab::fixed_dense_bitset
save	src/graphlab/util/generics/any.hpp	/^      void save(oarchive &arc) const {$/;"	f	class:graphlab::any::holder
save	src/graphlab/util/generics/any.hpp	/^    void save(oarchive &arc) const {$/;"	f	class:graphlab::any
save	src/graphlab/util/generics/blob.hpp	/^    void save(oarchive& arc) const {$/;"	f	class:graphlab::blob
save_adjacency	src/graphlab/distributed/graph/cloned_graph.hpp	/^    void save_adjacency(const std::string& filename) const {$/;"	f	class:graphlab::cloned_graph
save_adjacency	src/graphlab/graph/graph.hpp	/^    void save_adjacency(const std::string& filename) const {$/;"	f	class:graphlab::graph
save_beliefs	apps/factor_graph_inference/factor_bp.hpp	/^void save_beliefs(const std::string& filename,$/;"	f
save_beliefs	apps/factor_graph_inference/factor_gibbs.hpp	/^void save_beliefs(const std::string& filename,$/;"	f
save_or_fail	src/graphlab/serialization/oarchive.hpp	/^  save_or_fail(oarchive& o, const ValueType &t) { $/;"	f	namespace:graphlab::oarchive_detail
save_vec	apps/image_denoise/image.hpp	/^  void save_vec(const char* filename) const {$/;"	f	class:image
sbinptr	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^typedef struct malloc_chunk* sbinptr;  \/* The type of bins of chunks *\/$/;"	t	typeref:struct:malloc_chunk	file:
sched	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    Scheduler sched;$/;"	m	class:graphlab::distributed_collaborative_scheduler_wrapper
sched	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    Scheduler sched;$/;"	m	class:graphlab::distributed_scheduler_wrapper
sched	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    set_scheduler* sched;$/;"	m	class:graphlab::any_inedge_set
sched	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    set_scheduler_type* sched;$/;"	m	class:graphlab::restricted_vertex_set
sched_status	src/graphlab.hpp	/^    typedef graphlab::sched_status               sched_status;$/;"	t	struct:graphlab::types
sched_status	src/graphlab/schedulers/ischeduler.hpp	/^  struct sched_status {$/;"	s	namespace:graphlab
sched_wrapper_target	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^        *distributed_collaborative_scheduler_wrapper<Graph, Scheduler>::sched_wrapper_target;$/;"	m	class:graphlab::distributed_collaborative_scheduler_wrapper
sched_wrapper_target	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    static distributed_collaborative_scheduler_wrapper<Graph, Scheduler> *sched_wrapper_target;$/;"	m	class:graphlab::distributed_collaborative_scheduler_wrapper
sched_wrapper_target	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    static distributed_scheduler_wrapper<Graph, Scheduler> *sched_wrapper_target;$/;"	m	class:graphlab::distributed_scheduler_wrapper
sched_wrapper_target	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^  *distributed_scheduler_wrapper<Graph, Scheduler>::sched_wrapper_target;$/;"	m	class:graphlab::distributed_scheduler_wrapper
schedposcond	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    conditional schedposcond; $/;"	m	class:graphlab::set_scheduler
schedposlock	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    mutex schedposlock; \/\/\/ A spinlock on the next iterator$/;"	m	class:graphlab::set_scheduler
schedule_function_type	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    typedef void (*schedule_function_type)(set_scheduler &sched);$/;"	t	class:graphlab::set_scheduler
scheduler	apps/factor_graph_inference/factor_bp.cpp	/^  std::string scheduler;$/;"	m	struct:options	file:
scheduler	apps/factor_graph_inference/factor_gibbs.cpp	/^  std::string scheduler;$/;"	m	struct:options	file:
scheduler	apps/image_denoise/gibbs_denoise.cpp	/^  std::string scheduler;$/;"	m	struct:options	file:
scheduler	apps/image_denoise/loopybp_denoise.cpp	/^  std::string scheduler;$/;"	m	struct:options	file:
scheduler	src/graphlab/core.hpp	/^    typename types::ischeduler& scheduler() { $/;"	f	class:graphlab::core
scheduler	src/graphlab/distributed/distributed_engine.hpp	/^    DistributedScheduler scheduler;$/;"	m	class:graphlab::distributed_engine
scheduler	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    Scheduler& scheduler() {$/;"	f	class:graphlab::distributed_scheduler_wrapper
scheduler	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    Scheduler scheduler;$/;"	m	class:graphlab::pushy_distributed_engine
scheduler	src/graphlab/engine/asynchronous_engine.hpp	/^    Scheduler scheduler;$/;"	m	class:graphlab::asynchronous_engine
scheduler	src/graphlab/engine/sim_thread_engine.hpp	/^    Scheduler scheduler;$/;"	m	class:graphlab::sim_thread_engine
scheduler	src/graphlab/engine/threaded_engine.hpp	/^    Scheduler scheduler;$/;"	m	class:graphlab::threaded_engine
scheduler	src/graphlab/schedulers/support/direct_callback.hpp	/^    scheduler_type* scheduler;    \/\/\/ a pointer to the owning scheduler$/;"	m	class:graphlab::direct_callback
scheduler_options	src/graphlab.hpp	/^    typedef graphlab::scheduler_options          scheduler_options;$/;"	t	struct:graphlab::types
scheduler_options	src/graphlab/schedulers/ischeduler.hpp	/^  struct scheduler_options {$/;"	s	namespace:graphlab
scheduler_task_added	src/graphlab/monitoring/console_monitor.hpp	/^    void scheduler_task_added(update_task_type task, double priority) {$/;"	f	class:graphlab::console_monitor
scheduler_task_added	src/graphlab/monitoring/imonitor.hpp	/^    virtual void scheduler_task_added(update_task_type task, double priority) { }$/;"	f	class:graphlab::imonitor
scheduler_task_added	src/graphlab/monitoring/monitor_multiplexer.hpp	/^    void scheduler_task_added(update_task_type task, double priority){ $/;"	f	class:graphlab::monitor_multiplexer
scheduler_task_promoted	src/graphlab/monitoring/imonitor.hpp	/^    virtual void scheduler_task_promoted(update_task_type task, $/;"	f	class:graphlab::imonitor
scheduler_task_promoted	src/graphlab/monitoring/monitor_multiplexer.hpp	/^    void scheduler_task_promoted(update_task_type task, $/;"	f	class:graphlab::monitor_multiplexer
scheduler_task_pruned	src/graphlab/monitoring/imonitor.hpp	/^    virtual void scheduler_task_pruned(update_task_type task) { }$/;"	f	class:graphlab::imonitor
scheduler_task_pruned	src/graphlab/monitoring/monitor_multiplexer.hpp	/^    void scheduler_task_pruned(update_task_type task) {$/;"	f	class:graphlab::monitor_multiplexer
scheduler_task_scheduled	src/graphlab/monitoring/imonitor.hpp	/^    virtual void scheduler_task_scheduled(update_task_type task, $/;"	f	class:graphlab::imonitor
scheduler_task_scheduled	src/graphlab/monitoring/monitor_multiplexer.hpp	/^    void scheduler_task_scheduled(update_task_type task, $/;"	f	class:graphlab::monitor_multiplexer
scheduler_type	src/graphlab/engine/engine_options.hpp	/^    std::string scheduler_type;$/;"	m	struct:graphlab::engine_options
scheduler_type	src/graphlab/schedulers/support/binary_scheduler_callback.hpp	/^    typedef ischeduler<Graph> scheduler_type;$/;"	t	class:graphlab::binary_scheduler_callback
scheduler_type	src/graphlab/schedulers/support/direct_callback.hpp	/^    typedef ischeduler<Graph> scheduler_type;$/;"	t	class:graphlab::direct_callback
scheduler_type	src/graphlab/schedulers/support/unused_scheduler_callback.hpp	/^    typedef ischeduler<Graph> scheduler_type;$/;"	t	class:graphlab::unused_scheduler_callback
scheduler_worker	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^      scheduler_worker() {nattachcalls = 0;}$/;"	f	class:graphlab::set_scheduler::scheduler_worker
scheduler_worker	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    class scheduler_worker : public runnable {$/;"	c	class:graphlab::set_scheduler
scheduling_function	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    schedule_function_type scheduling_function;$/;"	m	class:graphlab::set_scheduler
scheduling_thread	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    thread_group scheduling_thread; \/\/\/ The worker running the schedule$/;"	m	class:graphlab::set_scheduler
schedupdate	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    update_function_type schedupdate;  \/\/\/The update function to use$/;"	m	class:graphlab::set_scheduler
scope	apps/factor_graph_inference/factor_bp.cpp	/^  std::string scope;$/;"	m	struct:options	file:
scope	apps/factor_graph_inference/factor_gibbs.cpp	/^  std::string scope;$/;"	m	struct:options	file:
scope	apps/image_denoise/gibbs_denoise.cpp	/^  std::string scope;$/;"	m	struct:options	file:
scope	apps/image_denoise/loopybp_denoise.cpp	/^  std::string scope;$/;"	m	struct:options	file:
scope_factory	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    iscope_factory_type* scope_factory;$/;"	m	class:graphlab::distributed_fullsweep_sdm
scope_factory	src/graphlab/distributed/distributed_shared_data.hpp	/^    iscope_factory_type* scope_factory;$/;"	m	class:graphlab::distributed_shared_data
scope_factory	src/graphlab/shared_data/thread_shared_data.hpp	/^    iscope_factory_type* scope_factory;$/;"	m	class:graphlab::thread_shared_data
scope_factory_type	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    typedef iscope_factory<Graph> scope_factory_type;$/;"	t	class:graphlab::distributed_collaborative_scheduler_wrapper
scope_factory_type	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    typedef iscope_factory<Graph> scope_factory_type;$/;"	t	class:graphlab::distributed_scheduler_wrapper
scope_is_subset_of	src/graphlab/scope/iscope.hpp	/^  inline bool scope_is_subset_of(scope_range::scope_range_enum A,$/;"	f	namespace:graphlab
scope_manager	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    ScopeFactory scope_manager;$/;"	m	class:graphlab::pushy_distributed_engine
scope_manager	src/graphlab/engine/asynchronous_engine.hpp	/^    ScopeFactory scope_manager;$/;"	m	class:graphlab::asynchronous_engine
scope_manager	src/graphlab/engine/sim_thread_engine.hpp	/^    ScopeFactory scope_manager;$/;"	m	class:graphlab::sim_thread_engine
scope_manager	src/graphlab/engine/synchronous_engine.hpp	/^    synch_scope_factory_type scope_manager;$/;"	m	class:graphlab::synchronous_engine
scope_manager	src/graphlab/engine/threaded_engine.hpp	/^    ScopeFactory scope_manager;$/;"	m	class:graphlab::threaded_engine
scope_range	src/graphlab.hpp	/^    typedef graphlab::scope_range scope_range;$/;"	t	struct:graphlab::types
scope_range	src/graphlab/scope/iscope.hpp	/^  struct scope_range {$/;"	s	namespace:graphlab
scope_range_enum	src/graphlab/scope/iscope.hpp	/^    enum scope_range_enum {$/;"	g	struct:graphlab::scope_range
scope_type	src/graphlab/distributed/distributed_engine.hpp	/^    typedef distributed_scope<Graph, graph_lock_manager<Graph> > scope_type;$/;"	t	class:graphlab::distributed_engine
scope_type	src/graphlab/engine/engine_options.hpp	/^    std::string scope_type;$/;"	m	struct:graphlab::engine_options
scope_type	src/graphlab/scope/general_scope.hpp	/^    scope_range::scope_range_enum scope_type() const {$/;"	f	class:graphlab::general_scope
scoped_modifications	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    void scoped_modifications(size_t cpuid, vertex_id_t rootvertex,$/;"	f	class:graphlab::distributed_phased_sweep_scheduler
scoped_modifications	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    void scoped_modifications(size_t cpuid, vertex_id_t rootvertex,$/;"	f	class:graphlab::clustered_priority_scheduler
scoped_modifications	src/graphlab/schedulers/fifo_scheduler.hpp	/^    void scoped_modifications(size_t cpuid, vertex_id_t rootvertex,$/;"	f	class:graphlab::fifo_scheduler
scoped_modifications	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    void scoped_modifications(size_t cpuid, vertex_id_t rootvertex,$/;"	f	class:graphlab::multiqueue_fifo_scheduler
scoped_modifications	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    void scoped_modifications(size_t cpuid, vertex_id_t rootvertex,$/;"	f	class:graphlab::multiqueue_priority_scheduler
scoped_modifications	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^    void scoped_modifications(size_t cpuid, vertex_id_t rootvertex,$/;"	f	class:graphlab::multiqueue_scheduler
scoped_modifications	src/graphlab/schedulers/priority_scheduler.hpp	/^    void scoped_modifications(size_t cpuid, vertex_id_t rootvertex,$/;"	f	class:graphlab::priority_scheduler
scoped_modifications	src/graphlab/schedulers/sampling_scheduler.hpp	/^    void scoped_modifications(size_t cpuid, vertex_id_t rootvertex,$/;"	f	class:graphlab::sampling_scheduler
scoped_modifications	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    void scoped_modifications(size_t cpuid, vertex_id_t rootvertex,$/;"	f	class:graphlab::set_scheduler
scoped_modifications	src/graphlab/schedulers/splash_scheduler.hpp	/^    void scoped_modifications(size_t cpuid, vertex_id_t rootvertex,$/;"	f	class:graphlab::splash_scheduler
scoped_modifications	src/graphlab/schedulers/sweep_scheduler.hpp	/^    void scoped_modifications(size_t cpuid, vertex_id_t rootvertex,$/;"	f	class:graphlab::sweep_scheduler
scoped_selector_function_type	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    scoped_selector_function_type;$/;"	t	class:graphlab::restricted_vertex_set
scoperange	src/graphlab/distributed/distributed_engine.hpp	/^    scope_range::scope_range_enum scoperange;$/;"	m	class:graphlab::distributed_engine
scoperange	src/graphlab/distributed/graph_lock_manager.hpp	/^      scope_range::scope_range_enum scoperange;$/;"	m	struct:graphlab::graph_lock_manager::request_descriptor
scoperange	src/graphlab/distributed/graph_lock_manager.hpp	/^  scope_range::scope_range_enum scoperange;$/;"	m	class:graphlab::dist_scope_request
scopes	src/graphlab/distributed/distributed_engine.hpp	/^    std::vector<scope_type*> scopes;$/;"	m	class:graphlab::distributed_engine
scopes	src/graphlab/scope/general_scope_factory.hpp	/^    std::vector<general_scope_type*> scopes;$/;"	m	class:graphlab::general_scope_factory
scopes	src/graphlab/scope/synchronous_scope_factory.hpp	/^    std::vector<synchronous_scope_type> scopes;  $/;"	m	class:graphlab::synchronous_scope_factory
scopetype	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      scope_range::scope_range_enum scopetype;$/;"	m	struct:graphlab::distributed_fullsweep_sdm::sync_params
scopetype	src/graphlab/distributed/distributed_shared_data.hpp	/^      scope_range::scope_range_enum scopetype;$/;"	m	struct:graphlab::distributed_shared_data::sync_params
sdouble	apps/gabp/gabp.cpp	/^typedef float sdouble;$/;"	t	file:
sdt_const_keys	apps/shooting/shooting.cpp	/^enum sdt_const_keys {LAMBDA_KEY,$/;"	g	file:
search_in_bitblock	src/graphlab/extern/bitmagic/bm.h	/^        bool search_in_bitblock()$/;"	f	class:bm::bvector::enumerator
search_in_gapblock	src/graphlab/extern/bitmagic/bm.h	/^        bool search_in_gapblock()$/;"	f	class:bm::bvector::enumerator
seed	src/graphlab/parallel/pthread_tools.hpp	/^    void seed() { rng_.seed(); }$/;"	f	class:graphlab::thread_specific_data
seed	src/graphlab/parallel/pthread_tools.hpp	/^    void seed(rand_src_type::result_type value) { rng_.seed(value); }$/;"	f	class:graphlab::thread_specific_data
seed	src/graphlab/util/random.hpp	/^    static void seed() {$/;"	f	struct:graphlab::random
seed	src/graphlab/util/random.hpp	/^    static void seed(size_t value) {$/;"	f	struct:graphlab::random
seek	src/graphlab/extern/bitmagic/encoding.h	/^    void seek(int delta) { buf_ += delta; }$/;"	f	class:bm::decoder_base
seg	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  msegment   seg;$/;"	m	struct:malloc_state	file:
segment_holding	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static msegmentptr segment_holding(mstate m, char* addr) {$/;"	f	file:
segment_holds	src/graphlab/extern/metis/GKlib/dlmalloc.c	1237;"	d	file:
select_color	apps/factor_graph_inference/factor_gibbs.hpp	/^bool select_color(uint32_t color,$/;"	f
select_color	apps/image_denoise/gibbs_denoise.cpp	/^bool select_color(graphlab::vertex_id_t v, $/;"	f
selector	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    edge_selector_function selector;$/;"	m	class:graphlab::any_inedge_set
selector1	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    selector_function_type selector1;$/;"	m	class:graphlab::restricted_vertex_set
selector2	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    scoped_selector_function_type selector2;$/;"	m	class:graphlab::restricted_vertex_set
selector_function	src/graphlab.hpp	/^    typedef typename rvset::selector_function_type  selector_function;$/;"	t	struct:graphlab::types
selector_function_type	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    selector_function_type;$/;"	t	class:graphlab::restricted_vertex_set
selfweight	apps/pagerank/pagerankapp.hpp	/^  float selfweight;$/;"	m	struct:vertex_data
selfweight	apps/pagerank/tsv_to_graphlab_bin.cpp	/^  float selfweight;$/;"	m	struct:vertex_data	file:
semaphore	src/graphlab/parallel/pthread_tools.hpp	/^    semaphore() {$/;"	f	class:graphlab::semaphore
semaphore	src/graphlab/parallel/pthread_tools.hpp	/^  class semaphore {$/;"	c	namespace:graphlab
send_call_control_message	src/graphlab/distributed/dc_send.cpp	/^void distributed_control::send_call_control_message(procid_t target, void* remote_function,$/;"	f	class:graphlab::distributed_control
send_call_message	src/graphlab/distributed/dc_send.cpp	/^void distributed_control::send_call_message(procid_t target, $/;"	f	class:graphlab::distributed_control
send_callx_message	src/graphlab/distributed/dc_send.cpp	/^void distributed_control::send_callx_message(procid_t target, void* remote_function, $/;"	f	class:graphlab::distributed_control
send_callxs_message	src/graphlab/distributed/dc_send.cpp	/^void distributed_control::send_callxs_message(procid_t target, void* remote_function, $/;"	f	class:graphlab::distributed_control
send_req_data	src/graphlab/distributed/distributed_control.hpp	/^    send_req_data() {}$/;"	f	struct:graphlab::distributed_control::send_req_data
send_req_data	src/graphlab/distributed/distributed_control.hpp	/^    send_req_data(procid_t target, char* buf, size_t len):$/;"	f	struct:graphlab::distributed_control::send_req_data
send_req_data	src/graphlab/distributed/distributed_control.hpp	/^  struct send_req_data{$/;"	s	class:graphlab::distributed_control
send_requests	src/graphlab/distributed/distributed_control.hpp	/^  blocking_queue<send_req_data> send_requests;$/;"	m	class:graphlab::distributed_control
send_thread	src/graphlab/distributed/distributed_control.hpp	/^  background_send_thread *send_thread;$/;"	m	class:graphlab::distributed_control
send_to_sock	src/graphlab/distributed/dc_send.cpp	/^void distributed_control::send_to_sock(procid_t target, char* buf, size_t len) {$/;"	f	class:graphlab::distributed_control
send_token	src/graphlab/distributed/distributed_terminator.cpp	/^void distributed_terminator::send_token() {$/;"	f	class:graphlab::distributed_terminator
send_vertices_to_proczero	src/graphlab/distributed/graph/distributed_graph.hpp	/^	void send_vertices_to_proczero() {$/;"	f	class:graphlab::distributed_graph
sendbuffer	src/graphlab/distributed/dc_internal.hpp	/^  char* sendbuffer;$/;"	m	struct:graphlab::dc_thread_local_struct
sendbufferlen	src/graphlab/distributed/dc_internal.hpp	/^  size_t sendbufferlen;$/;"	m	struct:graphlab::dc_thread_local_struct
sendlocks	src/graphlab/distributed/distributed_control.hpp	/^  std::vector<spinlock> sendlocks;  \/\/ TODO: unused now since only 1 send thread$/;"	m	class:graphlab::distributed_control
sequence	src/graphlab/extern/metis/GKlib/gk_struct.h	/^    int *sequence; \/* Stores the sequence*\/$/;"	m	struct:__anon15
serial	src/graphlab/extern/metis/GKlib/gk_struct.h	/^	int       serial;$/;"	m	struct:__anon12
serial_iterator_type	src/graphlab/extern/bitmagic/bmserial.h	/^    typedef SerialIterator  serial_iterator_type;$/;"	t	class:bm::iterator_deserializer
serial_stream_be	src/graphlab/extern/bitmagic/bmserial.h	/^        serial_stream_iterator<bm::decoder_big_endian> serial_stream_be;$/;"	t	class:bm::operation_deserializer
serial_stream_current	src/graphlab/extern/bitmagic/bmserial.h	/^        serial_stream_iterator<bm::decoder>            serial_stream_current;$/;"	t	class:bm::operation_deserializer
serial_stream_iterator	src/graphlab/extern/bitmagic/bmserial.h	/^class serial_stream_iterator : protected deseriaizer_base<DEC>$/;"	c	namespace:bm
serial_stream_iterator	src/graphlab/extern/bitmagic/bmserial.h	/^serial_stream_iterator<DEC>::serial_stream_iterator(const unsigned char* buf)$/;"	f	class:bm::serial_stream_iterator
serial_stream_le	src/graphlab/extern/bitmagic/bmserial.h	/^        serial_stream_iterator<bm::decoder_little_endian> serial_stream_le;$/;"	t	class:bm::operation_deserializer
serialization_flags	src/graphlab/extern/bitmagic/bmserial.h	/^enum serialization_flags {$/;"	g	namespace:bm
serialization_header_mask	src/graphlab/extern/bitmagic/bmserial.h	/^enum serialization_header_mask {$/;"	g	namespace:bm
serialize	src/graphlab/extern/bitmagic/bmserial.h	/^unsigned serialize(BV& bv, $/;"	f	namespace:bm
serialize	src/graphlab/extern/bitmagic/bmserial.h	/^unsigned serialize(const BV& bv, $/;"	f	namespace:bm
serialize	src/graphlab/extern/bitmagic/bmserial.h	/^unsigned serializer<BV>::serialize(const BV& bv, $/;"	f	class:bm::serializer
serialize	src/graphlab/serialization/oarchive.cpp	/^  oarchive& serialize(oarchive& a, const void* i,const size_t length) {$/;"	f	namespace:graphlab
serialize_64bit_integer	src/graphlab/serialization/oarchive.cpp	/^  oarchive& serialize_64bit_integer(oarchive& a, const int64_t i) {$/;"	f	namespace:graphlab
serialize_iterator	src/graphlab/serialization/iterator.hpp	/^  void serialize_iterator(oarchive& a, InputIterator begin,$/;"	f	namespace:graphlab
serialize_iterator	src/graphlab/serialization/iterator.hpp	/^  void serialize_iterator(oarchive& a, RandomAccessIterator begin,$/;"	f	namespace:graphlab
serializer	src/graphlab/extern/bitmagic/bmserial.h	/^class serializer$/;"	c	namespace:bm
serializer	src/graphlab/extern/bitmagic/bmserial.h	/^serializer<BV>::serializer(const allocator_type&   alloc)$/;"	f	class:bm::serializer
set	src/graphlab/distributed/distributed_hash_table.cpp	/^void distributed_hash_table::set(size_t key, const any &value) {$/;"	f	class:graphlab::distributed_hash_table
set	src/graphlab/extern/bitmagic/bm.h	/^    bvector<Alloc, MS>& set()$/;"	f	class:bm::bvector
set	src/graphlab/extern/bitmagic/bm.h	/^    bvector<Alloc, MS>& set(bm::id_t n, bool val = true)$/;"	f	class:bm::bvector
set	src/graphlab/extern/bitmagic/bmvmin.h	/^    void set(bm::id_t n, bool val=true)$/;"	f	class:bm::bvmini
set	src/graphlab/extern/bitmagic/bmvmin.h	/^    void set(bm::id_t n, bool val=true)$/;"	f	class:bm::miniset
set	src/graphlab/util/dense_bitset.hpp	/^    inline bool set(uint32_t b, bool value) {$/;"	f	class:graphlab::dense_bitset
set	src/graphlab/util/dense_bitset.hpp	/^    inline bool set(uint32_t b, bool value) {$/;"	f	class:graphlab::fixed_dense_bitset
set	src/graphlab/util/fast_multinomial.hpp	/^    void set(size_t asg, float_t value) {$/;"	f	class:graphlab::fast_multinomial
set_AND	src/graphlab/extern/bitmagic/bmfunc.h	/^    set_AND         = 0,$/;"	e	enum:bm::set_operation
set_ASSIGN	src/graphlab/extern/bitmagic/bmfunc.h	/^    set_ASSIGN      = 4,$/;"	e	enum:bm::set_operation
set_COUNT	src/graphlab/extern/bitmagic/bmfunc.h	/^    set_COUNT       = 5,$/;"	e	enum:bm::set_operation
set_COUNT_A	src/graphlab/extern/bitmagic/bmfunc.h	/^    set_COUNT_A     = 11,$/;"	e	enum:bm::set_operation
set_COUNT_AND	src/graphlab/extern/bitmagic/bmfunc.h	/^    set_COUNT_AND   = 6,$/;"	e	enum:bm::set_operation
set_COUNT_B	src/graphlab/extern/bitmagic/bmfunc.h	/^    set_COUNT_B     = 12,$/;"	e	enum:bm::set_operation
set_COUNT_OR	src/graphlab/extern/bitmagic/bmfunc.h	/^    set_COUNT_OR    = 8,$/;"	e	enum:bm::set_operation
set_COUNT_SUB_AB	src/graphlab/extern/bitmagic/bmfunc.h	/^    set_COUNT_SUB_AB= 9,$/;"	e	enum:bm::set_operation
set_COUNT_SUB_BA	src/graphlab/extern/bitmagic/bmfunc.h	/^    set_COUNT_SUB_BA= 10,$/;"	e	enum:bm::set_operation
set_COUNT_XOR	src/graphlab/extern/bitmagic/bmfunc.h	/^    set_COUNT_XOR   = 7,$/;"	e	enum:bm::set_operation
set_END	src/graphlab/extern/bitmagic/bmfunc.h	/^    set_END$/;"	e	enum:bm::set_operation
set_OR	src/graphlab/extern/bitmagic/bmfunc.h	/^    set_OR          = 1,$/;"	e	enum:bm::set_operation
set_SUB	src/graphlab/extern/bitmagic/bmfunc.h	/^    set_SUB         = 2,$/;"	e	enum:bm::set_operation
set_XOR	src/graphlab/extern/bitmagic/bmfunc.h	/^    set_XOR         = 3,$/;"	e	enum:bm::set_operation
set_all_one	src/graphlab/extern/bitmagic/bmblocks.h	/^    void set_all_one()$/;"	f	class:bm::blocks_manager
set_all_zero	src/graphlab/extern/bitmagic/bmblocks.h	/^    void set_all_zero(bool free_mem)$/;"	f	class:bm::blocks_manager
set_args	src/graphlab/factors/table_factor.hpp	/^    void set_args(const domain_type& args) {$/;"	f	class:graphlab::table_factor
set_array_mask	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned set_array_mask  = 0xFFu;$/;"	m	namespace:bm
set_array_shift	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned set_array_shift = 8u;$/;"	m	namespace:bm
set_array_size	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned set_array_size = 256u;$/;"	m	namespace:bm
set_as_agreement	src/graphlab/factors/binary_factor.hpp	/^    void set_as_agreement(double lambda) {$/;"	f	class:graphlab::binary_factor
set_as_agreement	src/graphlab/factors/table_factor.hpp	/^    void set_as_agreement(double lambda) {$/;"	f	class:graphlab::table_factor
set_as_laplace	src/graphlab/factors/binary_factor.hpp	/^    void set_as_laplace(double lambda) {$/;"	f	class:graphlab::binary_factor
set_as_laplace	src/graphlab/factors/table_factor.hpp	/^    void set_as_laplace(double lambda) {$/;"	f	class:graphlab::table_factor
set_as_root_set	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    void set_as_root_set() { isrootset = true; }$/;"	f	class:graphlab::vertex_set
set_asg	src/graphlab/factors/table_factor.hpp	/^    void set_asg(size_t var_id, size_t value) {$/;"	f	class:graphlab::assignment
set_asg_at	src/graphlab/factors/table_factor.hpp	/^    void set_asg_at(size_t index, size_t value) {$/;"	f	class:graphlab::assignment
set_barrier_function	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^ void set_barrier_function(void(*bar)(void)){$/;"	f	class:graphlab::distributed_round_robin_scheduler2
set_bit	src/graphlab/extern/bitmagic/bm.h	/^    bool set_bit(bm::id_t n, bool val = true)$/;"	f	class:bm::bvector
set_bit	src/graphlab/extern/bitmagic/bmfunc.h	/^BMFORCEINLINE void set_bit(unsigned* dest, unsigned  bitpos)$/;"	f	namespace:bm
set_bit	src/graphlab/extern/bitmagic/bmvmin.h	/^    void set_bit(unsigned pos)$/;"	f	class:bm::bvector_mini
set_bit	src/graphlab/util/dense_bitset.hpp	/^    inline bool set_bit(uint32_t b) {$/;"	f	class:graphlab::dense_bitset
set_bit	src/graphlab/util/dense_bitset.hpp	/^    inline bool set_bit(uint32_t b) {$/;"	f	class:graphlab::fixed_dense_bitset
set_bit_and	src/graphlab/extern/bitmagic/bm.h	/^    bool set_bit_and(bm::id_t n, bool val = true)$/;"	f	class:bm::bvector
set_bit_conditional	src/graphlab/extern/bitmagic/bm.h	/^    bool set_bit_conditional(bm::id_t n, bool val, bool condition)$/;"	f	class:bm::bvector
set_bit_conditional_impl	src/graphlab/extern/bitmagic/bm.h	/^bool bvector<Alloc, MS>::set_bit_conditional_impl(bm::id_t n, $/;"	f	class:bm::bvector
set_bit_no_check	src/graphlab/extern/bitmagic/bm.h	/^bool bvector<Alloc, MS>::set_bit_no_check(bm::id_t n, bool val)$/;"	f	class:bm::bvector
set_bit_unsync	src/graphlab/util/dense_bitset.hpp	/^    inline bool set_bit_unsync(uint32_t b) {$/;"	f	class:graphlab::dense_bitset
set_bit_unsync	src/graphlab/util/dense_bitset.hpp	/^    inline bool set_bit_unsync(uint32_t b) {$/;"	f	class:graphlab::fixed_dense_bitset
set_blkblk_mask	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned set_blkblk_mask = 0xFFFFFFu;$/;"	m	namespace:bm
set_block	src/graphlab/extern/bitmagic/bmblocks.h	/^    bm::word_t* set_block(unsigned nb, bm::word_t* block)$/;"	f	class:bm::blocks_manager
set_block	src/graphlab/extern/bitmagic/bmblocks.h	/^    bm::word_t* set_block(unsigned nb, bm::word_t* block, bool gap)$/;"	f	class:bm::blocks_manager
set_block_16one	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_16one             = 6;   \/\/!< UP to 65536 all-set blocks$/;"	m	namespace:bm
set_block_16zero	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_16zero            = 5;   \/\/!< Up to 65536 zero blocks$/;"	m	namespace:bm
set_block_1one	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_1one              = 2;   \/\/!< One block all-set (1111...)$/;"	m	namespace:bm
set_block_1zero	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_1zero             = 1;   \/\/!< One all-zero block$/;"	m	namespace:bm
set_block_32one	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_32one             = 8;   \/\/!< UP to 4G all-set blocks$/;"	m	namespace:bm
set_block_32zero	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_32zero            = 7;   \/\/!< Up to 4G zero blocks$/;"	m	namespace:bm
set_block_8one	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_8one              = 4;   \/\/!< Up to 256 all-set blocks$/;"	m	namespace:bm
set_block_8zero	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_8zero             = 3;   \/\/!< Up to 256 zero blocks$/;"	m	namespace:bm
set_block_all_set	src/graphlab/extern/bitmagic/bmblocks.h	/^    void set_block_all_set(unsigned nb)$/;"	f	class:bm::blocks_manager
set_block_aone	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_aone              = 10;  \/\/!< All other blocks one$/;"	m	namespace:bm
set_block_arrbit	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_arrbit            = 16;  \/\/!< List of bits ON$/;"	m	namespace:bm
set_block_arrgap	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_arrgap            = 18;  \/\/!< List of bits ON (GAP block)$/;"	m	namespace:bm
set_block_arrgap_egamma	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_arrgap_egamma     = 21; \/\/!< Gamma compressed delta GAP array$/;"	m	namespace:bm
set_block_arrgap_egamma_inv	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_arrgap_egamma_inv = 23; \/\/!< Gamma compressed inverted delta GAP array$/;"	m	namespace:bm
set_block_arrgap_inv	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_arrgap_inv        = 24;  \/\/!< List of bits OFF (GAP block)$/;"	m	namespace:bm
set_block_azero	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_azero             = 9;   \/\/!< All other blocks zero$/;"	m	namespace:bm
set_block_bit	src/graphlab/extern/bitmagic/bmblocks.h	/^    void set_block_bit(unsigned nb) $/;"	f	class:bm::blocks_manager
set_block_bit	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_bit               = 11;  \/\/!< Plain bit block$/;"	m	namespace:bm
set_block_bit_0runs	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_bit_0runs         = 22; \/\/!< Bit block with encoded zero intervals$/;"	m	namespace:bm
set_block_bit_1bit	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_bit_1bit          = 19; \/\/!< Bit block with 1 bit ON$/;"	m	namespace:bm
set_block_bit_interval	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_bit_interval      = 17; \/\/!< Interval block$/;"	m	namespace:bm
set_block_end	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_end               = 0;   \/\/!< End of serialization$/;"	m	namespace:bm
set_block_gap	src/graphlab/extern/bitmagic/bmblocks.h	/^    void set_block_gap(unsigned nb) $/;"	f	class:bm::blocks_manager
set_block_gap	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_gap               = 14;  \/\/!< Plain GAP block$/;"	m	namespace:bm
set_block_gap_egamma	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_gap_egamma        = 20; \/\/!< Gamma compressed GAP block$/;"	m	namespace:bm
set_block_gapbit	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_gapbit            = 15;  \/\/!< GAP compressed bitblock $/;"	m	namespace:bm
set_block_mask	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned set_block_mask  = 0xFFFFu;$/;"	m	namespace:bm
set_block_plain_cnt	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned set_block_plain_cnt = sizeof(bm::word_t) * 8u;$/;"	m	namespace:bm
set_block_plain_size	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned set_block_plain_size = set_block_size \/ 32u;$/;"	m	namespace:bm
set_block_ptr	src/graphlab/extern/bitmagic/bmblocks.h	/^    void set_block_ptr(unsigned nb, bm::word_t* block)$/;"	f	class:bm::blocks_manager
set_block_sgapbit	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_sgapbit           = 12;  \/\/!< SGAP compressed bitblock$/;"	m	namespace:bm
set_block_sgapgap	src/graphlab/extern/bitmagic/bmserial.h	/^const unsigned char set_block_sgapgap           = 13;  \/\/!< SGAP compressed GAP block$/;"	m	namespace:bm
set_block_shift	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned set_block_shift = 16u;$/;"	m	namespace:bm
set_block_size	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned set_block_size  = 2048u;$/;"	m	namespace:bm
set_block_size_op	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned set_block_size_op  = bm::set_block_size \/ 2;$/;"	m	namespace:bm
set_block_size_op	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned set_block_size_op  = bm::set_block_size;$/;"	m	namespace:bm
set_caching	src/graphlab/distributed/distributed_engine.hpp	/^    void set_caching(bool _caching) {$/;"	f	class:graphlab::distributed_engine
set_caching	src/graphlab/distributed/graph_lock_manager.hpp	/^  void set_caching(bool _caching) {$/;"	f	class:graphlab::graph_lock_manager
set_caching	src/graphlab/distributed/lock_manager.hpp	/^  void set_caching(bool _caching) {$/;"	f	class:graphlab::distributed_lock_manager
set_clone_edges	src/graphlab/engine/synchronous_engine.hpp	/^    void set_clone_edges(bool clone_edges) {$/;"	f	class:graphlab::synchronous_engine
set_compression_level	src/graphlab/extern/bitmagic/bmserial.h	/^void serializer<BV>::set_compression_level(unsigned clevel)$/;"	f	class:bm::serializer
set_constant	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    void set_constant(size_t index, const any& new_value) {$/;"	f	class:graphlab::distributed_fullsweep_sdm
set_constant	src/graphlab/distributed/distributed_shared_data.hpp	/^    void set_constant(size_t index, const any& new_value) {$/;"	f	class:graphlab::distributed_shared_data
set_constant	src/graphlab/shared_data/thread_shared_data.hpp	/^    void set_constant(size_t index, const any& new_value) {$/;"	f	class:graphlab::thread_shared_data
set_constant_edges	src/graphlab/distributed/distributed_engine.hpp	/^    void set_constant_edges(bool _const_edges) {$/;"	f	class:graphlab::distributed_engine
set_constant_edges	src/graphlab/distributed/graph/cloned_graph.hpp	/^    void set_constant_edges(bool b) {$/;"	f	class:graphlab::cloned_graph
set_constant_edges	src/graphlab/distributed/graph/distributed_graph.hpp	/^    void set_constant_edges(bool b) {$/;"	f	class:graphlab::distributed_graph
set_constant_edges	src/graphlab/distributed/graph_lock_manager.hpp	/^  void set_constant_edges(bool _const_edges) {$/;"	f	class:graphlab::graph_lock_manager
set_constant_handler	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    static void set_constant_handler(distributed_control& dc, $/;"	f	class:graphlab::distributed_fullsweep_sdm
set_constant_handler	src/graphlab/distributed/distributed_shared_data.hpp	/^    static void set_constant_handler(distributed_control& dc, $/;"	f	class:graphlab::distributed_shared_data
set_constant_reply_handler	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    static void set_constant_reply_handler(distributed_control& dc, $/;"	f	class:graphlab::distributed_fullsweep_sdm
set_constant_reply_handler	src/graphlab/distributed/distributed_shared_data.hpp	/^    static void set_constant_reply_handler(distributed_control& dc, $/;"	f	class:graphlab::distributed_shared_data
set_data	src/graphlab/graph/graph.hpp	/^		void set_data(EdgeData edata){$/;"	f	class:graphlab::graph::edge
set_default_scope	src/graphlab/distributed/distributed_engine.hpp	/^    void set_default_scope(scope_range::scope_range_enum default_scope_range) {$/;"	f	class:graphlab::distributed_engine
set_default_scope	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    void set_default_scope(scope_range::scope_range_enum default_scope_range) {$/;"	f	class:graphlab::pushy_distributed_engine
set_default_scope	src/graphlab/engine/asynchronous_engine.hpp	/^    void set_default_scope(scope_range::scope_range_enum default_scope_range) {$/;"	f	class:graphlab::asynchronous_engine
set_default_scope	src/graphlab/engine/sim_thread_engine.hpp	/^    void set_default_scope(scope_range::scope_range_enum default_scope_range) {$/;"	f	class:graphlab::sim_thread_engine
set_default_scope	src/graphlab/engine/synchronous_engine.hpp	/^    void set_default_scope(scope_range::scope_range_enum default_scope_range) {$/;"	f	class:graphlab::synchronous_engine
set_default_scope	src/graphlab/engine/threaded_engine.hpp	/^    void set_default_scope(scope_range::scope_range_enum default_scope_range) {$/;"	f	class:graphlab::threaded_engine
set_default_scope	src/graphlab/scope/general_scope_factory.hpp	/^    void set_default_scope(scope_range::scope_range_enum default_scope_range) {$/;"	f	class:graphlab::general_scope_factory
set_default_scope	src/graphlab/scope/synchronous_scope_factory.hpp	/^    void set_default_scope(scope_range::scope_range_enum default_scope_range) { };$/;"	f	class:graphlab::synchronous_scope_factory
set_difference	src/graphlab/util/stl_util.hpp	/^  std::set<T> set_difference(const std::set<T>& a, const T& b) {$/;"	f	namespace:graphlab
set_difference	src/graphlab/util/stl_util.hpp	/^  std::set<T> set_difference(const std::set<T>& a, const std::set<T>& b) {$/;"	f	namespace:graphlab
set_dirty	src/graphlab/distributed/lock_manager.hpp	/^  void set_dirty(vertex_id_t vertex, size_t exceptsource = -1) {$/;"	f	class:graphlab::distributed_lock_manager
set_dirty_edge	src/graphlab/distributed/lock_manager.hpp	/^  void set_dirty_edge(edge_id_t edge, size_t exceptsource = -1) {$/;"	f	class:graphlab::distributed_lock_manager
set_disjoint	src/graphlab/util/stl_util.hpp	/^  bool set_disjoint(const std::set<T>& a, const std::set<T>& b) {$/;"	f	namespace:graphlab
set_edge_data	src/graphlab/graph/graph.hpp	/^	void set_edge_data(edge_id_t edge_id , EdgeData edata){$/;"	f	class:graphlab::graph
set_edge_data	src/graphlab/scope/iscope.hpp	/^	void set_edge_data(edge_id_t eid, edge_data_type edata){$/;"	f	class:graphlab::iscope
set_engine	src/graphlab/schedulers/support/direct_callback.hpp	/^    void set_engine(iengine_type* eng) {$/;"	f	class:graphlab::direct_callback
set_engine_options	src/graphlab/core.hpp	/^    void set_engine_options(const engine_options& opts) {$/;"	f	class:graphlab::core
set_engine_type	src/graphlab/core.hpp	/^    void set_engine_type(const std::string& engine_type) {$/;"	f	class:graphlab::core
set_equal	src/graphlab/util/stl_util.hpp	/^  bool set_equal(const std::set<T>& a, const std::set<T>& b) {$/;"	f	namespace:graphlab
set_foot	src/graphlab/extern/metis/GKlib/dlmalloc.c	840;"	d	file:
set_free_with_pinuse	src/graphlab/extern/metis/GKlib/dlmalloc.c	847;"	d	file:
set_fullsweep_sync	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    void set_fullsweep_sync(size_t index,$/;"	f	class:graphlab::distributed_fullsweep_sdm
set_gap_level	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename T> void set_gap_level(T* buf, $/;"	f	namespace:bm
set_gap_levels	src/graphlab/extern/bitmagic/bm.h	/^void bvector<Alloc, MS>::set_gap_levels(const gap_word_t* glevel_len)$/;"	f	class:bm::bvector
set_glen	src/graphlab/extern/bitmagic/bmblocks.h	/^    void set_glen(const gap_word_t* glevel_len)$/;"	f	class:bm::blocks_manager
set_index	src/graphlab/factors/table_factor.hpp	/^    void set_index(size_t index) {$/;"	f	class:graphlab::assignment
set_intersect	src/graphlab/util/stl_util.hpp	/^  std::set<T> set_intersect(const std::set<T>& a, const std::set<T>& b) {$/;"	f	namespace:graphlab
set_inuse	src/graphlab/extern/metis/GKlib/dlmalloc.c	1575;"	d	file:
set_inuse	src/graphlab/extern/metis/GKlib/dlmalloc.c	1598;"	d	file:
set_inuse_and_pinuse	src/graphlab/extern/metis/GKlib/dlmalloc.c	1580;"	d	file:
set_inuse_and_pinuse	src/graphlab/extern/metis/GKlib/dlmalloc.c	1603;"	d	file:
set_local_edges	src/graphlab/distributed/graph/distributed_graph.hpp	/^     void set_local_edges(bool b) {$/;"	f	class:graphlab::distributed_graph
set_lock	src/graphlab/extern/metis/GKlib/dlmalloc.c	1209;"	d	file:
set_lock_manager	src/graphlab/distributed/distributed_shared_data.hpp	/^    void set_lock_manager(graph_type* _graph, graph_lock_manager<Graph>* _glm) {$/;"	f	class:graphlab::distributed_shared_data
set_log_file	src/graphlab/logger/logger.cpp	/^bool file_logger::set_log_file(std::string file) {$/;"	f	class:file_logger
set_log_level	src/graphlab/logger/logger.hpp	/^  void set_log_level(int new_log_level) {$/;"	f	class:file_logger
set_log_to_console	src/graphlab/logger/logger.hpp	/^  void set_log_to_console(bool consolelog) {$/;"	f	class:file_logger
set_max_backlog	src/graphlab/distributed/distributed_engine.hpp	/^    void set_max_backlog(size_t _maximum_backlog) {$/;"	f	class:graphlab::distributed_engine
set_max_iterations	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  void set_max_iterations(size_t maxi) {$/;"	f	class:graphlab::distributed_round_robin_scheduler
set_max_iterations	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  void set_max_iterations(size_t maxi) {$/;"	f	class:graphlab::distributed_round_robin_scheduler2
set_max_iterations	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    void set_max_iterations(size_t maxi) {$/;"	f	class:graphlab::round_robin_scheduler
set_ncpus	src/graphlab/core.hpp	/^    void set_ncpus(size_t ncpus) {$/;"	f	class:graphlab::core
set_new_blocks_strat	src/graphlab/extern/bitmagic/bm.h	/^    void set_new_blocks_strat(strategy strat) $/;"	f	class:bm::bvector
set_operation	src/graphlab/extern/bitmagic/bmfunc.h	/^enum set_operation$/;"	g	namespace:bm
set_option	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    void set_option(scheduler_options::options_enum opt, void* value) { $/;"	f	class:graphlab::distributed_collaborative_scheduler_wrapper
set_option	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  void set_option(scheduler_options::options_enum opt, void* value) { $/;"	f	class:graphlab::distributed_round_robin_scheduler
set_option	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  void set_option(scheduler_options::options_enum opt, void* value) { $/;"	f	class:graphlab::distributed_round_robin_scheduler2
set_option	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    void set_option(scheduler_options::options_enum opt, void* value) { $/;"	f	class:graphlab::distributed_scheduler_wrapper
set_option	src/graphlab/schedulers/colored_scheduler.hpp	/^    void set_option(scheduler_options::options_enum opt, void* value) {$/;"	f	class:graphlab::colored_scheduler
set_option	src/graphlab/schedulers/ischeduler.hpp	/^    virtual void set_option(scheduler_options::options_enum opt, void* value) { };$/;"	f	class:graphlab::ischeduler
set_option	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    void set_option(scheduler_options::options_enum opt, void* value) { $/;"	f	class:graphlab::round_robin_scheduler
set_option	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    void set_option(scheduler_options::options_enum opt, void* value) { $/;"	f	class:graphlab::set_scheduler
set_option	src/graphlab/schedulers/splash_scheduler.hpp	/^    void set_option(scheduler_options::options_enum opt, void* value) { $/;"	f	class:graphlab::splash_scheduler
set_partition	src/graphlab/distributed/graph/cloned_graph.hpp	/^    void set_partition(distributed_control &dc,$/;"	f	class:graphlab::cloned_graph
set_partition	src/graphlab/util/stl_util.hpp	/^  set_partition(const std::set<T>& s, const std::set<T>& partition) {$/;"	f	namespace:graphlab
set_pos	src/graphlab/extern/bitmagic/encoding.h	/^inline void encoder::set_pos(encoder::position_type buf_pos)$/;"	f	class:bm::encoder
set_ptr_to_value_1_handler	src/graphlab/distributed/distributed_control.cpp	/^void set_ptr_to_value_1_handler(distributed_control& dc, $/;"	f	namespace:graphlab
set_pushed_updates	src/graphlab/distributed/distributed_hash_table.hpp	/^  void set_pushed_updates(bool _pushed_updates) {$/;"	f	class:graphlab::distributed_hash_table
set_range	src/graphlab/extern/bitmagic/bm.h	/^bvector<Alloc, MS>& bvector<Alloc, MS>::set_range(bm::id_t left,$/;"	f	class:bm::bvector
set_range_no_check	src/graphlab/extern/bitmagic/bm.h	/^void bvector<Alloc, MS>::set_range_no_check(bm::id_t left,$/;"	f	class:bm::bvector
set_schedule_function	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    void set_schedule_function(schedule_function_type s) {$/;"	f	class:graphlab::set_scheduler
set_scheduler	src/graphlab.hpp	/^    typedef graphlab::set_scheduler<graph> set_scheduler;$/;"	t	struct:graphlab::types
set_scheduler	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    set_scheduler(iengine_type* engine,$/;"	f	class:graphlab::set_scheduler
set_scheduler	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^  class set_scheduler : $/;"	c	namespace:graphlab
set_scheduler_main	apps/factor_graph_inference/factor_gibbs.cpp	/^void set_scheduler_main(const options& opts, $/;"	f
set_scheduler_type	src/graphlab/core.hpp	/^    void set_scheduler_type(const std::string& scheduler_type) {$/;"	f	class:graphlab::core
set_scheduler_type	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	/^    typedef set_scheduler<Graph> set_scheduler_type;$/;"	t	class:graphlab::ivertex_set
set_scheduler_type	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    typedef set_scheduler<Graph> set_scheduler_type;$/;"	t	class:graphlab::multinomial_vertex_set
set_scheduler_type	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    typedef set_scheduler<Graph> set_scheduler_type;$/;"	t	class:graphlab::restricted_vertex_set
set_scheduler_type	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    typedef set_scheduler<Graph> set_scheduler_type;$/;"	t	class:graphlab::vertex_set
set_scope_factory	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    void set_scope_factory(iscope_factory_type* factory) {$/;"	f	class:graphlab::distributed_fullsweep_sdm
set_scope_factory	src/graphlab/distributed/distributed_shared_data.hpp	/^    void set_scope_factory(iscope_factory_type* factory) {$/;"	f	class:graphlab::distributed_shared_data
set_scope_factory	src/graphlab/shared_data/thread_shared_data.hpp	/^    void set_scope_factory(iscope_factory_type* factory) {$/;"	f	class:graphlab::thread_shared_data
set_scope_type	src/graphlab/core.hpp	/^    void set_scope_type(const std::string& scope_type) {$/;"	f	class:graphlab::core
set_shared_data_manager	src/graphlab/distributed/distributed_engine.hpp	/^    void set_shared_data_manager(ishared_data_manager_type* manager) {$/;"	f	class:graphlab::distributed_engine
set_shared_data_manager	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    void set_shared_data_manager(ishared_data_manager_type* manager) {$/;"	f	class:graphlab::pushy_distributed_engine
set_shared_data_manager	src/graphlab/engine/asynchronous_engine.hpp	/^    void set_shared_data_manager(ishared_data_manager_type* _shared_data) {$/;"	f	class:graphlab::asynchronous_engine
set_shared_data_manager	src/graphlab/engine/sim_thread_engine.hpp	/^    void set_shared_data_manager(ishared_data_manager_type* manager) {$/;"	f	class:graphlab::sim_thread_engine
set_shared_data_manager	src/graphlab/engine/synchronous_engine.hpp	/^    void set_shared_data_manager(ishared_data_manager_type* manager) {$/;"	f	class:graphlab::synchronous_engine
set_shared_data_manager	src/graphlab/engine/threaded_engine.hpp	/^    void set_shared_data_manager(ishared_data_manager_type* manager) {$/;"	f	class:graphlab::threaded_engine
set_size_and_pinuse_of_free_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	843;"	d	file:
set_size_and_pinuse_of_inuse_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	1585;"	d	file:
set_size_and_pinuse_of_inuse_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	1608;"	d	file:
set_socket_options	src/graphlab/distributed/distributed_control.cpp	/^void distributed_control::set_socket_options(int fd) {$/;"	f	class:graphlab::distributed_control
set_splash_size	src/graphlab/schedulers/splash_scheduler.hpp	/^    void set_splash_size(size_t size) { splash_size = size; }$/;"	f	class:graphlab::splash_scheduler
set_start_vertex	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  void set_start_vertex(size_t v){$/;"	f	class:graphlab::distributed_round_robin_scheduler
set_start_vertex	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  void set_start_vertex(size_t v){$/;"	f	class:graphlab::distributed_round_robin_scheduler2
set_start_vertex	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    void set_start_vertex(size_t v){$/;"	f	class:graphlab::round_robin_scheduler
set_status_str	src/graphlab/monitoring/console_monitor.hpp	/^    void set_status_str(char * str) {$/;"	f	class:graphlab::console_monitor
set_sync	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^       virtual void set_sync(size_t index,$/;"	f	class:graphlab::distributed_fullsweep_sdm
set_sync	src/graphlab/distributed/distributed_shared_data.hpp	/^    void set_sync(size_t index,$/;"	f	class:graphlab::distributed_shared_data
set_sync	src/graphlab/shared_data/thread_shared_data.hpp	/^    void set_sync(size_t index,$/;"	f	class:graphlab::thread_shared_data
set_task_budget	src/graphlab/distributed/distributed_engine.hpp	/^    virtual void set_task_budget(size_t max_tasks) {$/;"	f	class:graphlab::distributed_engine
set_task_budget	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    virtual void set_task_budget(size_t max_tasks) {$/;"	f	class:graphlab::pushy_distributed_engine
set_task_budget	src/graphlab/engine/asynchronous_engine.hpp	/^    virtual void set_task_budget(size_t max_tasks) {$/;"	f	class:graphlab::asynchronous_engine
set_task_budget	src/graphlab/engine/sim_thread_engine.hpp	/^    virtual void set_task_budget(size_t max_tasks) {$/;"	f	class:graphlab::sim_thread_engine
set_task_budget	src/graphlab/engine/synchronous_engine.hpp	/^    virtual void set_task_budget(size_t max_tasks) {$/;"	f	class:graphlab::synchronous_engine
set_task_budget	src/graphlab/engine/threaded_engine.hpp	/^    virtual void set_task_budget(size_t max_tasks) {$/;"	f	class:graphlab::threaded_engine
set_timeout	src/graphlab/distributed/distributed_engine.hpp	/^    void set_timeout(size_t timeout_secs) {$/;"	f	class:graphlab::distributed_engine
set_timeout	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    void set_timeout(size_t timeout_secs) {$/;"	f	class:graphlab::pushy_distributed_engine
set_timeout	src/graphlab/engine/asynchronous_engine.hpp	/^    void set_timeout(size_t timeout_seconds = 0) {$/;"	f	class:graphlab::asynchronous_engine
set_timeout	src/graphlab/engine/sim_thread_engine.hpp	/^    void set_timeout(size_t timeout_secs) {$/;"	f	class:graphlab::sim_thread_engine
set_timeout	src/graphlab/engine/synchronous_engine.hpp	/^    void set_timeout(size_t timeout_secs) {$/;"	f	class:graphlab::synchronous_engine
set_timeout	src/graphlab/engine/threaded_engine.hpp	/^    void set_timeout(size_t timeout_secs) {$/;"	f	class:graphlab::threaded_engine
set_total_blocks	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned set_total_blocks = (bm::set_array_size * bm::set_array_size);$/;"	m	namespace:bm
set_tree_sync	src/graphlab/distributed/distributed_shared_data.hpp	/^    void set_tree_sync(size_t index,$/;"	f	class:graphlab::distributed_shared_data
set_union	src/graphlab/util/stl_util.hpp	/^  std::set<T> set_union(const std::set<T>& a, const T& b) {$/;"	f	namespace:graphlab
set_union	src/graphlab/util/stl_util.hpp	/^  std::set<T> set_union(const std::set<T>& a, const std::set<T>& b) {$/;"	f	namespace:graphlab
set_unsync	src/graphlab/util/dense_bitset.hpp	/^    inline bool set_unsync(uint32_t b, bool value) {$/;"	f	class:graphlab::dense_bitset
set_unsync	src/graphlab/util/dense_bitset.hpp	/^    inline bool set_unsync(uint32_t b, bool value) {$/;"	f	class:graphlab::fixed_dense_bitset
set_update_function	src/graphlab/engine/synchronous_engine.hpp	/^    void set_update_function(update_function_type u) {$/;"	f	class:graphlab::synchronous_engine
set_update_function	src/graphlab/schedulers/splash_scheduler.hpp	/^    void set_update_function(update_function_type fun) { update_fun = fun; }    $/;"	f	class:graphlab::splash_scheduler
set_use_adjacent_vertices	src/graphlab/distributed/distributed_engine.hpp	/^    void set_use_adjacent_vertices(bool _use_adjacent_vertices) {$/;"	f	class:graphlab::distributed_engine
set_use_adjacent_vertices	src/graphlab/distributed/graph_lock_manager.hpp	/^  void set_use_adjacent_vertices(bool _use_adjacent_vertices) {$/;"	f	class:graphlab::graph_lock_manager
set_use_control_packets	src/graphlab/distributed/distributed_terminator.hpp	/^    void set_use_control_packets(bool ctrl) {$/;"	f	class:graphlab::distributed_terminator
set_value	src/graphlab/distributed/metrics/distributed_metrics.hpp	/^ void set_value(size_t procid, std::string key, double value) {$/;"	f	class:graphlab::distributed_metrics
set_value	src/graphlab/distributed/metrics/distributed_metrics.hpp	/^ void set_value(std::string key, double value) {$/;"	f	class:graphlab::distributed_metrics
set_vertex_scope_pushed_updates	src/graphlab/distributed/distributed_engine.hpp	/^    void set_vertex_scope_pushed_updates(bool _vertex_scope_pushed_updates) {$/;"	f	class:graphlab::distributed_engine
set_vertex_scope_pushed_updates	src/graphlab/distributed/graph_lock_manager.hpp	/^  void set_vertex_scope_pushed_updates(bool _vertex_scope_pushed_updates) {$/;"	f	class:graphlab::graph_lock_manager
set_vertex_scope_pushed_updates	src/graphlab/distributed/lock_manager.hpp	/^  void set_vertex_scope_pushed_updates(bool _vertex_scope_pushed_updates,$/;"	f	class:graphlab::distributed_lock_manager
set_word_mask	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned set_word_mask  = 0x1Fu;$/;"	m	namespace:bm
set_word_shift	src/graphlab/extern/bitmagic/bmconst.h	/^const unsigned set_word_shift = 5u;$/;"	m	namespace:bm
setconstreplies	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    atomic<size_t> setconstreplies;$/;"	m	class:graphlab::distributed_fullsweep_sdm
setconstreplies	src/graphlab/distributed/distributed_shared_data.hpp	/^    atomic<size_t> setconstreplies;$/;"	m	class:graphlab::distributed_shared_data
setid	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^      unsigned short setid;$/;"	m	struct:graphlab::execution_plan::plan_vertex
setop2op	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::operation setop2op(bm::set_operation op)$/;"	f	namespace:bm
sflags	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  flag_t       sflags;           \/* mmap and extern flag *\/$/;"	m	struct:malloc_segment	file:
shared_data	src/graphlab/core.hpp	/^    const typename types::ishared_data_manager& shared_data() const {$/;"	f	class:graphlab::core
shared_data	src/graphlab/core.hpp	/^    typename types::ishared_data_manager& shared_data() {$/;"	f	class:graphlab::core
shared_data	src/graphlab/engine/asynchronous_engine.hpp	/^    ishared_data_manager_type* shared_data;$/;"	m	class:graphlab::asynchronous_engine
shared_data_keys	apps/demo/concise_demo.cpp	/^enum shared_data_keys {$/;"	g	file:
shared_data_keys	apps/demo/demo.cpp	/^enum shared_data_keys {$/;"	g	file:
shared_data_keys	apps/gabp/gabp.cpp	/^enum shared_data_keys {$/;"	g	file:
shared_termination	src/graphlab/util/shared_termination.hpp	/^    shared_termination(size_t ncpus) {$/;"	f	class:graphlab::shared_termination
shared_termination	src/graphlab/util/shared_termination.hpp	/^  class shared_termination {$/;"	c	namespace:graphlab
shooting	apps/shooting/shooting.m	/^function [w,b] = shooting(x,y, reallambda)$/;"	f
short_t	src/graphlab/extern/bitmagic/bmconst.h	/^typedef unsigned short short_t;$/;"	t	namespace:bm
should_trim	src/graphlab/extern/metis/GKlib/dlmalloc.c	1263;"	d	file:
should_trim	src/graphlab/extern/metis/GKlib/dlmalloc.c	1265;"	d	file:
sibling	src/graphlab/util/fast_multinomial.hpp	/^    size_t sibling(size_t i) const {$/;"	f	class:graphlab::fast_multinomial
sighandler_t	src/graphlab/extern/metis/GKlib/error.c	/^typedef void (*sighandler_t)(int);  \/* this should be in signals.h, but is not there *\/$/;"	t	file:
sigma	apps/image_denoise/gibbs_denoise.cpp	/^  double sigma;$/;"	m	struct:options	file:
sigma	apps/image_denoise/loopybp_denoise.cpp	/^  double sigma;$/;"	m	struct:options	file:
sign	src/graphlab/extern/metis/GKlib/gk_macros.h	26;"	d
signal	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    virtual void signal(size_t index) {}$/;"	f	class:graphlab::distributed_fullsweep_sdm
signal	src/graphlab/distributed/distributed_shared_data.hpp	/^    void signal(size_t index) {$/;"	f	class:graphlab::distributed_shared_data
signal	src/graphlab/parallel/pthread_tools.hpp	/^    inline void signal() const {$/;"	f	class:graphlab::conditional
signal	src/graphlab/shared_data/thread_shared_data.hpp	/^    void signal(size_t index) {$/;"	f	class:graphlab::thread_shared_data
signal	src/graphlab/util/blocking_queue.hpp	/^    void signal() {$/;"	f	class:graphlab::blocking_queue
signal_all	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    virtual void signal_all() {}$/;"	f	class:graphlab::distributed_fullsweep_sdm
signal_all	src/graphlab/distributed/distributed_shared_data.hpp	/^    void signal_all() {$/;"	f	class:graphlab::distributed_shared_data
signal_all	src/graphlab/shared_data/thread_shared_data.hpp	/^    void signal_all() {$/;"	f	class:graphlab::thread_shared_data
signal_blocking_empty	src/graphlab/util/blocking_queue.hpp	/^    void signal_blocking_empty() {$/;"	f	class:graphlab::blocking_queue
signalall	src/graphlab/parallel/pthread_tools.hpp	/^    void signalall(int sig) {$/;"	f	class:graphlab::thread_group
signallock	src/graphlab/distributed/distributed_shared_data.hpp	/^    mutex signallock;$/;"	m	class:graphlab::distributed_shared_data
sim_thread_engine	src/graphlab/engine/sim_thread_engine.hpp	/^    sim_thread_engine(Graph& g, $/;"	f	class:graphlab::sim_thread_engine
sim_thread_engine	src/graphlab/engine/sim_thread_engine.hpp	/^  class sim_thread_engine : $/;"	c	namespace:graphlab
singletonlock	src/graphlab/distributed/metrics/distributed_metrics.cpp	/^mutex singletonlock;$/;"	m	namespace:graphlab	file:
size	src/graphlab/extern/bitmagic/bm.h	/^    size_type size() const $/;"	f	class:bm::bvector
size	src/graphlab/extern/bitmagic/encoding.h	/^    unsigned size() const { return (unsigned)(buf_ - start_); }$/;"	f	class:bm::decoder_base
size	src/graphlab/extern/bitmagic/encoding.h	/^inline unsigned encoder::size() const$/;"	f	class:bm::encoder
size	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  size_t       size;             \/* allocated size *\/$/;"	m	struct:malloc_segment	file:
size	src/graphlab/factors/table_factor.hpp	/^    size_t size() const { return _args.size(); }$/;"	f	class:graphlab::assignment
size	src/graphlab/factors/table_factor.hpp	/^    size_t size() const { return _args.size(); }$/;"	f	class:graphlab::table_factor
size	src/graphlab/factors/table_factor.hpp	/^    size_t size() const { return _size; }$/;"	f	class:graphlab::domain
size	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    size_t size() const {$/;"	f	class:graphlab::any_inedge_set
size	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    size_t size() const {$/;"	f	class:graphlab::multinomial_vertex_set
size	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    size_t size() const {$/;"	f	class:graphlab::restricted_vertex_set
size	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    size_t size() const {$/;"	f	class:graphlab::vertex_set
size	src/graphlab/util/blocking_queue.hpp	/^    inline size_t size() {$/;"	f	class:graphlab::blocking_queue
size	src/graphlab/util/dense_bitset.hpp	/^    inline size_t size() const {$/;"	f	class:graphlab::dense_bitset
size	src/graphlab/util/dense_bitset.hpp	/^    inline size_t size() const {$/;"	f	class:graphlab::fixed_dense_bitset
size	src/graphlab/util/generics/blob.hpp	/^    size_t size() const { return size_; }$/;"	f	class:graphlab::blob
size	src/graphlab/util/mutable_queue.hpp	/^    size_t size() const {$/;"	f	class:graphlab::mutable_queue
size	src/graphlab/util/prioritized_multiqueue.hpp	/^    size_t size() const{$/;"	f	class:graphlab::prioritized_multiqueue
size	src/graphlab/util/sampling_tree.hpp	/^    size_t size() {$/;"	f	class:graphlab::sampling_tree
size	src/graphlab/util/synchronized_circular_queue.hpp	/^    size_t size() const{$/;"	f	class:graphlab::synchronized_circular_queue
size	src/graphlab/util/synchronized_multiqueue.hpp	/^    size_t size() const{$/;"	f	class:graphlab::synchronized_multiqueue
size	src/graphlab/util/synchronized_queue.hpp	/^    size_t size() const{$/;"	f	class:graphlab::synchronized_queue
size_	src/graphlab/extern/bitmagic/bm.h	/^    size_type            size_;             \/\/!< size in bits$/;"	m	class:bm::bvector
size_	src/graphlab/extern/bitmagic/encoding.h	/^    unsigned int    size_;$/;"	m	class:bm::encoder
size_	src/graphlab/util/generics/blob.hpp	/^        size_t size_;    \/\/\/ number of bytes of the 'data' field$/;"	m	class:graphlab::blob
size_type	src/graphlab/extern/bitmagic/bm.h	/^    typedef bm::id_t                   size_type; $/;"	t	class:bm::bvector
skey_gt	src/graphlab/extern/metis/GKlib/sort.c	217;"	d	file:
skey_lt	src/graphlab/extern/metis/GKlib/sort.c	207;"	d	file:
sleeping	src/graphlab/util/shared_termination.hpp	/^    std::vector<char> sleeping;$/;"	m	class:graphlab::shared_termination
small_index	src/graphlab/extern/metis/GKlib/dlmalloc.c	1371;"	d	file:
small_index2size	src/graphlab/extern/metis/GKlib/dlmalloc.c	1372;"	d	file:
smallbin_at	src/graphlab/extern/metis/GKlib/dlmalloc.c	1376;"	d	file:
smallbins	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  mchunkptr  smallbins[(NSMALLBINS+1)*2];$/;"	m	struct:malloc_state	file:
smallmap	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  binmap_t   smallmap;$/;"	m	struct:malloc_state	file:
smallmap_is_marked	src/graphlab/extern/metis/GKlib/dlmalloc.c	1452;"	d	file:
smblks	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	/^  MALLINFO_FIELD_TYPE smblks;   \/* always 0 *\/$/;"	m	struct:mallinfo
smoothing	apps/image_denoise/gibbs_denoise.cpp	/^  std::string smoothing;$/;"	m	struct:options	file:
smoothing	apps/image_denoise/loopybp_denoise.cpp	/^  std::string smoothing;$/;"	m	struct:options	file:
sockfd_t	src/graphlab/distributed/distributed_control_types.hpp	/^  typedef int sockfd_t;$/;"	t	namespace:graphlab
socks	src/graphlab/distributed/distributed_control.hpp	/^  std::vector<sockfd_t> socks; $/;"	m	class:graphlab::distributed_control
source	apps/pagerank/tsv_to_graphlab_bin.cpp	/^  graphlab::vertex_id_t source;$/;"	m	struct:tripple	file:
source	src/graphlab/distributed/graph/cloned_graph.hpp	/^    vertex_id_t source(edge_id_t edge_id) const {$/;"	f	class:graphlab::cloned_graph
source	src/graphlab/distributed/graph/distributed_graph.hpp	/^    vertex_id_t source(edge_id_t edge_id) const {$/;"	f	class:graphlab::distributed_graph
source	src/graphlab/graph/graph.hpp	/^      inline vertex_id_t source() const { return _source; }$/;"	f	class:graphlab::graph::edge
source	src/graphlab/graph/graph.hpp	/^    vertex_id_t source(edge_id_t edge_id) const {$/;"	f	class:graphlab::graph
source	src/graphlab/scope/iscope.hpp	/^    vertex_id_t source(edge_id_t edge_id) const {$/;"	f	class:graphlab::iscope
sourcemachine	src/graphlab/distributed/lock_manager.hpp	/^    size_t sourcemachine; \/\/\/ source machine which originated this request$/;"	m	struct:graphlab::distributed_lock_manager::lock_descriptor
spinlock	src/graphlab/parallel/pthread_tools.hpp	/^    spinlock () {$/;"	f	class:graphlab::spinlock
spinlock	src/graphlab/parallel/pthread_tools.hpp	/^  class spinlock {$/;"	c	namespace:graphlab
spinlock	src/graphlab/parallel/pthread_tools.hpp	/^  typedef mutex spinlock;$/;"	t	namespace:graphlab
spinrwlock	src/graphlab/parallel/pthread_tools.hpp	/^    spinrwlock() {$/;"	f	class:graphlab::spinrwlock
spinrwlock	src/graphlab/parallel/pthread_tools.hpp	/^  class spinrwlock {$/;"	c	namespace:graphlab
splash_index	src/graphlab/schedulers/splash_scheduler.hpp	/^    std::vector< size_t > splash_index;$/;"	m	class:graphlab::splash_scheduler
splash_scheduler	src/graphlab.hpp	/^    typedef graphlab::splash_scheduler<graph> splash_scheduler;$/;"	t	struct:graphlab::types
splash_scheduler	src/graphlab/schedulers/splash_scheduler.hpp	/^    splash_scheduler(iengine_type* engine,$/;"	f	class:graphlab::splash_scheduler
splash_scheduler	src/graphlab/schedulers/splash_scheduler.hpp	/^  class splash_scheduler : $/;"	c	namespace:graphlab
splash_size	apps/factor_graph_inference/factor_bp.cpp	/^  size_t splash_size;$/;"	m	struct:options	file:
splash_size	apps/image_denoise/loopybp_denoise.cpp	/^  size_t splash_size;$/;"	m	struct:options	file:
splash_size	src/graphlab/schedulers/splash_scheduler.hpp	/^    size_t splash_size;$/;"	m	class:graphlab::splash_scheduler
splash_type	src/graphlab/schedulers/splash_scheduler.hpp	/^    typedef std::vector<vertex_id_t> splash_type;$/;"	t	class:graphlab::splash_scheduler
splashes	src/graphlab/schedulers/splash_scheduler.hpp	/^    std::vector< splash_type > splashes;    $/;"	m	class:graphlab::splash_scheduler
sqrt	src/graphlab/shared_data/shared_data_ops.hpp	/^    static void sqrt(size_t index,$/;"	f	struct:graphlab::apply_ops
src	src/graphlab/engine/synchronous_engine.hpp	/^    Graph& src;$/;"	m	class:graphlab::synchronous_engine
src_	src/graphlab/extern/bitmagic/encoding.h	/^    TDecoder&           src_;        \/\/\/< Source of bytes$/;"	m	class:bm::bit_in
srcnodeid	src/graphlab/distributed/dc_packet_headers.hpp	/^  procid_t srcnodeid;$/;"	m	struct:graphlab::remotecall_packdata
srcnodeid	src/graphlab/distributed/dc_packet_headers.hpp	/^  procid_t srcnodeid;$/;"	m	struct:graphlab::remotecallx_packdata
srcnodeid	src/graphlab/distributed/dc_packet_headers.hpp	/^  procid_t srcnodeid;$/;"	m	struct:graphlab::remotecallxs_packdata
srcvalue	apps/pagerank/pagerankapp.hpp	/^  float srcvalue;$/;"	m	struct:edge_data
srcvalue	apps/pagerank/tsv_to_graphlab_bin.cpp	/^  float srcvalue;$/;"	m	struct:edge_data	file:
ss_contains	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^  inline bool ss_contains(const ss_set_type &s, vertex_id_t v) {$/;"	f	namespace:graphlab
ss_contains	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^  inline bool ss_contains(const ss_small_set_type &s, vertex_id_t v) {$/;"	f	namespace:graphlab
ss_insert	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^  inline void ss_insert(ss_set_type &s, vertex_id_t v) {$/;"	f	namespace:graphlab
ss_insert	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^  inline void ss_insert(ss_small_set_type &s, vertex_id_t v) {$/;"	f	namespace:graphlab
ss_intersect	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^  inline void ss_intersect(ss_set_type &lhs, const ss_set_type &rhs) {$/;"	f	namespace:graphlab
ss_remove	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^  inline void ss_remove(ss_set_type &s, vertex_id_t v) {$/;"	f	namespace:graphlab
ss_remove	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^  inline void ss_remove(ss_small_set_type &s, vertex_id_t v) {$/;"	f	namespace:graphlab
ss_set	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^  struct ss_set {$/;"	s	namespace:graphlab
ss_set_type	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^  typedef ss_set::type ss_set_type;$/;"	t	namespace:graphlab
ss_set_type_iterator	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^  typedef ss_set::iterator ss_set_type_iterator;$/;"	t	namespace:graphlab
ss_size	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^  inline size_t ss_size(const ss_set_type &s) {$/;"	f	namespace:graphlab
ss_size	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^  inline size_t ss_size(const ss_small_set_type &s) {$/;"	f	namespace:graphlab
ss_small_set	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^  struct ss_small_set {$/;"	s	namespace:graphlab
ss_small_set_type	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^  typedef ss_small_set::type ss_small_set_type;$/;"	t	namespace:graphlab
ss_small_set_type_iterator	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^  typedef ss_small_set::iterator ss_small_set_type_iterator;$/;"	t	namespace:graphlab
ss_subtract	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^  inline void ss_subtract(ss_set_type &lhs, const ss_set_type &rhs) {$/;"	f	namespace:graphlab
ss_union	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^  inline void ss_union(ss_set_type &lhs, const ss_set_type &rhs) {$/;"	f	namespace:graphlab
ss_union	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^  inline void ss_union(ss_small_set_type &lhs, const ss_small_set_type &rhs) {$/;"	f	namespace:graphlab
sse2_and	src/graphlab/extern/bitmagic/bmsse_util.h	/^__m128i sse2_and(__m128i a, __m128i b)$/;"	f	namespace:bm
sse2_and_arr	src/graphlab/extern/bitmagic/bmsse_util.h	/^void sse2_and_arr(__m128i* BMRESTRICT dst, $/;"	f	namespace:bm
sse2_andnot_arr_2_mask	src/graphlab/extern/bitmagic/bmsse_util.h	/^void sse2_andnot_arr_2_mask(__m128i* BMRESTRICT dst, $/;"	f	namespace:bm
sse2_bit_block_calc_count_change	src/graphlab/extern/bitmagic/bmsse2.h	/^bm::id_t sse2_bit_block_calc_count_change(const __m128i* BMRESTRICT block,$/;"	f	namespace:bm
sse2_bit_count	src/graphlab/extern/bitmagic/bmsse2.h	/^bm::id_t sse2_bit_count(const __m128i* block, const __m128i* block_end)$/;"	f	namespace:bm
sse2_bit_count_op	src/graphlab/extern/bitmagic/bmsse2.h	/^bm::id_t sse2_bit_count_op(const __m128i* BMRESTRICT block, $/;"	f	namespace:bm
sse2_copy_block	src/graphlab/extern/bitmagic/bmsse_util.h	/^void sse2_copy_block(__m128i* BMRESTRICT dst, $/;"	f	namespace:bm
sse2_invert_arr	src/graphlab/extern/bitmagic/bmsse_util.h	/^void sse2_invert_arr(bm::word_t* first, bm::word_t* last)$/;"	f	namespace:bm
sse2_or	src/graphlab/extern/bitmagic/bmsse_util.h	/^__m128i sse2_or(__m128i a, __m128i b)$/;"	f	namespace:bm
sse2_or_arr	src/graphlab/extern/bitmagic/bmsse_util.h	/^void sse2_or_arr(__m128i* BMRESTRICT dst, $/;"	f	namespace:bm
sse2_set_block	src/graphlab/extern/bitmagic/bmsse_util.h	/^void sse2_set_block(__m128i* BMRESTRICT dst, $/;"	f	namespace:bm
sse2_sub	src/graphlab/extern/bitmagic/bmsse_util.h	/^__m128i sse2_sub(__m128i a, __m128i b)$/;"	f	namespace:bm
sse2_sub_arr	src/graphlab/extern/bitmagic/bmsse_util.h	/^void sse2_sub_arr(__m128i* BMRESTRICT dst, $/;"	f	namespace:bm
sse2_xor	src/graphlab/extern/bitmagic/bmsse_util.h	/^__m128i sse2_xor(__m128i a, __m128i b)$/;"	f	namespace:bm
sse2_xor_arr	src/graphlab/extern/bitmagic/bmsse_util.h	/^void sse2_xor_arr(__m128i* BMRESTRICT dst, $/;"	f	namespace:bm
sse2_xor_arr_2_mask	src/graphlab/extern/bitmagic/bmsse_util.h	/^void sse2_xor_arr_2_mask(__m128i* BMRESTRICT dst, $/;"	f	namespace:bm
sse4_bit_block_calc_count_change	src/graphlab/extern/bitmagic/bmsse4.h	/^bm::id_t sse4_bit_block_calc_count_change(const __m128i* BMRESTRICT block,$/;"	f	namespace:bm
sse4_bit_count	src/graphlab/extern/bitmagic/bmsse4.h	/^bm::id_t sse4_bit_count(const __m128i* block, const __m128i* block_end)$/;"	f	namespace:bm
sse4_bit_count_op	src/graphlab/extern/bitmagic/bmsse4.h	/^bm::id_t sse4_bit_count_op(const __m128i* BMRESTRICT block, $/;"	f	namespace:bm
sse_empty_guard	src/graphlab/extern/bitmagic/bmsse_util.h	/^    BMFORCEINLINE sse_empty_guard() $/;"	f	class:bm::sse_empty_guard
sse_empty_guard	src/graphlab/extern/bitmagic/bmsse_util.h	/^class sse_empty_guard$/;"	c	namespace:bm
st	src/graphlab/util/optimal_termination.hpp	/^      optimal_termination* st;$/;"	m	class:graphlab::optimal_termination::optimal_termination_worker
stacklen	src/graphlab/distributed/dc_packet_headers.hpp	/^  uint32_t stacklen;$/;"	m	struct:graphlab::remotecallx_packdata
stacklen	src/graphlab/distributed/dc_packet_headers.hpp	/^  uint32_t stacklen;$/;"	m	struct:graphlab::remotecallxs_packdata
standard_allocator	src/graphlab/extern/bitmagic/bmalloc.h	/^typedef mem_alloc<block_allocator, ptr_allocator> standard_allocator;$/;"	t	namespace:bm
standard_allocator	src/graphlab/extern/bitmagic/bmfwd.h	/^typedef mem_alloc<block_allocator, ptr_allocator> standard_allocator;$/;"	t	namespace:bm
standard_main	apps/factor_graph_inference/factor_gibbs.cpp	/^void standard_main(const options& opts,$/;"	f
standard_miniset	src/graphlab/extern/bitmagic/bmfwd.h	/^typedef bm::bvmini<bm::set_total_blocks> standard_miniset;$/;"	t	namespace:bm
start	apps/pagerank/pagerankapp.cpp	/^void pagerankapp::start() {$/;"	f	class:pagerankapp
start	apps/svm/svm.cpp	/^void start(gl_types::iengine *engine, graph_type &g, $/;"	f
start	src/graphlab/core.hpp	/^    double start() {$/;"	f	class:graphlab::core
start	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    void start() { sched.start(); };$/;"	f	class:graphlab::distributed_collaborative_scheduler_wrapper
start	src/graphlab/distributed/distributed_engine.hpp	/^    void start() {$/;"	f	class:graphlab::distributed_engine
start	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    void start() { sched.start(); };$/;"	f	class:graphlab::distributed_scheduler_wrapper
start	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    exec_status start() {$/;"	f	class:graphlab::pushy_distributed_engine
start	src/graphlab/engine/asynchronous_engine.hpp	/^	void start() {$/;"	f	class:graphlab::asynchronous_engine
start	src/graphlab/engine/sim_thread_engine.hpp	/^    exec_status start() {$/;"	f	class:graphlab::sim_thread_engine
start	src/graphlab/engine/synchronous_engine.hpp	/^    void start() {$/;"	f	class:graphlab::synchronous_engine
start	src/graphlab/engine/threaded_engine.hpp	/^    exec_status start() {$/;"	f	class:graphlab::threaded_engine
start	src/graphlab/extern/bitmagic/bmgamma.h	/^    void start()$/;"	f	class:bm::gamma_decoder
start	src/graphlab/extern/bitmagic/encoding.h	/^    void start()$/;"	f	class:bm::gamma_decoder
start	src/graphlab/parallel/pthread_tools.hpp	/^    void start() {$/;"	f	class:graphlab::thread
start	src/graphlab/parallel/pthread_tools.hpp	/^    void start(size_t cpu_id){$/;"	f	class:graphlab::thread
start	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    void start() {$/;"	f	class:graphlab::clustered_priority_scheduler
start	src/graphlab/schedulers/colored_scheduler.hpp	/^    void start() {$/;"	f	class:graphlab::colored_scheduler
start	src/graphlab/schedulers/ischeduler.hpp	/^    virtual void start() {};$/;"	f	class:graphlab::ischeduler
start	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    void start() {$/;"	f	class:graphlab::set_scheduler
start	src/graphlab/schedulers/splash_scheduler.hpp	/^    void start() {$/;"	f	class:graphlab::splash_scheduler
start	src/graphlab/util/timer.hpp	/^    void start() { gettimeofday(&start_time_, NULL); }$/;"	f	class:graphlab::timer
start_	src/graphlab/extern/bitmagic/encoding.h	/^    unsigned char*  start_;$/;"	m	class:bm::encoder
start_	src/graphlab/extern/bitmagic/encoding.h	/^   const unsigned char*   start_;$/;"	m	class:bm::decoder_base
start_stream	src/graphlab/logger/logger.cpp	/^file_logger& file_logger::start_stream(int lineloglevel,const char* file,const char* function, int line) {$/;"	f	class:file_logger
start_time	src/graphlab/engine/threaded_engine.hpp	/^    size_t start_time;$/;"	m	class:graphlab::threaded_engine
start_time_	src/graphlab/util/timer.hpp	/^    timeval start_time_;   $/;"	m	class:graphlab::timer
start_time_millis	src/graphlab/engine/asynchronous_engine.hpp	/^    size_t start_time_millis;$/;"	m	class:graphlab::asynchronous_engine
start_with_iteration_limit	src/graphlab/engine/synchronous_engine.hpp	/^    void start_with_iteration_limit(size_t numiterations = 0) {$/;"	f	class:graphlab::synchronous_engine
started_task	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    void started_task(size_t cpuid,$/;"	f	class:graphlab::distributed_collaborative_scheduler_wrapper
started_task	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    void started_task(size_t cpuid,$/;"	f	class:graphlab::distributed_scheduler_wrapper
startschedule	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    barrier *startschedule;$/;"	m	class:graphlab::set_scheduler
stat_	src/graphlab/extern/bitmagic/bmblocks.h	/^        bv_statistics*      stat_;$/;"	m	class:bm::blocks_manager::block_opt_func
state	src/graphlab/extern/bitmagic/bmserial.h	/^    iterator_state state() const { return this->state_; }$/;"	f	class:bm::serial_stream_iterator
state_	src/graphlab/extern/bitmagic/bmserial.h	/^    iterator_state     state_;$/;"	m	class:bm::serial_stream_iterator
staticrestriction	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    bool staticrestriction;$/;"	m	class:graphlab::restricted_vertex_set
statistics	src/graphlab/extern/bitmagic/bm.h	/^    struct statistics : public bv_statistics$/;"	s	class:bm::bvector
stats	src/graphlab/distributed/metrics/distributed_metrics.hpp	/^    std::vector< std::map<std::string, double> > stats;$/;"	m	class:graphlab::distributed_metrics
stats_filename	apps/factor_graph_inference/factor_bp.cpp	/^  std::string stats_filename;$/;"	m	struct:options	file:
stats_filename	apps/factor_graph_inference/factor_gibbs.cpp	/^  std::string stats_filename;$/;"	m	struct:options	file:
status_enum	src/graphlab/schedulers/ischeduler.hpp	/^    enum status_enum {$/;"	g	struct:graphlab::sched_status
std_sync_keys	apps/shooting/shooting.cpp	/^enum std_sync_keys { WCHANGE_KEY };$/;"	g	file:
stop	src/graphlab/distributed/distributed_engine.hpp	/^    void stop() {$/;"	f	class:graphlab::distributed_engine
stop	src/graphlab/engine/asynchronous_engine.hpp	/^    void stop() {$/;"	f	class:graphlab::asynchronous_engine
stop	src/graphlab/engine/synchronous_engine.hpp	/^    void stop() {$/;"	f	class:graphlab::synchronous_engine
stop	src/graphlab/extern/bitmagic/bmgamma.h	/^    void stop()$/;"	f	class:bm::gamma_decoder
stop	src/graphlab/extern/bitmagic/encoding.h	/^    void stop()$/;"	f	class:bm::gamma_decoder
stop	src/graphlab/schedulers/colored_scheduler.hpp	/^    void stop() {$/;"	f	class:graphlab::colored_scheduler
stop	src/graphlab/schedulers/ischeduler.hpp	/^    virtual void stop() {};$/;"	f	class:graphlab::ischeduler
stop	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    void stop() {$/;"	f	class:graphlab::set_scheduler
stop	src/graphlab/util/timer.cpp	/^    bool stop;$/;"	m	class:graphlab::hundredms_timer	file:
stop_blocking	src/graphlab/util/blocking_queue.hpp	/^    inline void stop_blocking() {$/;"	f	class:graphlab::blocking_queue
strategy	src/graphlab/extern/bitmagic/bmconst.h	/^enum strategy$/;"	g	namespace:bm
strbuf	src/graphlab/extern/metis/GKlib/gk_struct.h	/^  char *strbuf;     \/* The memory that stores all the entries *\/$/;"	m	struct:__anon11
stream_flush	src/graphlab/logger/logger.hpp	/^  void stream_flush() {$/;"	f	class:file_logger
streamactive	src/graphlab/logger/logger.hpp	/^  bool streamactive;$/;"	m	class:file_logger
streambuffer	src/graphlab/logger/logger.hpp	/^  std::stringstream streambuffer;$/;"	m	class:file_logger
streamloglevel	src/graphlab/logger/logger.hpp	/^  int streamloglevel;$/;"	m	class:file_logger
strtoidx	src/graphlab/extern/metis/libmetis/util.c	/^idxtype strtoidx(const char *nptr, char **endptr, int base)$/;"	f
struct_type	src/graphlab/distributed/serialize_dispatch.hpp	/^class SER_GET_STRUCT_TYPE0 { public: typedef SERPACKSTRUCT0<F> struct_type; };$/;"	t	class:graphlab::SER_GET_STRUCT_TYPE0
struct_type	src/graphlab/distributed/serialize_dispatch.hpp	/^class SER_GET_STRUCT_TYPE1 { public: typedef SERPACKSTRUCT1<F, F0> struct_type; };$/;"	t	class:graphlab::SER_GET_STRUCT_TYPE1
struct_type	src/graphlab/distributed/serialize_dispatch.hpp	/^class SER_GET_STRUCT_TYPE2 { public: typedef SERPACKSTRUCT2<F, F0, F1> struct_type; };$/;"	t	class:graphlab::SER_GET_STRUCT_TYPE2
struct_type	src/graphlab/distributed/serialize_dispatch.hpp	/^class SER_GET_STRUCT_TYPE3 { public: typedef SERPACKSTRUCT3<F, F0, F1, F2> struct_type; };$/;"	t	class:graphlab::SER_GET_STRUCT_TYPE3
struct_type	src/graphlab/distributed/serialize_dispatch.hpp	/^class SER_GET_STRUCT_TYPE4 { public: typedef SERPACKSTRUCT4<F, F0, F1, F2, F3> struct_type; };$/;"	t	class:graphlab::SER_GET_STRUCT_TYPE4
struct_type	src/graphlab/distributed/serialize_dispatch.hpp	/^class SER_GET_STRUCT_TYPE5 { public: typedef SERPACKSTRUCT5<F, F0, F1, F2, F3, F4> struct_type; };$/;"	t	class:graphlab::SER_GET_STRUCT_TYPE5
struct_type	src/graphlab/distributed/serialize_dispatch.hpp	/^class SER_GET_STRUCT_TYPE6 { public: typedef SERPACKSTRUCT6<F, F0, F1, F2, F3, F4, F5> struct_type; };$/;"	t	class:graphlab::SER_GET_STRUCT_TYPE6
stype	src/graphlab/distributed/distributed_scope.hpp	/^    scope_range::scope_range_enum stype;$/;"	m	class:graphlab::distributed_scope
sub_bit_block	src/graphlab/extern/bitmagic/bmfunc.h	/^inline void sub_bit_block(unsigned* dest, $/;"	f	namespace:bm
sub_block_	src/graphlab/extern/bitmagic/bmrandom.h	/^    bm::word_t*       sub_block_;$/;"	m	class:bm::random_subset
subgradientsvm	apps/svm/subgradientsvm.m	/^function [w,b] = subgradientsvm(x,y)$/;"	f
sum	src/graphlab/extern/bitmagic/bmfunc.h	/^    bm::word_t sum() const { return this->sum_; }$/;"	f	class:bm::bitblock_sum_adapter
sum	src/graphlab/shared_data/shared_data_ops.hpp	/^    static void sum(size_t index,$/;"	f	struct:graphlab::sync_ops
sum_	src/graphlab/extern/bitmagic/bmfunc.h	/^    bm::word_t sum_;$/;"	m	class:bm::bitblock_sum_adapter
sum_arr	src/graphlab/extern/bitmagic/bmfunc.h	/^template<class T> T sum_arr(T* first, T* last)$/;"	f	namespace:bm
supported_events	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    size_t supported_events() {$/;"	f	class:graphlab::any_inedge_set
supported_events	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    size_t supported_events() {$/;"	f	class:graphlab::multinomial_vertex_set
supported_events	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    size_t supported_events() {$/;"	f	class:graphlab::restricted_vertex_set
supported_events	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    size_t supported_events() {$/;"	f	class:graphlab::vertex_set
supported_profiling_info	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    std::vector<std::string> supported_profiling_info() {$/;"	f	class:graphlab::pushy_distributed_engine
sv	apps/svm/svm.cpp	/^  bool sv;$/;"	m	struct:dat_vertex_data	file:
swap	src/graphlab/extern/bitmagic/bm.h	/^    void swap(bvector<Alloc, MS>& bv)$/;"	f	class:bm::bvector
swap	src/graphlab/extern/bitmagic/bmblocks.h	/^    void swap(blocks_manager& bm)$/;"	f	class:bm::blocks_manager
swap	src/graphlab/extern/bitmagic/bmvmin.h	/^    void swap(bvector_mini& bvm)$/;"	f	class:bm::bvector_mini
swap	src/graphlab/extern/bitmagic/bmvmin.h	/^    void swap(bvmini& mset)$/;"	f	class:bm::bvmini
swap	src/graphlab/extern/bitmagic/bmvmin.h	/^    void swap(miniset& mset)$/;"	f	class:bm::miniset
swap	src/graphlab/util/generics/any.hpp	/^    any& swap(any & rhs) {$/;"	f	class:graphlab::any
swap	src/graphlab/util/generics/blob.hpp	/^    void swap(blob &b) {$/;"	f	class:graphlab::blob
swap	src/graphlab/util/mutable_queue.hpp	/^    void swap(size_t i, size_t j) {$/;"	f	class:graphlab::mutable_queue
swap_graphs	src/graphlab/scope/synchronous_scope_factory.hpp	/^    void swap_graphs() {$/;"	f	class:graphlab::synchronous_scope_factory
sweep_scheduler	src/graphlab.hpp	/^    typedef graphlab::sweep_scheduler<graph> sweep_scheduler;$/;"	t	struct:graphlab::types
sweep_scheduler	src/graphlab/schedulers/sweep_scheduler.hpp	/^    sweep_scheduler(iengine_type* engine,$/;"	f	class:graphlab::sweep_scheduler
sweep_scheduler	src/graphlab/schedulers/sweep_scheduler.hpp	/^  class sweep_scheduler : $/;"	c	namespace:graphlab
sync	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    virtual void sync(Graph& graph, size_t index) {}$/;"	f	class:graphlab::distributed_fullsweep_sdm
sync	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    virtual void sync(size_t index) {}$/;"	f	class:graphlab::distributed_fullsweep_sdm
sync	src/graphlab/distributed/distributed_shared_data.hpp	/^    void sync(Graph& graph, size_t index) {$/;"	f	class:graphlab::distributed_shared_data
sync	src/graphlab/distributed/distributed_shared_data.hpp	/^    void sync(size_t index) {$/;"	f	class:graphlab::distributed_shared_data
sync	src/graphlab/shared_data/thread_shared_data.hpp	/^    void sync(Graph& graph, size_t index) {$/;"	f	class:graphlab::thread_shared_data
sync	src/graphlab/shared_data/thread_shared_data.hpp	/^    void sync(size_t index) {$/;"	f	class:graphlab::thread_shared_data
sync_all	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    virtual void sync_all() {}$/;"	f	class:graphlab::distributed_fullsweep_sdm
sync_all	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    virtual void sync_all(Graph& graph) {}$/;"	f	class:graphlab::distributed_fullsweep_sdm
sync_all	src/graphlab/distributed/distributed_shared_data.hpp	/^    void sync_all() {$/;"	f	class:graphlab::distributed_shared_data
sync_all	src/graphlab/distributed/distributed_shared_data.hpp	/^    void sync_all(Graph& graph) {$/;"	f	class:graphlab::distributed_shared_data
sync_all	src/graphlab/shared_data/thread_shared_data.hpp	/^    void sync_all() {$/;"	f	class:graphlab::thread_shared_data
sync_all	src/graphlab/shared_data/thread_shared_data.hpp	/^    void sync_all(Graph& graph) {$/;"	f	class:graphlab::thread_shared_data
sync_barrier	src/graphlab/distributed/distributed_engine.hpp	/^    void sync_barrier() {$/;"	f	class:graphlab::distributed_engine
sync_barrier_on	src/graphlab/distributed/distributed_engine.hpp	/^    volatile size_t sync_barrier_on;$/;"	m	class:graphlab::distributed_engine
sync_complete_handler	src/graphlab/distributed/distributed_shared_data.hpp	/^    static void sync_complete_handler(distributed_control &dc,$/;"	f	class:graphlab::distributed_shared_data
sync_from_local	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^   void sync_from_local(size_t index) {$/;"	f	class:graphlab::distributed_fullsweep_sdm
sync_from_local	src/graphlab/distributed/distributed_shared_data.hpp	/^  void sync_from_local(size_t index) {$/;"	f	class:graphlab::distributed_shared_data
sync_fun	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      sync_function_type sync_fun;$/;"	m	struct:graphlab::distributed_fullsweep_sdm::sync_params
sync_fun	src/graphlab/distributed/distributed_shared_data.hpp	/^      sync_function_type sync_fun;$/;"	m	struct:graphlab::distributed_shared_data::sync_params
sync_fun	src/graphlab/shared_data/thread_shared_data.hpp	/^      sync_function_type sync_fun;$/;"	m	struct:graphlab::thread_shared_data::sync_task
sync_function_type	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    typedef typename base::sync_function_type sync_function_type;$/;"	t	class:graphlab::distributed_fullsweep_sdm
sync_function_type	src/graphlab/distributed/distributed_shared_data.hpp	/^    typedef typename base::sync_function_type sync_function_type;$/;"	t	class:graphlab::distributed_shared_data
sync_function_type	src/graphlab/shared_data/ishared_data.hpp	/^    typedef void(*sync_function_type)(size_t index,$/;"	t	class:graphlab::ishared_data
sync_function_type	src/graphlab/shared_data/ishared_data_manager.hpp	/^    typedef typename base::sync_function_type sync_function_type;$/;"	t	class:graphlab::ishared_data_manager
sync_function_type	src/graphlab/shared_data/thread_shared_data.hpp	/^    typedef typename base::sync_function_type sync_function_type;$/;"	t	class:graphlab::thread_shared_data
sync_in_progress	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      bool sync_in_progress;$/;"	m	struct:graphlab::distributed_fullsweep_sdm::sync_task
sync_in_progress	src/graphlab/distributed/distributed_shared_data.hpp	/^      bool sync_in_progress;$/;"	m	struct:graphlab::distributed_shared_data::sync_task
sync_interval	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      size_t sync_interval;$/;"	m	struct:graphlab::distributed_fullsweep_sdm::sync_task
sync_interval	src/graphlab/distributed/distributed_shared_data.hpp	/^      size_t sync_interval;$/;"	m	struct:graphlab::distributed_shared_data::sync_task
sync_interval	src/graphlab/shared_data/thread_shared_data.hpp	/^      size_t sync_interval;$/;"	m	struct:graphlab::thread_shared_data::sync_task
sync_ip_list	src/graphlab/distributed/distributed_control.cpp	/^void distributed_control::sync_ip_list() {$/;"	f	class:graphlab::distributed_control
sync_map	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    sync_map_type sync_map;$/;"	m	class:graphlab::distributed_fullsweep_sdm
sync_map	src/graphlab/distributed/distributed_shared_data.hpp	/^    sync_map_type sync_map;$/;"	m	class:graphlab::distributed_shared_data
sync_map	src/graphlab/shared_data/thread_shared_data.hpp	/^    sync_map_type sync_map;$/;"	m	class:graphlab::thread_shared_data
sync_map_lock	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    mutex sync_map_lock;$/;"	m	class:graphlab::distributed_fullsweep_sdm
sync_map_lock	src/graphlab/distributed/distributed_shared_data.hpp	/^    mutex sync_map_lock;$/;"	m	class:graphlab::distributed_shared_data
sync_map_type	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    typedef std::map<size_t, sync_task> sync_map_type;$/;"	t	class:graphlab::distributed_fullsweep_sdm
sync_map_type	src/graphlab/distributed/distributed_shared_data.hpp	/^    typedef std::map<size_t, sync_task> sync_map_type;$/;"	t	class:graphlab::distributed_shared_data
sync_map_type	src/graphlab/shared_data/thread_shared_data.hpp	/^    typedef std::map<size_t, sync_task> sync_map_type;$/;"	t	class:graphlab::thread_shared_data
sync_ops	src/graphlab.hpp	/^    typedef graphlab::sync_ops<Graph> sync_ops;$/;"	t	struct:graphlab::types
sync_ops	src/graphlab/shared_data/shared_data_ops.hpp	/^  struct sync_ops {$/;"	s	namespace:graphlab
sync_params	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    struct sync_params{$/;"	s	class:graphlab::distributed_fullsweep_sdm
sync_params	src/graphlab/distributed/distributed_shared_data.hpp	/^    struct sync_params{$/;"	s	class:graphlab::distributed_shared_data
sync_progression	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    std::map<size_t, sync_state> sync_progression;$/;"	m	class:graphlab::distributed_fullsweep_sdm
sync_progression	src/graphlab/distributed/distributed_shared_data.hpp	/^    std::map<size_t, sync_state> sync_progression;$/;"	m	class:graphlab::distributed_shared_data
sync_state	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    struct sync_state {$/;"	s	class:graphlab::distributed_fullsweep_sdm
sync_state	src/graphlab/distributed/distributed_shared_data.hpp	/^    struct sync_state {$/;"	s	class:graphlab::distributed_shared_data
sync_task	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      sync_task() :$/;"	f	struct:graphlab::distributed_fullsweep_sdm::sync_task
sync_task	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    struct sync_task {$/;"	s	class:graphlab::distributed_fullsweep_sdm
sync_task	src/graphlab/distributed/distributed_shared_data.hpp	/^      sync_task() :$/;"	f	struct:graphlab::distributed_shared_data::sync_task
sync_task	src/graphlab/distributed/distributed_shared_data.hpp	/^    struct sync_task {$/;"	s	class:graphlab::distributed_shared_data
sync_task	src/graphlab/shared_data/thread_shared_data.hpp	/^      sync_task() :$/;"	f	struct:graphlab::thread_shared_data::sync_task
sync_task	src/graphlab/shared_data/thread_shared_data.hpp	/^    struct sync_task {$/;"	s	class:graphlab::thread_shared_data
synch_scope_factory_type	src/graphlab/engine/synchronous_engine.hpp	/^    typedef synchronous_scope_factory<Graph> synch_scope_factory_type;$/;"	t	class:graphlab::synchronous_engine
synch_scope_type	src/graphlab/engine/synchronous_engine.hpp	/^    typedef synchronous_scope<Graph> synch_scope_type;$/;"	t	class:graphlab::synchronous_engine
synchronized_circular_queue	src/graphlab/util/synchronized_circular_queue.hpp	/^    synchronized_circular_queue(size_t sizehint = 128) { $/;"	f	class:graphlab::synchronized_circular_queue
synchronized_circular_queue	src/graphlab/util/synchronized_circular_queue.hpp	/^  class synchronized_circular_queue {$/;"	c	namespace:graphlab
synchronized_multiqueue	src/graphlab/util/synchronized_multiqueue.hpp	/^    synchronized_multiqueue(size_t numqueues_ = 8) {$/;"	f	class:graphlab::synchronized_multiqueue
synchronized_multiqueue	src/graphlab/util/synchronized_multiqueue.hpp	/^  class synchronized_multiqueue {$/;"	c	namespace:graphlab
synchronized_queue	src/graphlab/util/synchronized_queue.hpp	/^    synchronized_queue() { };$/;"	f	class:graphlab::synchronized_queue
synchronized_queue	src/graphlab/util/synchronized_queue.hpp	/^  class synchronized_queue {$/;"	c	namespace:graphlab
synchronized_unordered_map	src/graphlab/util/synchronized_unordered_map.hpp	/^   synchronized_unordered_map(size_t numblocks):data(numblocks), $/;"	f	class:graphlab::synchronized_unordered_map
synchronized_unordered_map	src/graphlab/util/synchronized_unordered_map.hpp	/^class synchronized_unordered_map {$/;"	c	namespace:graphlab
synchronous	src/graphlab.hpp	/^      typedef graphlab::synchronous_engine<graph> synchronous;$/;"	t	struct:graphlab::types::engines
synchronous_engine	src/graphlab/engine/synchronous_engine.hpp	/^    synchronous_engine(Graph& g, size_t num_cpus = thread::cpu_count()) :$/;"	f	class:graphlab::synchronous_engine
synchronous_engine	src/graphlab/engine/synchronous_engine.hpp	/^  class synchronous_engine : $/;"	c	namespace:graphlab
synchronous_scope	src/graphlab/scope/synchronous_scope.hpp	/^    synchronous_scope() : base(NULL,0) { }$/;"	f	class:graphlab::synchronous_scope
synchronous_scope	src/graphlab/scope/synchronous_scope.hpp	/^    synchronous_scope(Graph* srcgraph, Graph* destgraph,$/;"	f	class:graphlab::synchronous_scope
synchronous_scope	src/graphlab/scope/synchronous_scope.hpp	/^  class synchronous_scope : $/;"	c	namespace:graphlab
synchronous_scope_factory	src/graphlab/scope/synchronous_scope_factory.hpp	/^    synchronous_scope_factory(Graph& srcgraph, $/;"	f	class:graphlab::synchronous_scope_factory
synchronous_scope_factory	src/graphlab/scope/synchronous_scope_factory.hpp	/^  class synchronous_scope_factory : $/;"	c	namespace:graphlab
synchronous_scope_type	src/graphlab/scope/synchronous_scope_factory.hpp	/^    typedef synchronous_scope<Graph> synchronous_scope_type;$/;"	t	class:graphlab::synchronous_scope_factory
synchronous_worker	src/graphlab/engine/synchronous_engine.hpp	/^      synchronous_worker() : engine(NULL), workerid(0) {  }$/;"	f	class:graphlab::synchronous_engine::synchronous_worker
synchronous_worker	src/graphlab/engine/synchronous_engine.hpp	/^    class synchronous_worker : public runnable {      $/;"	c	class:graphlab::synchronous_engine
synclock	src/graphlab/distributed/metrics/distributed_metrics.hpp	/^    mutex synclock;$/;"	m	class:graphlab::distributed_metrics
syncs_in_progress	src/graphlab/distributed/distributed_shared_data.hpp	/^    atomic<size_t> syncs_in_progress;$/;"	m	class:graphlab::distributed_shared_data
sys_alloc	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void* sys_alloc(mstate m, size_t nb) {$/;"	f	file:
sys_trim	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static int sys_trim(mstate m, size_t pad) {$/;"	f	file:
t	src/graphlab/util/optimal_termination.hpp	/^    thread t;$/;"	m	class:graphlab::optimal_termination
table_factor	src/graphlab/factors/table_factor.hpp	/^    table_factor() { }$/;"	f	class:graphlab::table_factor
table_factor	src/graphlab/factors/table_factor.hpp	/^    table_factor(const domain_type& dom) :$/;"	f	class:graphlab::table_factor
table_factor	src/graphlab/factors/table_factor.hpp	/^    table_factor(const table_factor& other) :$/;"	f	class:graphlab::table_factor
table_factor	src/graphlab/factors/table_factor.hpp	/^  class table_factor {$/;"	c	namespace:graphlab
tail	src/graphlab/util/synchronized_circular_queue.hpp	/^    size_t tail;      \/\/\/ points to one past the last element in the queue$/;"	m	class:graphlab::synchronized_circular_queue
target	apps/pagerank/tsv_to_graphlab_bin.cpp	/^  graphlab::vertex_id_t target;$/;"	m	struct:tripple	file:
target	src/graphlab/distributed/distributed_control.hpp	/^    procid_t target;$/;"	m	struct:graphlab::distributed_control::send_req_data
target	src/graphlab/distributed/graph/cloned_graph.hpp	/^    vertex_id_t target(edge_id_t edge_id) const {$/;"	f	class:graphlab::cloned_graph
target	src/graphlab/distributed/graph/distributed_graph.hpp	/^    vertex_id_t target(edge_id_t edge_id) const {$/;"	f	class:graphlab::distributed_graph
target	src/graphlab/graph/graph.hpp	/^      inline vertex_id_t target() const { return _target; }   $/;"	f	class:graphlab::graph::edge
target	src/graphlab/graph/graph.hpp	/^    vertex_id_t target(edge_id_t edge_id) const {$/;"	f	class:graphlab::graph
target	src/graphlab/scope/iscope.hpp	/^    vertex_id_t target(edge_id_t edge_id) const {$/;"	f	class:graphlab::iscope
targetfn	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT0{ F targetfn;};$/;"	m	struct:graphlab::PACKSTRUCT0
targetfn	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT1{ F targetfn; T0 i0; };$/;"	m	struct:graphlab::PACKSTRUCT1
targetfn	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT2{ F targetfn; T0 i0; T1 i1; };$/;"	m	struct:graphlab::PACKSTRUCT2
targetfn	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT3{ F targetfn; T0 i0; T1 i1; T2 i2; };$/;"	m	struct:graphlab::PACKSTRUCT3
targetfn	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT4{ F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; };$/;"	m	struct:graphlab::PACKSTRUCT4
targetfn	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT5{ F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; };$/;"	m	struct:graphlab::PACKSTRUCT5
targetfn	src/graphlab/distributed/repack_dispatch.hpp	/^struct PACKSTRUCT6{ F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; T5 i5; };$/;"	m	struct:graphlab::PACKSTRUCT6
targetfn	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; $/;"	m	struct:graphlab::SERPACKSTRUCT1
targetfn	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; $/;"	m	struct:graphlab::SERPACKSTRUCT2
targetfn	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; T2 i2; $/;"	m	struct:graphlab::SERPACKSTRUCT3
targetfn	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; $/;"	m	struct:graphlab::SERPACKSTRUCT4
targetfn	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; $/;"	m	struct:graphlab::SERPACKSTRUCT5
targetfn	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn; T0 i0; T1 i1; T2 i2; T3 i3; T4 i4; T5 i5; $/;"	m	struct:graphlab::SERPACKSTRUCT6
targetfn	src/graphlab/distributed/serialize_dispatch.hpp	/^  F targetfn;$/;"	m	struct:graphlab::SERPACKSTRUCT0
task_budget	src/graphlab/engine/asynchronous_engine.hpp	/^    size_t task_budget;$/;"	m	class:graphlab::asynchronous_engine
task_count_termination	src/graphlab/util/task_count_termination.hpp	/^    task_count_termination() : newtaskcount(0), $/;"	f	class:graphlab::task_count_termination
task_count_termination	src/graphlab/util/task_count_termination.hpp	/^  class task_count_termination {$/;"	c	namespace:graphlab
task_counter	src/graphlab/monitoring/console_monitor.hpp	/^    unsigned long task_counter;$/;"	m	class:graphlab::console_monitor
task_counts	src/graphlab/distributed/distributed_engine.hpp	/^    std::vector<size_t> task_counts;$/;"	m	class:graphlab::distributed_engine
task_counts	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    std::vector<size_t> task_counts;$/;"	m	class:graphlab::pushy_distributed_engine
task_counts	src/graphlab/engine/sim_thread_engine.hpp	/^    std::vector<size_t> task_counts;$/;"	m	class:graphlab::sim_thread_engine
task_counts	src/graphlab/engine/synchronous_engine.hpp	/^    std::vector<size_t> task_counts;$/;"	m	class:graphlab::synchronous_engine
task_counts	src/graphlab/engine/threaded_engine.hpp	/^    std::vector<size_t> task_counts;$/;"	m	class:graphlab::threaded_engine
task_finished	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    void  task_finished(vertex_id_t vid, update_function_type func) {$/;"	f	class:graphlab::distributed_collaborative_scheduler_wrapper
task_finished_handler	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    static void task_finished_handler(distributed_control& dc,$/;"	f	class:graphlab::distributed_collaborative_scheduler_wrapper
task_priority_pair	src/graphlab/schedulers/support/direct_callback.hpp	/^    typedef std::pair<update_task_type, double> task_priority_pair;$/;"	t	class:graphlab::direct_callback
task_queue	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    mutable_queue<size_t, double> task_queue;$/;"	m	class:graphlab::clustered_priority_scheduler
task_queue	src/graphlab/schedulers/fifo_scheduler.hpp	/^    std::queue<update_task_type> task_queue; \/\/\/ The actual task queue$/;"	m	class:graphlab::fifo_scheduler
task_queue	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^    synchronized_multiqueue<update_task_type> task_queue; \/\/\/ The actual task queue$/;"	m	class:graphlab::multiqueue_scheduler
task_queue	src/graphlab/schedulers/priority_scheduler.hpp	/^    mutable_queue<size_t, double> task_queue;$/;"	m	class:graphlab::priority_scheduler
task_queues	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    std::vector<taskqueue_t> task_queues; \/\/\/ The actual task queue$/;"	m	class:graphlab::multiqueue_fifo_scheduler
task_queues	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    std::vector<taskqueue_type> task_queues; \/\/\/ The actual task queue$/;"	m	class:graphlab::multiqueue_priority_scheduler
task_set	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  std::vector<update_task_type> task_set;           \/\/\/ collection of tasks$/;"	m	class:graphlab::distributed_round_robin_scheduler
task_set	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  std::vector<update_task_type> task_set;           \/\/\/ collection of tasks$/;"	m	class:graphlab::distributed_round_robin_scheduler2
task_set	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    binary_vertex_task_set<Graph> task_set;$/;"	m	class:graphlab::clustered_priority_scheduler
task_set	src/graphlab/schedulers/priority_scheduler.hpp	/^    vertex_task_set<Graph> task_set;$/;"	m	class:graphlab::priority_scheduler
task_set	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    std::vector<update_task_type> task_set;           \/\/\/ collection of tasks$/;"	m	class:graphlab::round_robin_scheduler
task_set	src/graphlab/schedulers/support/vertex_task_set.hpp	/^    std::vector< vertex_fun_set > task_set;    $/;"	m	class:graphlab::vertex_task_set
task_worker	src/graphlab/distributed/distributed_engine.hpp	/^      task_worker() : engine(NULL), workerid(0) {  }$/;"	f	class:graphlab::distributed_engine::task_worker
task_worker	src/graphlab/distributed/distributed_engine.hpp	/^    class task_worker : public runnable {      $/;"	c	class:graphlab::distributed_engine
task_worker	src/graphlab/distributed/pushy_distributed_engine.hpp	/^      task_worker() : engine(NULL), workerid(0) {  }$/;"	f	class:graphlab::pushy_distributed_engine::task_worker
task_worker	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    class task_worker : public runnable {      $/;"	c	class:graphlab::pushy_distributed_engine
taskbudget	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    size_t taskbudget;$/;"	m	class:graphlab::pushy_distributed_engine
taskbudget	src/graphlab/engine/sim_thread_engine.hpp	/^    size_t taskbudget;$/;"	m	class:graphlab::sim_thread_engine
taskbudget	src/graphlab/engine/synchronous_engine.hpp	/^    size_t taskbudget;$/;"	m	class:graphlab::synchronous_engine
taskbudget	src/graphlab/engine/threaded_engine.hpp	/^    size_t taskbudget;$/;"	m	class:graphlab::threaded_engine
taskcount	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    atomic<size_t> taskcount;$/;"	m	class:graphlab::pushy_distributed_engine
taskcount	src/graphlab/engine/sim_thread_engine.hpp	/^    atomic<size_t> taskcount;$/;"	m	class:graphlab::sim_thread_engine
taskcount	src/graphlab/engine/synchronous_engine.hpp	/^    atomic<size_t> taskcount;$/;"	m	class:graphlab::synchronous_engine
taskcount	src/graphlab/engine/threaded_engine.hpp	/^    atomic<size_t> taskcount;$/;"	m	class:graphlab::threaded_engine
tasklock	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    spinlock tasklock;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
taskqueue_t	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    typedef std::queue<update_task_type> taskqueue_t;$/;"	t	class:graphlab::multiqueue_fifo_scheduler
taskqueue_type	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    typedef mutable_queue<update_task_type, double> taskqueue_type;$/;"	t	class:graphlab::multiqueue_priority_scheduler
tasks	src/graphlab/schedulers/support/direct_callback.hpp	/^    std::vector< task_priority_pair > tasks; \/\/\/ The collection of tasks inserted$/;"	m	class:graphlab::direct_callback
tasks_added	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^	atomic< size_t > tasks_added;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
tasks_done	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^	atomic< size_t > tasks_done;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
tbinptr	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^typedef struct malloc_tree_chunk* tbinptr; \/* The type of bins of trees *\/$/;"	t	typeref:struct:malloc_tree_chunk	file:
tchunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^typedef struct malloc_tree_chunk  tchunk;$/;"	t	typeref:struct:malloc_tree_chunk	file:
tchunkptr	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^typedef struct malloc_tree_chunk* tchunkptr;$/;"	t	typeref:struct:malloc_tree_chunk	file:
temp_block_	src/graphlab/extern/bitmagic/bmblocks.h	/^        bm::word_t*         temp_block_;$/;"	m	class:bm::blocks_manager::block_opt_func
temp_block_	src/graphlab/extern/bitmagic/bmblocks.h	/^    bm::word_t*                            temp_block_; $/;"	m	class:bm::blocks_manager
temp_block_	src/graphlab/extern/bitmagic/bmserial.h	/^    bm::word_t*      temp_block_;$/;"	m	class:bm::deserializer
temp_block_	src/graphlab/extern/bitmagic/bmserial.h	/^    bm::word_t*    temp_block_;$/;"	m	class:bm::serializer
term_functions	src/graphlab/distributed/distributed_engine.hpp	/^    std::vector<termination_function_type> term_functions;$/;"	m	class:graphlab::distributed_engine
term_functions	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    std::vector<termination_function_type> term_functions;$/;"	m	class:graphlab::pushy_distributed_engine
term_functions	src/graphlab/engine/asynchronous_engine.hpp	/^    std::vector<termination_function_type> term_functions;$/;"	m	class:graphlab::asynchronous_engine
term_functions	src/graphlab/engine/sim_thread_engine.hpp	/^    std::vector<termination_function_type> term_functions;$/;"	m	class:graphlab::sim_thread_engine
term_functions	src/graphlab/engine/synchronous_engine.hpp	/^    std::vector<termination_function_type> term_functions;$/;"	m	class:graphlab::synchronous_engine
term_functions	src/graphlab/engine/threaded_engine.hpp	/^    std::vector<termination_function_type> term_functions;$/;"	m	class:graphlab::threaded_engine
termid	src/graphlab/distributed/distributed_terminator.hpp	/^    size_t termid;$/;"	m	class:graphlab::distributed_terminator
terminatenow	src/graphlab/distributed/distributed_terminator.hpp	/^    bool terminatenow;$/;"	m	struct:graphlab::distributed_termination_token
terminatenow	src/graphlab/distributed/distributed_terminator.hpp	/^    inline bool terminatenow() {$/;"	f	class:graphlab::distributed_terminator
termination_bound	apps/concomp/concomp.cpp	8;"	d	file:
termination_bound	apps/concomp/lock_concomp.cpp	9;"	d	file:
termination_bound	apps/concomp/rlx_concomp.cpp	8;"	d	file:
termination_bound	apps/concomp/seq_concomp.cpp	10;"	d	file:
termination_bound	apps/concomp/sync_concomp.cpp	9;"	d	file:
termination_bound	apps/pagerank/pagerank.cpp	19;"	d	file:
termination_bound	apps/pagerank/sync_pagerank.cpp	20;"	d	file:
termination_cause	src/graphlab/distributed/distributed_engine.hpp	/^    exec_status termination_cause;$/;"	m	class:graphlab::distributed_engine
termination_condition	apps/gabp/gabp.cpp	/^bool termination_condition(const gl_types::ishared_data* shared_data) {$/;"	f
termination_function_type	src/graphlab/distributed/distributed_engine.hpp	/^    typedef typename base::termination_function_type termination_function_type;$/;"	t	class:graphlab::distributed_engine
termination_function_type	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    typedef typename base::termination_function_type termination_function_type;$/;"	t	class:graphlab::pushy_distributed_engine
termination_function_type	src/graphlab/engine/asynchronous_engine.hpp	/^    typedef typename base::termination_function_type termination_function_type;$/;"	t	class:graphlab::asynchronous_engine
termination_function_type	src/graphlab/engine/iengine.hpp	/^    typedef bool (*termination_function_type) (const ishared_data_type* manager);$/;"	t	class:graphlab::iengine
termination_function_type	src/graphlab/engine/sim_thread_engine.hpp	/^    typedef typename base::termination_function_type termination_function_type;$/;"	t	class:graphlab::sim_thread_engine
termination_function_type	src/graphlab/engine/synchronous_engine.hpp	/^    typedef typename base::termination_function_type termination_function_type;$/;"	t	class:graphlab::synchronous_engine
termination_function_type	src/graphlab/engine/threaded_engine.hpp	/^    typedef typename base::termination_function_type termination_function_type;$/;"	t	class:graphlab::threaded_engine
termination_reason	src/graphlab/engine/asynchronous_engine.hpp	/^    exec_status termination_reason;$/;"	m	class:graphlab::asynchronous_engine
termination_reason	src/graphlab/engine/synchronous_engine.hpp	/^    exec_status termination_reason;$/;"	m	class:graphlab::synchronous_engine
termination_stage1	src/graphlab/util/optimal_termination.hpp	/^    void termination_stage1(size_t cpuid) {$/;"	f	class:graphlab::optimal_termination
termination_stage2	src/graphlab/util/optimal_termination.hpp	/^    void termination_stage2(size_t cpuid) {$/;"	f	class:graphlab::optimal_termination
terminator	src/graphlab/distributed/distributed_control.hpp	/^  distributed_terminator* terminator;$/;"	m	class:graphlab::distributed_control
terminator	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    shared_termination terminator;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
terminator	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  task_count_termination terminator;$/;"	m	class:graphlab::distributed_round_robin_scheduler
terminator	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  task_count_termination terminator;$/;"	m	class:graphlab::distributed_round_robin_scheduler2
terminator	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    shared_termination terminator;$/;"	m	class:graphlab::clustered_priority_scheduler
terminator	src/graphlab/schedulers/fifo_scheduler.hpp	/^    task_count_termination terminator;$/;"	m	class:graphlab::fifo_scheduler
terminator	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    task_count_termination terminator;$/;"	m	class:graphlab::multiqueue_fifo_scheduler
terminator	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    task_count_termination terminator;$/;"	m	class:graphlab::multiqueue_priority_scheduler
terminator	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^    task_count_termination terminator;$/;"	m	class:graphlab::multiqueue_scheduler
terminator	src/graphlab/schedulers/priority_scheduler.hpp	/^    task_count_termination terminator;$/;"	m	class:graphlab::priority_scheduler
terminator	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    task_count_termination terminator;$/;"	m	class:graphlab::round_robin_scheduler
terminator	src/graphlab/schedulers/sampling_scheduler.hpp	/^    task_count_termination terminator;$/;"	m	class:graphlab::sampling_scheduler
terminator	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    shared_termination terminator;$/;"	m	class:graphlab::set_scheduler
terminator	src/graphlab/schedulers/splash_scheduler.hpp	/^    shared_termination terminator;$/;"	m	class:graphlab::splash_scheduler
terminator	src/graphlab/schedulers/sweep_scheduler.hpp	/^    shared_termination terminator;$/;"	m	class:graphlab::sweep_scheduler
terminatoraborted	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    bool terminatoraborted;$/;"	m	class:graphlab::pushy_distributed_engine
terminatoraborted	src/graphlab/engine/sim_thread_engine.hpp	/^    bool terminatoraborted;$/;"	m	class:graphlab::sim_thread_engine
terminatoraborted	src/graphlab/engine/threaded_engine.hpp	/^    bool   terminatoraborted;$/;"	m	class:graphlab::threaded_engine
test	src/graphlab/extern/bitmagic/bm.h	/^    bool test(bm::id_t n) const $/;"	f	class:bm::bvector
test	src/graphlab/extern/bitmagic/bmvmin.h	/^    unsigned test(bm::id_t n) const $/;"	f	class:bm::bvmini
test	src/graphlab/extern/bitmagic/bmvmin.h	/^    unsigned test(bm::id_t n) const $/;"	f	class:bm::miniset
test_bit	src/graphlab/extern/bitmagic/bmfunc.h	/^BMFORCEINLINE unsigned test_bit(const unsigned* block, unsigned  bitpos)$/;"	f	namespace:bm
test_edge	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    inline bool test_edge(edge_id_t e) {$/;"	f	class:graphlab::any_inedge_set
test_vertex	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    bool test_vertex(vertex_id_t v) {$/;"	f	class:graphlab::any_inedge_set
test_vertex	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    bool test_vertex(vertex_id_t v) {$/;"	f	class:graphlab::restricted_vertex_set
textcolor	src/graphlab/logger/logger.cpp	/^void textcolor(FILE* handle, int attr, int fg)$/;"	f
thread	src/graphlab/parallel/pthread_tools.hpp	/^    thread(runnable* obj = NULL, size_t thread_id = 0) : $/;"	f	class:graphlab::thread
thread	src/graphlab/parallel/pthread_tools.hpp	/^  class thread : public runnable {$/;"	c	namespace:graphlab
thread_group	src/graphlab/parallel/pthread_tools.hpp	/^    thread_group() : m_thread_counter(0) { }$/;"	f	class:graphlab::thread_group
thread_group	src/graphlab/parallel/pthread_tools.hpp	/^  class thread_group {$/;"	c	namespace:graphlab
thread_id	src/graphlab/parallel/pthread_tools.cpp	/^  size_t thread::thread_id() {$/;"	f	class:graphlab::thread
thread_id	src/graphlab/parallel/pthread_tools.hpp	/^    size_t thread_id() const { return thread_id_; }$/;"	f	class:graphlab::thread_specific_data
thread_id_	src/graphlab/parallel/pthread_tools.hpp	/^    size_t thread_id_;$/;"	m	class:graphlab::thread_specific_data
thread_keys	src/graphlab/parallel/pthread_tools.cpp	/^    thread_keys() : GRAPHLAB_TSD_ID(0) { $/;"	f	struct:graphlab::thread_keys
thread_keys	src/graphlab/parallel/pthread_tools.cpp	/^  struct thread_keys {$/;"	s	namespace:graphlab	file:
thread_shared_data	src/graphlab.hpp	/^    typedef graphlab::thread_shared_data<graph>  thread_shared_data;$/;"	t	struct:graphlab::types
thread_shared_data	src/graphlab/shared_data/thread_shared_data.hpp	/^    thread_shared_data() : scope_factory(NULL) { }$/;"	f	class:graphlab::thread_shared_data
thread_shared_data	src/graphlab/shared_data/thread_shared_data.hpp	/^  class thread_shared_data : $/;"	c	namespace:graphlab
thread_specific_data	src/graphlab/parallel/pthread_tools.hpp	/^    thread_specific_data(size_t thread_id) :$/;"	f	class:graphlab::thread_specific_data
thread_specific_data	src/graphlab/parallel/pthread_tools.hpp	/^  class thread_specific_data {$/;"	c	namespace:graphlab
threaded_engine	src/graphlab/engine/threaded_engine.hpp	/^    threaded_engine(Graph& g, $/;"	f	class:graphlab::threaded_engine
threaded_engine	src/graphlab/engine/threaded_engine.hpp	/^  class threaded_engine : $/;"	c	namespace:graphlab
threadid	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  volatile long threadid;$/;"	m	struct:win32_mlock_t	file:
threadid	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  volatile pthread_t threadid;$/;"	m	struct:pthread_mlock_t	file:
throttle_rate	src/graphlab/distributed/graph_lock_manager.hpp	/^      size_t throttle_rate;$/;"	m	struct:graphlab::graph_lock_manager::block_request
ti	src/graphlab/util/timer.cpp	/^    timer ti;$/;"	m	class:graphlab::hundredms_timer	file:
timedwait	src/graphlab/parallel/pthread_tools.hpp	/^    inline int timedwait(const mutex& mut, int sec) const {$/;"	f	class:graphlab::conditional
timeout	src/graphlab/distributed/distributed_engine.hpp	/^    double timeout;$/;"	m	class:graphlab::distributed_engine
timeout	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    double timeout;$/;"	m	class:graphlab::pushy_distributed_engine
timeout	src/graphlab/engine/sim_thread_engine.hpp	/^    double timeout;$/;"	m	class:graphlab::sim_thread_engine
timeout	src/graphlab/engine/synchronous_engine.hpp	/^    double timeout;$/;"	m	class:graphlab::synchronous_engine
timeout	src/graphlab/engine/threaded_engine.hpp	/^    size_t timeout;$/;"	m	class:graphlab::threaded_engine
timeout_millis	src/graphlab/engine/asynchronous_engine.hpp	/^    size_t timeout_millis;$/;"	m	class:graphlab::asynchronous_engine
timer	src/graphlab/util/timer.hpp	/^    timer() { }$/;"	f	class:graphlab::timer
timer	src/graphlab/util/timer.hpp	/^  class timer {$/;"	c	namespace:graphlab
times	src/graphlab/factors/unary_factor.hpp	/^    inline void times(const unary_factor& other) {$/;"	f	class:graphlab::unary_factor
times_condition	src/graphlab/factors/table_factor.hpp	/^    inline void times_condition(const table_factor& other,$/;"	f	class:graphlab::table_factor
tmalloc_large	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void* tmalloc_large(mstate m, size_t nb) {$/;"	f	file:
tmalloc_small	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static void* tmalloc_small(mstate m, size_t nb) {$/;"	f	file:
tmatrix	src/graphlab/extern/bitmagic/bmtrans.h	/^struct tmatrix$/;"	s	namespace:bm
tmatrix_	src/graphlab/extern/bitmagic/bmtrans.h	/^    tmatrix_type  tmatrix_;    $/;"	m	class:bm::gap_transpose_engine
tmatrix_distance	src/graphlab/extern/bitmagic/bmtrans.h	/^void tmatrix_distance(const T  tmatrix[BPC][BPS], $/;"	f	namespace:bm
tmatrix_type	src/graphlab/extern/bitmagic/bmtrans.h	/^                tmatrix_type;$/;"	t	class:bm::gap_transpose_engine
tmpt	src/graphlab/extern/metis/GKlib/gk_struct.h	/^	double    tmpt;$/;"	m	struct:__anon12
to	apps/gabp/gabp.cpp	/^  int to;$/;"	m	struct:edata	file:
to_	src/graphlab/extern/bitmagic/bmfunc.h	/^    unsigned to_;$/;"	m	class:bm::decoder_range_adapter
top	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  mchunkptr  top;$/;"	m	struct:malloc_state	file:
top	src/graphlab/schedulers/support/vertex_task_set.hpp	/^    bool top(size_t vertex_id,$/;"	f	class:graphlab::vertex_task_set
top	src/graphlab/util/mutable_queue.hpp	/^    const std::pair<T, Priority>& top() const {$/;"	f	class:graphlab::mutable_queue
top	src/graphlab/util/mutable_queue.hpp	/^    const std::pair<size_t, Priority>& top() const {$/;"	f	class:graphlab::mutable_queue
top_block_size	src/graphlab/extern/bitmagic/bmblocks.h	/^    unsigned top_block_size() const$/;"	f	class:bm::blocks_manager
top_block_size_	src/graphlab/extern/bitmagic/bmblocks.h	/^    unsigned                               top_block_size_;$/;"	m	class:bm::blocks_manager
top_priority	src/graphlab/schedulers/support/vertex_task_set.hpp	/^    double top_priority(size_t vertex_id) {$/;"	f	class:graphlab::vertex_task_set
topological_sort	src/graphlab/distributed/graph/cloned_graph.hpp	/^    bool topological_sort(std::vector<vertex_id_t> &topsort) const {$/;"	f	class:graphlab::cloned_graph
topological_sort	src/graphlab/graph/graph.hpp	/^    bool topological_sort(std::vector<vertex_id_t>& topsort) const {$/;"	f	class:graphlab::graph
topsize	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  size_t     topsize;$/;"	m	struct:malloc_state	file:
total_colors	apps/factor_graph_inference/factor_gibbs.cpp	/^size_t total_colors;$/;"	v
total_priority	src/graphlab/schedulers/support/vertex_task_set.hpp	/^    double total_priority(size_t vertex_id) {$/;"	f	class:graphlab::vertex_task_set
totalreceived	src/graphlab/distributed/distributed_terminator.hpp	/^    size_t totalreceived;$/;"	m	struct:graphlab::distributed_termination_token
totalreferences	src/graphlab/distributed/graph_lock_manager.hpp	/^      size_t totalreferences; \/\/ the total number of references ever acquired$/;"	m	struct:graphlab::graph_lock_manager::request_descriptor
totaltransmitted	src/graphlab/distributed/distributed_terminator.hpp	/^    size_t totaltransmitted;$/;"	m	struct:graphlab::distributed_termination_token
tout_val	src/graphlab/util/timer.cpp	/^    struct itimerval tout_val;$/;"	m	class:graphlab::hundredms_timer	typeref:struct:graphlab::hundredms_timer::itimerval	file:
transform_update_function	src/graphlab/util/par_transform.hpp	/^    void transform_update_function(typename CoreType::types::iscope& scope,$/;"	f	namespace:graphlab::partransform_impl
transpose	src/graphlab/extern/bitmagic/bmtrans.h	/^    void transpose(const GT* BMRESTRICT gap_buf, $/;"	f	class:bm::gap_transpose_engine
traverse_and_check	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static size_t traverse_and_check(mstate m) {$/;"	f	file:
tree	src/graphlab/util/fast_multinomial.hpp	/^    std::vector<float_t> tree;$/;"	m	class:graphlab::fast_multinomial
tree	src/graphlab/util/sampling_tree.hpp	/^    std::vector<Priority> tree;  $/;"	m	class:graphlab::sampling_tree
tree_interior_size	src/graphlab/util/sampling_tree.hpp	/^    size_t tree_interior_size;$/;"	m	class:graphlab::sampling_tree
tree_loc_from_asg	src/graphlab/util/fast_multinomial.hpp	/^    size_t tree_loc_from_asg(size_t asg) const {$/;"	f	class:graphlab::fast_multinomial
tree_merge_handler	src/graphlab/distributed/distributed_shared_data.hpp	/^    static void tree_merge_handler(distributed_control &dc,$/;"	f	class:graphlab::distributed_shared_data
treebin_at	src/graphlab/extern/metis/GKlib/dlmalloc.c	1377;"	d	file:
treebins	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  tbinptr    treebins[NTREEBINS];$/;"	m	struct:malloc_state	file:
treemap	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  binmap_t   treemap;$/;"	m	struct:malloc_state	file:
treemap_is_marked	src/graphlab/extern/metis/GKlib/dlmalloc.c	1456;"	d	file:
trestore	src/graphlab/extern/bitmagic/bmtrans.h	/^    void trestore(GT             gap_head, $/;"	f	class:bm::gap_transpose_engine
trigger_all_erase	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	/^    inline void trigger_all_erase(vertex_id_t v) {$/;"	f	class:graphlab::ivertex_set
trigger_all_insert	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	/^    inline void trigger_all_insert(vertex_id_t v) {$/;"	f	class:graphlab::ivertex_set
trigger_all_modify_edge	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	/^    inline void trigger_all_modify_edge(edge_id_t e) {$/;"	f	class:graphlab::ivertex_set
trigger_all_modify_vertex	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	/^    inline void trigger_all_modify_vertex(vertex_id_t v) {$/;"	f	class:graphlab::ivertex_set
trigger_all_rebuild	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	/^    inline void trigger_all_rebuild(const ss_set_type &rebuildset) {$/;"	f	class:graphlab::ivertex_set
trigger_sync	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    virtual void trigger_sync(size_t index) {}$/;"	f	class:graphlab::distributed_fullsweep_sdm
trigger_sync	src/graphlab/distributed/distributed_shared_data.hpp	/^    void trigger_sync(size_t index) {$/;"	f	class:graphlab::distributed_shared_data
trigger_sync	src/graphlab/shared_data/thread_shared_data.hpp	/^    void trigger_sync(size_t index) {$/;"	f	class:graphlab::thread_shared_data
trigger_sync_all	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    virtual void trigger_sync_all() {}$/;"	f	class:graphlab::distributed_fullsweep_sdm
trigger_sync_all	src/graphlab/distributed/distributed_shared_data.hpp	/^    void trigger_sync_all() {$/;"	f	class:graphlab::distributed_shared_data
trigger_sync_all	src/graphlab/shared_data/thread_shared_data.hpp	/^    void trigger_sync_all() {$/;"	f	class:graphlab::thread_shared_data
trigger_sync_all_handler	src/graphlab/distributed/distributed_shared_data.hpp	/^    static void trigger_sync_all_handler(distributed_control& dc, $/;"	f	class:graphlab::distributed_shared_data
trigger_sync_handler	src/graphlab/distributed/distributed_shared_data.hpp	/^    static void trigger_sync_handler(distributed_control& dc, $/;"	f	class:graphlab::distributed_shared_data
trim	apps/factor_graph_inference/belief_diff.cpp	/^inline std::string trim(const std::string& str) {$/;"	f
trim	apps/factor_graph_inference/factor_graph.hpp	/^  inline std::string trim(const std::string& str) {$/;"	f	class:factor_graph
trim_check	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  size_t     trim_check;$/;"	m	struct:malloc_state	file:
trim_threshold	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^  size_t trim_threshold;$/;"	m	struct:malloc_params	file:
tripple	apps/pagerank/tsv_to_graphlab_bin.cpp	/^struct tripple{$/;"	s	file:
try_delete_edata	src/graphlab/distributed/graph_lock_manager.hpp	/^  void try_delete_edata(edge_id_t eid) {$/;"	f	class:graphlab::graph_lock_manager
try_delete_vdata	src/graphlab/distributed/graph_lock_manager.hpp	/^  void try_delete_vdata(vertex_id_t vertex) {$/;"	f	class:graphlab::graph_lock_manager
try_dequeue	src/graphlab/util/blocking_queue.hpp	/^    inline std::pair<T, bool> try_dequeue() {$/;"	f	class:graphlab::blocking_queue
try_lock	src/graphlab/parallel/pthread_tools.hpp	/^    inline bool try_lock() const {$/;"	f	class:graphlab::mutex
try_lock	src/graphlab/parallel/pthread_tools.hpp	/^    inline bool try_lock() const {$/;"	f	class:graphlab::spinlock
try_sample	src/graphlab/util/fast_multinomial.hpp	/^    bool try_sample(size_t& asg, size_t cpuid) {$/;"	f	class:graphlab::fast_multinomial
trying_to_sleep	src/graphlab/util/shared_termination.hpp	/^    atomic<size_t> trying_to_sleep;$/;"	m	class:graphlab::shared_termination
type	apps/shooting/shooting.cpp	/^  vertex_type type;$/;"	m	struct:vertex_data	file:
type	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype type;                     \/* The type of the representation used *\/$/;"	m	struct:PQueueType
type	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^    typedef bm::bvector<> type;$/;"	t	struct:graphlab::ss_set
type	src/graphlab/schedulers/set_scheduler/set_generic_typedefs.hpp	/^    typedef std::vector<vertex_id_t> type;$/;"	t	struct:graphlab::ss_small_set
type	src/graphlab/util/generics/any.hpp	/^      const std::type_info & type() const {$/;"	f	class:graphlab::any::holder
type	src/graphlab/util/generics/any.hpp	/^    const std::type_info & type() const {$/;"	f	class:graphlab::any
types	src/graphlab.hpp	/^  struct types {$/;"	s	namespace:graphlab
types	src/graphlab/core.hpp	/^    typedef graphlab::types<graphlab::graph<VertexType, EdgeType> > types;$/;"	t	class:graphlab::core
u	src/graphlab/parallel/pthread_tools.hpp	/^      unsigned u;$/;"	m	union:graphlab::spinrwlock::rwticket
uint32_t	src/graphlab/extern/metis/GKlib/gk_arch.h	/^typedef unsigned __int32        uint32_t;$/;"	t
uint32_t	src/graphlab/extern/metis/metis.h	/^  typedef unsigned __int32        uint32_t;$/;"	t
uint64_t	src/graphlab/extern/metis/GKlib/gk_arch.h	/^typedef unsigned __int64        uint64_t;$/;"	t
uint64_t	src/graphlab/extern/metis/metis.h	/^  typedef unsigned __int64        uint64_t;$/;"	t
unary_factor	src/graphlab/factors/unary_factor.hpp	/^    unary_factor(const unary_factor& other) :$/;"	f	class:graphlab::unary_factor
unary_factor	src/graphlab/factors/unary_factor.hpp	/^    unary_factor(uint32_t var = 0, uint16_t arity = 0) :$/;"	f	class:graphlab::unary_factor
unary_factor	src/graphlab/factors/unary_factor.hpp	/^  class unary_factor {  $/;"	c	namespace:graphlab
uniform	src/graphlab/factors/table_factor.hpp	/^    void uniform() {$/;"	f	class:graphlab::table_factor
uniform	src/graphlab/factors/table_factor.hpp	/^    void uniform(double value) {$/;"	f	class:graphlab::table_factor
uniform	src/graphlab/factors/unary_factor.hpp	/^    inline void uniform(double value = 0) {$/;"	f	class:graphlab::unary_factor
uniform_sample	src/graphlab/factors/table_factor.hpp	/^    void uniform_sample() {$/;"	f	class:graphlab::assignment
unlink_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	2285;"	d	file:
unlink_first_small_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	2108;"	d	file:
unlink_large_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	2208;"	d	file:
unlink_small_chunk	src/graphlab/extern/metis/GKlib/dlmalloc.c	2088;"	d	file:
unlock	src/graphlab/distributed/lock_manager.hpp	/^    inline void unlock() {$/;"	f	struct:graphlab::distributed_lock_manager::distrwlock
unlock	src/graphlab/distributed/lock_manager.hpp	/^  inline void unlock(const vertex_id_t &v) {$/;"	f	class:graphlab::distributed_lock_manager
unlock	src/graphlab/parallel/pthread_tools.hpp	/^    inline void unlock() const {$/;"	f	class:graphlab::mutex
unlock	src/graphlab/parallel/pthread_tools.hpp	/^    inline void unlock() const {$/;"	f	class:graphlab::rwlock
unlock	src/graphlab/parallel/pthread_tools.hpp	/^    inline void unlock() const {$/;"	f	class:graphlab::spinlock
unlock	src/graphlab/parallel/pthread_tools.hpp	/^    inline void unlock() const {$/;"	f	class:graphlab::spinrwlock
unlock_requests	src/graphlab/distributed/graph_lock_manager.hpp	/^    blocking_queue<size_t> unlock_requests;$/;"	m	class:graphlab::graph_lock_manager
unlocking_thread	src/graphlab/distributed/graph_lock_manager.hpp	/^    background_unlock_thread *unlocking_thread;$/;"	m	class:graphlab::graph_lock_manager
unsupported_serialize	src/graphlab/serialization/unsupported_serialize.hpp	/^  struct unsupported_serialize {$/;"	s	namespace:graphlab
unsync_doublesize	src/graphlab/util/synchronized_circular_queue.hpp	/^    void unsync_doublesize() {$/;"	f	class:graphlab::synchronized_circular_queue
unsync_modify_edge	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    void unsync_modify_edge(ivertex_set* parent, edge_id_t e) {$/;"	f	class:graphlab::any_inedge_set
unused_scheduler_callback	src/graphlab/schedulers/support/unused_scheduler_callback.hpp	/^    unused_scheduler_callback(iengine_type* engine = NULL) :$/;"	f	class:graphlab::unused_scheduler_callback
unused_scheduler_callback	src/graphlab/schedulers/support/unused_scheduler_callback.hpp	/^  class unused_scheduler_callback : $/;"	c	namespace:graphlab
uordblks	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	/^  MALLINFO_FIELD_TYPE uordblks; \/* total allocated space *\/$/;"	m	struct:mallinfo
update	src/graphlab/factors/table_factor.hpp	/^    void update(const assignment& other) {$/;"	f	class:graphlab::assignment
update	src/graphlab/util/mutable_queue.hpp	/^    void update(T item, Priority priority) {$/;"	f	class:graphlab::mutable_queue
update	src/graphlab/util/mutable_queue.hpp	/^    void update(size_t item, Priority priority) {$/;"	f	class:graphlab::mutable_queue
update_block_request	src/graphlab/distributed/graph_lock_manager.hpp	/^  void update_block_request(request_descriptor &desc) {$/;"	f	class:graphlab::graph_lock_manager
update_cache	src/graphlab/distributed/distributed_hash_table.cpp	/^void distributed_hash_table::update_cache(size_t key, const any& val) {$/;"	f	class:graphlab::distributed_hash_table
update_counts	src/graphlab/engine/asynchronous_engine.hpp	/^    std::vector<size_t> update_counts;$/;"	m	class:graphlab::asynchronous_engine
update_edge	src/graphlab/distributed/graph/cloned_graph.hpp	/^    void update_edge(edge_id_t e) const {$/;"	f	class:graphlab::cloned_graph
update_edge	src/graphlab/distributed/graph/distributed_graph.hpp	/^    void update_edge(edge_id_t e) const {$/;"	f	class:graphlab::distributed_graph
update_edge_handler	src/graphlab/distributed/graph/cloned_graph.hpp	/^    static void update_edge_handler(distributed_control& dc, size_t source, $/;"	f	class:graphlab::cloned_graph
update_fun	src/graphlab/schedulers/splash_scheduler.hpp	/^    update_function_type update_fun;$/;"	m	class:graphlab::splash_scheduler
update_function	apps/demo/concise_demo.cpp	/^void update_function(gl::iscope& scope,$/;"	f
update_function	apps/demo/demo.cpp	/^void update_function(gl::iscope& scope,$/;"	f
update_function	src/graphlab.hpp	/^    typedef typename update_task::update_function_type update_function;$/;"	t	struct:graphlab::types
update_function	src/graphlab/schedulers/colored_scheduler.hpp	/^    update_function_type update_function;$/;"	m	class:graphlab::colored_scheduler
update_function_list	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^      uint64_t update_function_list;  \/\/ current list of update$/;"	m	struct:graphlab::clustered_priority_scheduler::cpustate
update_function_type	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^                                        update_function_type;$/;"	t	class:graphlab::distributed_collaborative_scheduler_wrapper
update_function_type	src/graphlab/distributed/distributed_engine.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::distributed_engine
update_function_type	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::distributed_phased_sweep_scheduler
update_function_type	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::distributed_round_robin_scheduler
update_function_type	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::distributed_round_robin_scheduler2
update_function_type	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    update_function_type;$/;"	t	class:graphlab::distributed_scheduler_wrapper
update_function_type	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::pushy_distributed_engine
update_function_type	src/graphlab/engine/asynchronous_engine.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::asynchronous_engine
update_function_type	src/graphlab/engine/iengine.hpp	/^    update_function_type;$/;"	t	class:graphlab::iengine
update_function_type	src/graphlab/engine/sim_thread_engine.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::sim_thread_engine
update_function_type	src/graphlab/engine/synchronous_engine.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::synchronous_engine
update_function_type	src/graphlab/engine/threaded_engine.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::threaded_engine
update_function_type	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::clustered_priority_scheduler
update_function_type	src/graphlab/schedulers/colored_scheduler.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::colored_scheduler
update_function_type	src/graphlab/schedulers/fifo_scheduler.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::fifo_scheduler
update_function_type	src/graphlab/schedulers/icallback.hpp	/^    update_function_type;$/;"	t	class:graphlab::icallback
update_function_type	src/graphlab/schedulers/ischeduler.hpp	/^    update_function_type;$/;"	t	class:graphlab::ischeduler
update_function_type	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::multiqueue_fifo_scheduler
update_function_type	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::multiqueue_priority_scheduler
update_function_type	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::multiqueue_scheduler
update_function_type	src/graphlab/schedulers/priority_scheduler.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::priority_scheduler
update_function_type	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::round_robin_scheduler
update_function_type	src/graphlab/schedulers/sampling_scheduler.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::sampling_scheduler
update_function_type	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    update_function_type;$/;"	t	class:graphlab::execution_plan
update_function_type	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::set_scheduler
update_function_type	src/graphlab/schedulers/splash_scheduler.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::splash_scheduler
update_function_type	src/graphlab/schedulers/support/binary_scheduler_callback.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::binary_scheduler_callback
update_function_type	src/graphlab/schedulers/support/binary_vertex_task_set.hpp	/^    update_function_type;$/;"	t	class:graphlab::binary_vertex_task_set
update_function_type	src/graphlab/schedulers/support/direct_callback.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::direct_callback
update_function_type	src/graphlab/schedulers/support/unused_scheduler_callback.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::unused_scheduler_callback
update_function_type	src/graphlab/schedulers/support/vertex_task_set.hpp	/^    update_function_type;$/;"	t	class:graphlab::vertex_task_set
update_function_type	src/graphlab/schedulers/sweep_scheduler.hpp	/^    typedef typename base::update_function_type update_function_type;$/;"	t	class:graphlab::sweep_scheduler
update_function_type	src/graphlab/tasks/update_task.hpp	/^    typedef void(*update_function_type)(iscope_type& scope,$/;"	t	class:graphlab::update_task
update_probe	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    post_update_probe_function update_probe;$/;"	m	class:graphlab::any_inedge_set
update_state	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    void update_state(size_t cpuid, $/;"	f	class:graphlab::distributed_phased_sweep_scheduler
update_state	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    void update_state(size_t cpuid,$/;"	f	class:graphlab::clustered_priority_scheduler
update_state	src/graphlab/schedulers/fifo_scheduler.hpp	/^    void update_state(size_t cpuid,$/;"	f	class:graphlab::fifo_scheduler
update_state	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    void update_state(size_t cpuid,$/;"	f	class:graphlab::multiqueue_fifo_scheduler
update_state	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    void update_state(size_t cpuid,$/;"	f	class:graphlab::multiqueue_priority_scheduler
update_state	src/graphlab/schedulers/priority_scheduler.hpp	/^    void update_state(size_t cpuid,$/;"	f	class:graphlab::priority_scheduler
update_state	src/graphlab/schedulers/sampling_scheduler.hpp	/^    inline void update_state(size_t cpuid,$/;"	f	class:graphlab::sampling_scheduler
update_state	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    void update_state(size_t cpuid,$/;"	f	class:graphlab::set_scheduler
update_state	src/graphlab/schedulers/splash_scheduler.hpp	/^    void update_state(size_t cpuid, $/;"	f	class:graphlab::splash_scheduler
update_state	src/graphlab/schedulers/sweep_scheduler.hpp	/^    void update_state(size_t cpuid, $/;"	f	class:graphlab::sweep_scheduler
update_task	src/graphlab.hpp	/^    typedef graphlab::update_task<graph>        update_task;$/;"	t	struct:graphlab::types
update_task	src/graphlab/tasks/update_task.hpp	/^    update_task(vertex_id_t vertexid = -1, $/;"	f	class:graphlab::update_task
update_task	src/graphlab/tasks/update_task.hpp	/^  class update_task {$/;"	c	namespace:graphlab
update_task_type	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    typedef update_task<Graph> update_task_type;$/;"	t	class:graphlab::distributed_collaborative_scheduler_wrapper
update_task_type	src/graphlab/distributed/distributed_engine.hpp	/^    typedef typename base::update_task_type update_task_type;$/;"	t	class:graphlab::distributed_engine
update_task_type	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    typedef typename base::update_task_type update_task_type;$/;"	t	class:graphlab::distributed_phased_sweep_scheduler
update_task_type	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^    typedef typename base::update_task_type update_task_type;$/;"	t	class:graphlab::distributed_round_robin_scheduler
update_task_type	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^    typedef typename base::update_task_type update_task_type;$/;"	t	class:graphlab::distributed_round_robin_scheduler2
update_task_type	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    typedef update_task<Graph> update_task_type;$/;"	t	class:graphlab::distributed_scheduler_wrapper
update_task_type	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    typedef typename base::update_task_type update_task_type;$/;"	t	class:graphlab::pushy_distributed_engine
update_task_type	src/graphlab/engine/asynchronous_engine.hpp	/^    typedef typename base::update_task_type update_task_type;$/;"	t	class:graphlab::asynchronous_engine
update_task_type	src/graphlab/engine/iengine.hpp	/^    typedef update_task<Graph> update_task_type;$/;"	t	class:graphlab::iengine
update_task_type	src/graphlab/engine/sim_thread_engine.hpp	/^    typedef typename base::update_task_type update_task_type;$/;"	t	class:graphlab::sim_thread_engine
update_task_type	src/graphlab/engine/synchronous_engine.hpp	/^    typedef typename base::update_task_type update_task_type;$/;"	t	class:graphlab::synchronous_engine
update_task_type	src/graphlab/engine/threaded_engine.hpp	/^    typedef typename base::update_task_type update_task_type;$/;"	t	class:graphlab::threaded_engine
update_task_type	src/graphlab/monitoring/console_monitor.hpp	/^    typedef typename imonitor<Graph>::update_task_type update_task_type;$/;"	t	class:graphlab::console_monitor
update_task_type	src/graphlab/monitoring/imonitor.hpp	/^    typedef update_task<Graph> update_task_type;$/;"	t	class:graphlab::imonitor
update_task_type	src/graphlab/monitoring/monitor_multiplexer.hpp	/^    typedef typename imonitor_type::update_task_type update_task_type;$/;"	t	class:graphlab::monitor_multiplexer
update_task_type	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    typedef typename base::update_task_type update_task_type;$/;"	t	class:graphlab::clustered_priority_scheduler
update_task_type	src/graphlab/schedulers/colored_scheduler.hpp	/^    typedef typename base::update_task_type     update_task_type;$/;"	t	class:graphlab::colored_scheduler
update_task_type	src/graphlab/schedulers/fifo_scheduler.hpp	/^    typedef typename base::update_task_type update_task_type;$/;"	t	class:graphlab::fifo_scheduler
update_task_type	src/graphlab/schedulers/icallback.hpp	/^    typedef update_task<Graph> update_task_type;$/;"	t	class:graphlab::icallback
update_task_type	src/graphlab/schedulers/ischeduler.hpp	/^    typedef update_task<Graph> update_task_type;$/;"	t	class:graphlab::ischeduler
update_task_type	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    typedef typename base::update_task_type update_task_type;$/;"	t	class:graphlab::multiqueue_fifo_scheduler
update_task_type	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    typedef typename base::update_task_type     update_task_type;$/;"	t	class:graphlab::multiqueue_priority_scheduler
update_task_type	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^    typedef typename base::update_task_type update_task_type;$/;"	t	class:graphlab::multiqueue_scheduler
update_task_type	src/graphlab/schedulers/priority_scheduler.hpp	/^    typedef typename base::update_task_type update_task_type;$/;"	t	class:graphlab::priority_scheduler
update_task_type	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    typedef typename base::update_task_type update_task_type;$/;"	t	class:graphlab::round_robin_scheduler
update_task_type	src/graphlab/schedulers/sampling_scheduler.hpp	/^    typedef typename base::update_task_type update_task_type;$/;"	t	class:graphlab::sampling_scheduler
update_task_type	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    typedef update_task<Graph> update_task_type;$/;"	t	class:graphlab::execution_plan
update_task_type	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    typedef typename base::update_task_type update_task_type;$/;"	t	class:graphlab::set_scheduler
update_task_type	src/graphlab/schedulers/splash_scheduler.hpp	/^    typedef typename base::update_task_type update_task_type;$/;"	t	class:graphlab::splash_scheduler
update_task_type	src/graphlab/schedulers/support/binary_scheduler_callback.hpp	/^    typedef typename base::update_task_type update_task_type;$/;"	t	class:graphlab::binary_scheduler_callback
update_task_type	src/graphlab/schedulers/support/binary_vertex_task_set.hpp	/^    typedef update_task<Graph> update_task_type;$/;"	t	class:graphlab::binary_vertex_task_set
update_task_type	src/graphlab/schedulers/support/direct_callback.hpp	/^    typedef typename base::update_task_type update_task_type;$/;"	t	class:graphlab::direct_callback
update_task_type	src/graphlab/schedulers/support/unused_scheduler_callback.hpp	/^    typedef typename base::update_task_type update_task_type;$/;"	t	class:graphlab::unused_scheduler_callback
update_task_type	src/graphlab/schedulers/support/vertex_task_set.hpp	/^    typedef update_task<Graph> update_task_type;$/;"	t	class:graphlab::vertex_task_set
update_task_type	src/graphlab/schedulers/sweep_scheduler.hpp	/^    typedef typename base::update_task_type update_task_type;$/;"	t	class:graphlab::sweep_scheduler
update_vertex	src/graphlab/distributed/graph/cloned_graph.hpp	/^    void update_vertex(vertex_id_t v) const {$/;"	f	class:graphlab::cloned_graph
update_vertex	src/graphlab/distributed/graph/distributed_graph.hpp	/^    void update_vertex(vertex_id_t v) const {$/;"	f	class:graphlab::distributed_graph
update_vertex_handler	src/graphlab/distributed/graph/cloned_graph.hpp	/^    static void update_vertex_handler(distributed_control& dc, size_t source, $/;"	f	class:graphlab::cloned_graph
updatefunc	src/graphlab/engine/synchronous_engine.hpp	/^    update_function_type updatefunc;$/;"	m	class:graphlab::synchronous_engine
updatefunc	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^      update_function_type updatefunc;$/;"	m	struct:graphlab::execution_plan::cpu_plan_node
updatefuncs	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    update_function_type* updatefuncs;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
updatefuncs	src/graphlab/schedulers/support/binary_vertex_task_set.hpp	/^    std::vector<update_function_type> updatefuncs;$/;"	m	class:graphlab::binary_vertex_task_set
updatefuncs	src/graphlab/schedulers/sweep_scheduler.hpp	/^    update_function_type* updatefuncs;$/;"	m	class:graphlab::sweep_scheduler
updates	apps/image_denoise/gibbs_denoise.cpp	/^  size_t updates;$/;"	m	struct:vertex_data	file:
updates	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^    std::vector<update_function_type> updates;$/;"	m	class:graphlab::execution_plan
updflock	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    spinlock updflock;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
updflock	src/graphlab/schedulers/support/binary_vertex_task_set.hpp	/^    spinlock updflock;$/;"	m	class:graphlab::binary_vertex_task_set
updflock	src/graphlab/schedulers/sweep_scheduler.hpp	/^    spinlock updflock;$/;"	m	class:graphlab::sweep_scheduler
us	src/graphlab/parallel/pthread_tools.hpp	/^      unsigned short us;$/;"	m	union:graphlab::spinrwlock::rwticket
use_adjacent_vertices	src/graphlab/distributed/graph_lock_manager.hpp	/^    bool use_adjacent_vertices;$/;"	m	class:graphlab::graph_lock_manager
use_control_packets	src/graphlab/distributed/distributed_terminator.hpp	/^    bool use_control_packets;$/;"	m	class:graphlab::distributed_terminator
use_cpu_affinity	src/graphlab/engine/asynchronous_engine.hpp	/^    bool use_cpu_affinity;$/;"	m	class:graphlab::asynchronous_engine
use_lock	src/graphlab/extern/metis/GKlib/dlmalloc.c	1198;"	d	file:
use_mmap	src/graphlab/extern/metis/GKlib/dlmalloc.c	1202;"	d	file:
use_noncontiguous	src/graphlab/extern/metis/GKlib/dlmalloc.c	1206;"	d	file:
use_planner	apps/factor_graph_inference/factor_gibbs.cpp	/^  bool use_planner;$/;"	m	struct:options	file:
used_bits_	src/graphlab/extern/bitmagic/encoding.h	/^    unsigned            used_bits_;  \/\/\/< Bits used in the accumulator$/;"	m	class:bm::bit_in
used_bits_	src/graphlab/extern/bitmagic/encoding.h	/^    unsigned       used_bits_; \/\/\/< Bits used in the accumulator$/;"	m	class:bm::bit_out
users	src/graphlab/parallel/pthread_tools.hpp	/^        unsigned char users;$/;"	m	struct:graphlab::spinrwlock::rwticket::__anon2
usmblks	src/graphlab/extern/metis/GKlib/gk_dlmalloc.h	/^  MALLINFO_FIELD_TYPE usmblks;  \/* maximum total allocated space *\/$/;"	m	struct:mallinfo
v	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^      vertex_id_t v;$/;"	m	struct:graphlab::execution_plan::cpu_plan_node
v	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^      vertex_id_t v;$/;"	m	struct:graphlab::execution_plan::plan_vertex
v_to_int	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    vertex_id_t* v_to_int;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
v_to_int	src/graphlab/schedulers/sweep_scheduler.hpp	/^    vertex_id_t* v_to_int;$/;"	m	class:graphlab::sweep_scheduler
val	src/graphlab/extern/metis/GKlib/gk_getopt.h	/^  int val;          \/*!< These fields control how to report or act on the option $/;"	m	struct:gk_option
val	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype val;$/;"	m	struct:KeyValueType
val	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype val;$/;"	m	struct:__anon5
valid	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^    	bool valid;$/;"	m	struct:graphlab::distributed_fullsweep_sdm::cached_any
valid	src/graphlab/extern/bitmagic/bm.h	/^        bool valid() const$/;"	f	class:bm::bvector::iterator_base
valid_coloring	src/graphlab/graph/graph.hpp	/^    bool valid_coloring() {$/;"	f	class:graphlab::graph
value	apps/concomp/concomp.cpp	/^  vid_t value;$/;"	m	struct:vertex_data	file:
value	apps/concomp/lock_concomp.cpp	/^  vid_t value;$/;"	m	struct:vertex_data	file:
value	apps/concomp/seq_concomp.cpp	/^  vid_t value;$/;"	m	struct:vertex_data	file:
value	apps/concomp/sync_concomp.cpp	/^  vid_t value;$/;"	m	struct:vertex_data	file:
value	apps/pagerank/pagerank.cpp	/^  float value;$/;"	m	struct:vertex_data	file:
value	apps/pagerank/pagerankapp.hpp	/^  float value;$/;"	m	struct:vertex_data
value	apps/pagerank/sync_pagerank.cpp	/^  float value;$/;"	m	struct:vertex_data	file:
value	apps/pagerank/tsv_to_graphlab_bin.cpp	/^  float value;$/;"	m	struct:vertex_data	file:
value	src/graphlab/distributed/distributed_hash_table.hpp	/^  any value; \/\/\/ the value assiciated with this cache entry$/;"	m	class:graphlab::any_lru_list
value	src/graphlab/extern/metis/libmetis/struct.h	/^  double value;$/;"	m	struct:__anon3
value	src/graphlab/parallel/atomic.hpp	/^    volatile T value;$/;"	m	class:graphlab::atomic
value	src/graphlab/serialization/iarchive.hpp	/^	  static const bool value = sizeof(Test<T>(0)) == sizeof(char);$/;"	m	struct:graphlab::iarchive_detail::has_load_method
value	src/graphlab/serialization/oarchive.hpp	/^	  static const bool value = sizeof(Test<T>(0)) == sizeof(char);$/;"	m	struct:graphlab::oarchive_detail::has_save_method
value	src/graphlab/shared_data/thread_shared_data.hpp	/^      any value;$/;"	m	struct:graphlab::thread_shared_data::atomic_entry
value_type	src/graphlab/extern/bitmagic/bm.h	/^        typedef unsigned   value_type;$/;"	t	class:bm::bvector::enumerator
value_type	src/graphlab/extern/bitmagic/bm.h	/^        typedef unsigned value_type;$/;"	t	class:bm::bvector::insert_iterator
value_type	src/graphlab/extern/bitmagic/bmtrans.h	/^    typedef T value_type;$/;"	t	struct:bm::tmatrix
value_type	src/graphlab/util/generics/any.hpp	/^      typedef ValueType value_type;$/;"	t	class:graphlab::any::holder
value_type	src/graphlab/util/synchronized_unordered_map.hpp	/^  typedef Data value_type;$/;"	t	class:graphlab::synchronized_unordered_map
values	src/graphlab/util/mutable_queue.hpp	/^    const std::vector<heap_element>& values() const {$/;"	f	class:graphlab::mutable_queue
values	src/graphlab/util/stl_util.hpp	/^  std::set<T> values(const std::map<Key, T>& map) {$/;"	f	namespace:graphlab
values	src/graphlab/util/stl_util.hpp	/^  std::vector<T> values(const std::map<Key, T>& m, $/;"	f	namespace:graphlab
var	src/graphlab/factors/table_factor.hpp	/^    const variable& var(size_t index) const {$/;"	f	class:graphlab::domain
var	src/graphlab/factors/unary_factor.hpp	/^    const uint32_t& var() const { return _var; }$/;"	f	class:graphlab::unary_factor
var	src/graphlab/factors/unary_factor.hpp	/^    uint32_t& var() { return _var;  }$/;"	f	class:graphlab::unary_factor
var1	src/graphlab/factors/binary_factor.hpp	/^    const uint32_t& var1() const { return _var1; }$/;"	f	class:graphlab::binary_factor
var1	src/graphlab/factors/binary_factor.hpp	/^    uint32_t& var1() { return _var1;  } $/;"	f	class:graphlab::binary_factor
var2	src/graphlab/factors/binary_factor.hpp	/^    const uint32_t& var2() const { return _var2; } $/;"	f	class:graphlab::binary_factor
var2	src/graphlab/factors/binary_factor.hpp	/^    uint32_t& var2() { return _var2;  } $/;"	f	class:graphlab::binary_factor
var_location	src/graphlab/factors/table_factor.hpp	/^    size_t var_location(size_t var_id) const {$/;"	f	class:graphlab::domain
var_name	apps/factor_graph_inference/factor_graph.hpp	/^  const std::string& var_name(size_t id) const {$/;"	f	class:factor_graph
variable	apps/factor_graph_inference/factor_gibbs.hpp	/^  graphlab::variable variable;$/;"	m	struct:vertex_data
variable	src/graphlab/factors/table_factor.hpp	/^    variable() : id(0), arity(0) { }$/;"	f	struct:graphlab::variable
variable	src/graphlab/factors/table_factor.hpp	/^    variable(uint32_t id, uint32_t arity) : id(id), arity(arity) { }$/;"	f	struct:graphlab::variable
variable	src/graphlab/factors/table_factor.hpp	/^  struct variable {$/;"	s	namespace:graphlab
variable_type	apps/factor_graph_inference/factor_bp.hpp	/^typedef factor_graph::variable_type   variable_type;$/;"	t
variable_type	apps/factor_graph_inference/factor_graph.hpp	/^  typedef graphlab::variable               variable_type;$/;"	t	class:factor_graph
variables	apps/factor_graph_inference/factor_graph.hpp	/^  const std::set<variable_type>& variables() const { return _variables; }$/;"	f	class:factor_graph
vcolors	src/graphlab/graph/graph.hpp	/^    std::vector< vertex_color_type > vcolors;  $/;"	m	class:graphlab::graph
vdata	src/graphlab/distributed/graph_lock_manager.hpp	/^      typename Graph::vertex_data_type vdata;$/;"	m	struct:graphlab::graph_lock_manager::vertex_data_wrapper
vect_bit_transpose	src/graphlab/extern/bitmagic/bmtrans.h	/^void vect_bit_transpose(const T* arr, $/;"	f	namespace:bm
vect_bit_trestore	src/graphlab/extern/bitmagic/bmtrans.h	/^void vect_bit_trestore(const T  tmatrix[BPC][BPS], $/;"	f	namespace:bm
vedegreedef	src/graphlab/extern/metis/libmetis/struct.h	/^struct vedegreedef {$/;"	s
vedegrees	src/graphlab/extern/metis/libmetis/struct.h	/^  VEDegreeType *vedegrees;$/;"	m	struct:workspacedef
vertex	src/graphlab/distributed/graph_lock_manager.hpp	/^      vertex_id_t vertex;$/;"	m	struct:graphlab::graph_lock_manager::request_descriptor
vertex	src/graphlab/distributed/graph_lock_manager.hpp	/^  vertex_id_t vertex;$/;"	m	class:graphlab::dist_scope_request
vertex	src/graphlab/distributed/lock_manager.hpp	/^  vertex_id_t vertex;$/;"	m	struct:graphlab::lockrequest
vertex	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^      vertex_id_t vertex;$/;"	m	struct:graphlab::clustered_priority_scheduler::cpustate
vertex	src/graphlab/scope/iscope.hpp	/^    vertex_id_t vertex() { return _vertex; }$/;"	f	class:graphlab::iscope
vertex	src/graphlab/tasks/update_task.hpp	/^    vertex_id_t vertex() const {$/;"	f	class:graphlab::update_task
vertex2id	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    std::vector<uint32_t> vertex2id;$/;"	m	class:graphlab::clustered_priority_scheduler
vertex2locknumber	src/graphlab/distributed/lock_manager.hpp	/^  std::map<vertex_id_t, size_t> vertex2locknumber;$/;"	m	class:graphlab::distributed_lock_manager
vertex2owner	src/graphlab/distributed/graph/cloned_graph.hpp	/^    std::vector<procid_t> vertex2owner;$/;"	m	class:graphlab::cloned_graph
vertex2owner	src/graphlab/distributed/graph/distributed_graph.hpp	/^    std::vector<procid_t> vertex2owner;$/;"	m	class:graphlab::distributed_graph
vertex2reqids	src/graphlab/distributed/graph_lock_manager.hpp	/^    std::vector<std::pair<mutex, std::set<size_t> > > vertex2reqids;  \/\/ only hold parent requests$/;"	m	class:graphlab::graph_lock_manager
vertex_color_type	src/graphlab/graph/graph.hpp	/^  typedef uint8_t vertex_color_type;$/;"	t	namespace:graphlab
vertex_data	apps/concomp/concomp.cpp	/^  vertex_data(vid_t value = 1) : value(value) { }$/;"	f	struct:vertex_data
vertex_data	apps/concomp/concomp.cpp	/^struct vertex_data {$/;"	s	file:
vertex_data	apps/concomp/lock_concomp.cpp	/^  vertex_data(vid_t value = 1) : value(value) { }$/;"	f	struct:vertex_data
vertex_data	apps/concomp/lock_concomp.cpp	/^struct vertex_data {$/;"	s	file:
vertex_data	apps/concomp/rlx_concomp.cpp	/^typedef vid_t vertex_data;$/;"	t	file:
vertex_data	apps/concomp/seq_concomp.cpp	/^  vertex_data(vid_t value = 1) : value(value) { }$/;"	f	struct:vertex_data
vertex_data	apps/concomp/seq_concomp.cpp	/^struct vertex_data {$/;"	s	file:
vertex_data	apps/concomp/sync_concomp.cpp	/^  vertex_data(vid_t value = 1) : value(value) { }$/;"	f	struct:vertex_data
vertex_data	apps/concomp/sync_concomp.cpp	/^struct vertex_data {$/;"	s	file:
vertex_data	apps/demo/concise_demo.cpp	/^struct vertex_data  {$/;"	s	file:
vertex_data	apps/demo/demo.cpp	/^struct vertex_data: public graphlab::unsupported_serialize {$/;"	s	file:
vertex_data	apps/factor_graph_inference/factor_bp.hpp	/^struct vertex_data {$/;"	s
vertex_data	apps/factor_graph_inference/factor_gibbs.hpp	/^  vertex_data() :$/;"	f	struct:vertex_data
vertex_data	apps/factor_graph_inference/factor_gibbs.hpp	/^struct vertex_data {$/;"	s
vertex_data	apps/gabp/gabp.cpp	/^  vertex_data():prev_mean(-1){ };$/;"	f	struct:vertex_data
vertex_data	apps/gabp/gabp.cpp	/^struct vertex_data {$/;"	s	file:
vertex_data	apps/image_denoise/gibbs_denoise.cpp	/^  vertex_data() :$/;"	f	struct:vertex_data
vertex_data	apps/image_denoise/gibbs_denoise.cpp	/^struct vertex_data {$/;"	s	file:
vertex_data	apps/image_denoise/loopybp_denoise.cpp	/^struct vertex_data {$/;"	s	file:
vertex_data	apps/pagerank/pagerank.cpp	/^  vertex_data(float value = 1) : value(value) { }$/;"	f	struct:vertex_data
vertex_data	apps/pagerank/pagerank.cpp	/^struct vertex_data {$/;"	s	file:
vertex_data	apps/pagerank/pagerankapp.hpp	/^  vertex_data() {}$/;"	f	struct:vertex_data
vertex_data	apps/pagerank/pagerankapp.hpp	/^  vertex_data(float v) {$/;"	f	struct:vertex_data
vertex_data	apps/pagerank/pagerankapp.hpp	/^struct vertex_data {$/;"	s
vertex_data	apps/pagerank/sync_pagerank.cpp	/^  vertex_data(float value = 1) : value(value) { }$/;"	f	struct:vertex_data
vertex_data	apps/pagerank/sync_pagerank.cpp	/^struct vertex_data {$/;"	s	file:
vertex_data	apps/pagerank/tsv_to_graphlab_bin.cpp	/^struct vertex_data {$/;"	s	file:
vertex_data	apps/shooting/shooting.cpp	/^  vertex_data() :$/;"	f	struct:vertex_data
vertex_data	apps/shooting/shooting.cpp	/^struct vertex_data {$/;"	s	file:
vertex_data	apps/svm/svm.cpp	/^struct vertex_data {$/;"	s	file:
vertex_data	src/graphlab/distributed/distributed_scope.hpp	/^    const vertex_data_type& vertex_data() const {$/;"	f	class:graphlab::distributed_scope
vertex_data	src/graphlab/distributed/distributed_scope.hpp	/^    vertex_data_type& vertex_data() {$/;"	f	class:graphlab::distributed_scope
vertex_data	src/graphlab/distributed/graph/cloned_graph.hpp	/^    VertexData& vertex_data(vertex_id_t v) {$/;"	f	class:graphlab::cloned_graph
vertex_data	src/graphlab/distributed/graph/cloned_graph.hpp	/^    const VertexData& vertex_data(vertex_id_t v) const {$/;"	f	class:graphlab::cloned_graph
vertex_data	src/graphlab/distributed/graph/distributed_graph.hpp	/^    VertexData& vertex_data(vertex_id_t v) {$/;"	f	class:graphlab::distributed_graph
vertex_data	src/graphlab/distributed/graph/distributed_graph.hpp	/^    const VertexData& vertex_data(vertex_id_t v) const {$/;"	f	class:graphlab::distributed_graph
vertex_data	src/graphlab/graph/graph.hpp	/^    VertexData& vertex_data(vertex_id_t v) {$/;"	f	class:graphlab::graph
vertex_data	src/graphlab/graph/graph.hpp	/^    const VertexData& vertex_data(vertex_id_t v) const {$/;"	f	class:graphlab::graph
vertex_data	src/graphlab/scope/general_scope.hpp	/^    const vertex_data_type& vertex_data() const {$/;"	f	class:graphlab::general_scope
vertex_data	src/graphlab/scope/general_scope.hpp	/^    vertex_data_type& vertex_data() {$/;"	f	class:graphlab::general_scope
vertex_data	src/graphlab/scope/synchronous_scope.hpp	/^    const vertex_data_type& vertex_data() const  {$/;"	f	class:graphlab::synchronous_scope
vertex_data	src/graphlab/scope/synchronous_scope.hpp	/^    vertex_data_type& vertex_data()  {$/;"	f	class:graphlab::synchronous_scope
vertex_data_type	src/graphlab.hpp	/^    typedef typename graph::vertex_data_type vertex_data_type;$/;"	t	struct:graphlab::types
vertex_data_type	src/graphlab/distributed/distributed_scope.hpp	/^    typedef typename Graph::vertex_data_type vertex_data_type;$/;"	t	class:graphlab::distributed_scope
vertex_data_type	src/graphlab/distributed/graph/cloned_graph.hpp	/^    typedef VertexData vertex_data_type;$/;"	t	class:graphlab::cloned_graph
vertex_data_type	src/graphlab/distributed/graph/distributed_graph.hpp	/^    typedef VertexData vertex_data_type;$/;"	t	class:graphlab::distributed_graph
vertex_data_type	src/graphlab/graph/graph.hpp	/^    typedef VertexData vertex_data_type;$/;"	t	class:graphlab::graph
vertex_data_type	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    typedef typename graph_type::vertex_data_type vertex_data_type;$/;"	t	class:graphlab::multinomial_vertex_set
vertex_data_type	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    typedef typename graph_type::vertex_data_type vertex_data_type;$/;"	t	class:graphlab::restricted_vertex_set
vertex_data_type	src/graphlab/scope/general_scope.hpp	/^    typedef typename Graph::vertex_data_type vertex_data_type;$/;"	t	class:graphlab::general_scope
vertex_data_type	src/graphlab/scope/iscope.hpp	/^    typedef typename Graph::vertex_data_type vertex_data_type;$/;"	t	class:graphlab::iscope
vertex_data_type	src/graphlab/scope/synchronous_scope.hpp	/^    typedef typename Graph::vertex_data_type vertex_data_type;$/;"	t	class:graphlab::synchronous_scope
vertex_data_type	src/graphlab/shared_data/ishared_data.hpp	/^    typedef typename Graph::vertex_data_type vertex_data_type;$/;"	t	class:graphlab::ishared_data
vertex_data_type	src/graphlab/shared_data/shared_data_ops.hpp	/^    typedef typename Graph::vertex_data_type vertex_data_type;$/;"	t	struct:graphlab::sync_ops
vertex_data_wrapper	src/graphlab/distributed/graph_lock_manager.hpp	/^    struct vertex_data_wrapper {$/;"	s	class:graphlab::graph_lock_manager
vertex_fun_set	src/graphlab/schedulers/support/vertex_task_set.hpp	/^    typedef std::vector< fun_priority_pair > vertex_fun_set;$/;"	t	class:graphlab::vertex_task_set
vertex_id_t	src/graphlab.hpp	/^    typedef graphlab::vertex_id_t vertex_id_t;$/;"	t	struct:graphlab::types
vertex_id_t	src/graphlab/graph/graph.hpp	/^  typedef uint32_t vertex_id_t;$/;"	t	namespace:graphlab
vertex_queue_type	src/graphlab/util/prioritized_multiqueue.hpp	/^    typedef mutable_queue<size_t, double> vertex_queue_type;$/;"	t	class:graphlab::prioritized_multiqueue
vertex_scope_pushed_updates	src/graphlab/distributed/graph_lock_manager.hpp	/^    bool vertex_scope_pushed_updates;$/;"	m	class:graphlab::graph_lock_manager
vertex_scope_pushed_updates	src/graphlab/distributed/lock_manager.hpp	/^  bool vertex_scope_pushed_updates;$/;"	m	class:graphlab::distributed_lock_manager
vertex_set	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    vertex_set() : isrootset(false) {};$/;"	f	class:graphlab::vertex_set
vertex_set	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^  class vertex_set : $/;"	c	namespace:graphlab
vertex_task_set	src/graphlab/schedulers/support/vertex_task_set.hpp	/^    vertex_task_set(size_t numvertices) :$/;"	f	class:graphlab::vertex_task_set
vertex_task_set	src/graphlab/schedulers/support/vertex_task_set.hpp	/^  class vertex_task_set {$/;"	c	namespace:graphlab
vertex_tasks	src/graphlab/schedulers/fifo_scheduler.hpp	/^    vertex_task_set<Graph> vertex_tasks;$/;"	m	class:graphlab::fifo_scheduler
vertex_tasks	src/graphlab/schedulers/multiqueue_scheduler.hpp	/^    vertex_task_set<Graph> vertex_tasks;$/;"	m	class:graphlab::multiqueue_scheduler
vertex_tasks	src/graphlab/schedulers/sampling_scheduler.hpp	/^    vertex_task_set<Graph> vertex_tasks;$/;"	m	class:graphlab::sampling_scheduler
vertex_type	apps/shooting/shooting.cpp	/^enum vertex_type {DATA_VERTEX, FEATURE_VERTEX};$/;"	g	file:
vertexbits	src/graphlab/schedulers/support/binary_vertex_task_set.hpp	/^    std::vector<size_t> vertexbits;$/;"	m	class:graphlab::binary_vertex_task_set
vertexid	src/graphlab/tasks/update_task.hpp	/^    vertex_id_t vertexid;  $/;"	m	class:graphlab::update_task
vertexnbrs	src/graphlab/distributed/lock_manager.hpp	/^  synchronized_unordered_map<procid_set> vertexnbrs;$/;"	m	class:graphlab::distributed_lock_manager
vertexpacks	src/graphlab/distributed/graph_lock_manager.hpp	/^    atomic<size_t> vertexpacks;$/;"	m	class:graphlab::graph_lock_manager
vertexsets	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    std::vector<ivertex_set_type*> vertexsets;$/;"	m	class:graphlab::set_scheduler
vertexunpacks	src/graphlab/distributed/graph_lock_manager.hpp	/^    atomic<size_t> vertexunpacks;$/;"	m	class:graphlab::graph_lock_manager
vertices	src/graphlab/graph/graph.hpp	/^    std::vector<VertexData> vertices;$/;"	m	class:graphlab::graph
vertid	apps/image_denoise/image.hpp	/^  static size_t vertid(size_t rows, size_t cols, size_t i, size_t j) {$/;"	f	class:image
vertid	apps/image_denoise/image.hpp	/^size_t image::vertid(size_t i, size_t j) const {$/;"	f	class:image
vid_t	apps/concomp/concomp.cpp	/^typedef uint32_t vid_t;$/;"	t	file:
vid_t	apps/concomp/lock_concomp.cpp	/^typedef uint32_t vid_t;$/;"	t	file:
vid_t	apps/concomp/rlx_concomp.cpp	/^typedef uint32_t vid_t;$/;"	t	file:
vid_t	apps/concomp/seq_concomp.cpp	/^typedef uint32_t vid_t;$/;"	t	file:
vid_t	apps/concomp/sync_concomp.cpp	/^typedef uint32_t vid_t;$/;"	t	file:
visualizer	apps/factor_graph_inference/factor_bp.cpp	/^  std::string visualizer;$/;"	m	struct:options	file:
visualizer	apps/factor_graph_inference/factor_gibbs.cpp	/^  std::string visualizer;$/;"	m	struct:options	file:
visualizer	apps/image_denoise/loopybp_denoise.cpp	/^  std::string visualizer;$/;"	m	struct:options	file:
vm	src/graphlab/util/command_line_options.hpp	/^    boost::program_options::variables_map vm;$/;"	m	class:graphlab::command_line_options
vmap	src/graphlab/schedulers/splash_scheduler.hpp	/^    std::vector< uint32_t >       vmap;$/;"	m	class:graphlab::splash_scheduler
vpwgtdef	src/graphlab/extern/metis/libmetis/struct.h	/^struct vpwgtdef {$/;"	s
vrcpu	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    size_t vrcpu;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
vrcpu	src/graphlab/schedulers/sweep_scheduler.hpp	/^    size_t vrcpu;$/;"	m	class:graphlab::sweep_scheduler
vreserve	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    size_t vreserve;$/;"	m	class:graphlab::distributed_phased_sweep_scheduler
vreserve	src/graphlab/schedulers/sweep_scheduler.hpp	/^    size_t vreserve;$/;"	m	class:graphlab::sweep_scheduler
vrinfo	src/graphlab/extern/metis/libmetis/struct.h	/^  VRInfoType *vrinfo;$/;"	m	struct:graphdef
vrinfodef	src/graphlab/extern/metis/libmetis/struct.h	/^struct vrinfodef {$/;"	s
vset	src/graphlab.hpp	/^    typedef graphlab::vertex_set<graph>          vset;$/;"	t	struct:graphlab::types
vset	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    std::vector<unsigned char> vset;$/;"	m	class:graphlab::any_inedge_set
vset	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    fast_multinomial *vset;$/;"	m	class:graphlab::multinomial_vertex_set
vset	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    std::vector<char> vset;$/;"	m	class:graphlab::restricted_vertex_set
vset	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    std::vector<unsigned char> vset;$/;"	m	class:graphlab::vertex_set
vset_find	src/graphlab/schedulers/support/vertex_task_set.hpp	/^    bool vset_find(const vertex_fun_set& fun_set,$/;"	f	class:graphlab::vertex_task_set
vset_inedgecount	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    std::vector<uint32_t> vset_inedgecount;$/;"	m	class:graphlab::any_inedge_set
vset_remove	src/graphlab/schedulers/support/vertex_task_set.hpp	/^    void vset_remove(vertex_fun_set& fun_set,$/;"	f	class:graphlab::vertex_task_set
vset_top	src/graphlab/schedulers/support/vertex_task_set.hpp	/^    size_t vset_top(const vertex_fun_set& fun_set) const {$/;"	f	class:graphlab::vertex_task_set
vset_total	src/graphlab/schedulers/support/vertex_task_set.hpp	/^    double vset_total(const vertex_fun_set& fun_set) const {$/;"	f	class:graphlab::vertex_task_set
vsize	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *vsize;		\/* Vertex sizes for min-volume formulation *\/$/;"	m	struct:graphdef
vwgt	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *vwgt;		\/* Vertex weights *\/$/;"	m	struct:graphdef
w	apps/svm/svm.cpp	/^  float w;$/;"	m	struct:feat_vertex_data	file:
w_update_function	apps/svm/svm.cpp	/^void w_update_function(gl_types::iscope &scope,$/;"	f
wait	src/graphlab/parallel/pthread_tools.hpp	/^    inline void wait() const { pthread_barrier_wait(&m_barrier); }$/;"	f	class:graphlab::barrier
wait	src/graphlab/parallel/pthread_tools.hpp	/^    inline void wait() const {$/;"	f	class:graphlab::semaphore
wait	src/graphlab/parallel/pthread_tools.hpp	/^    inline void wait() {$/;"	f	class:graphlab::barrier
wait	src/graphlab/parallel/pthread_tools.hpp	/^    inline void wait(const mutex& mut) const {$/;"	f	class:graphlab::conditional
wait	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    void wait() {$/;"	f	class:graphlab::set_scheduler
wait_for_update	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      bool wait_for_update;$/;"	m	struct:graphlab::distributed_fullsweep_sdm::sync_state
wait_until_empty	src/graphlab/util/blocking_queue.hpp	/^    bool wait_until_empty() {$/;"	f	class:graphlab::blocking_queue
waitid	src/graphlab/schedulers/set_scheduler/execution_plan.hpp	/^      int waitid;$/;"	m	struct:graphlab::execution_plan::cpu_plan_node
waiting	src/graphlab/parallel/pthread_tools.hpp	/^    std::vector<unsigned char> waiting;$/;"	m	class:graphlab::barrier
waiting	src/graphlab/schedulers/colored_scheduler.hpp	/^    atomic<size_t> waiting;$/;"	m	class:graphlab::colored_scheduler
warningprinted	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    bool warningprinted;$/;"	m	class:graphlab::set_scheduler
wbgradient	apps/svm/wbgradient.m	/^function [dw,db] = wbgradient(x,y,w,b,C)$/;"	f
wchange	apps/shooting/shooting.cpp	/^  float wchange;$/;"	m	struct:vertex_data	file:
weight	apps/concomp/concomp.cpp	/^  vid_t weight;$/;"	m	struct:edge_data	file:
weight	apps/concomp/lock_concomp.cpp	/^  vid_t weight;$/;"	m	struct:edge_data	file:
weight	apps/concomp/seq_concomp.cpp	/^  std::atomic<vid_t> weight;$/;"	m	struct:edge_data	file:
weight	apps/concomp/sync_concomp.cpp	/^  vid_t weight;$/;"	m	struct:edge_data	file:
weight	apps/gabp/gabp.cpp	/^  double weight;$/;"	m	struct:edata	file:
weight	apps/gabp/gabp.cpp	/^  sdouble weight; \/\/edge value$/;"	m	struct:edge_data	file:
weight	apps/pagerank/pagerank.cpp	/^  float weight;$/;"	m	struct:edge_data	file:
weight	apps/pagerank/pagerankapp.hpp	/^  float weight;$/;"	m	struct:edge_data
weight	apps/pagerank/sync_pagerank.cpp	/^  float weight;$/;"	m	struct:edge_data	file:
weight	apps/pagerank/tsv_to_graphlab_bin.cpp	/^  float weight;$/;"	m	struct:edge_data	file:
weight	apps/shooting/shooting.cpp	/^  float weight;$/;"	m	struct:vertex_data	file:
weight_update_function	apps/shooting/shooting.cpp	/^void weight_update_function(gl_types::iscope& scope,$/;"	f
weighted_bufferutilization	src/graphlab/distributed/distributed_control.hpp	/^    size_t weighted_bufferutilization;$/;"	m	struct:graphlab::distributed_control::recv_buffer
where	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *where, *pwgts;$/;"	m	struct:graphdef
win32_acquire_lock	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static FORCEINLINE int win32_acquire_lock (MLOCK_T *sl) {$/;"	f	file:
win32_mlock_t	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^struct win32_mlock_t$/;"	s	file:
win32_release_lock	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static FORCEINLINE void win32_release_lock (MLOCK_T *sl) {$/;"	f	file:
win32_try_lock	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static FORCEINLINE int win32_try_lock (MLOCK_T *sl) {$/;"	f	file:
win32direct_mmap	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static FORCEINLINE void* win32direct_mmap(size_t size) {$/;"	f	file:
win32mmap	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static FORCEINLINE void* win32mmap(size_t size) {$/;"	f	file:
win32munmap	src/graphlab/extern/metis/GKlib/dlmalloc.c	/^static FORCEINLINE int win32munmap(void* ptr, size_t size) {$/;"	f	file:
withdata	src/graphlab/distributed/lock_manager.hpp	/^    bool withdata;$/;"	m	struct:graphlab::distributed_lock_manager::lock_descriptor
word_bitcount	src/graphlab/extern/bitmagic/bmfunc.h	/^bm::id_t word_bitcount(bm::id_t w)$/;"	f	namespace:bm
word_bitcount64	src/graphlab/extern/bitmagic/bmfunc.h	/^inline bm::id_t word_bitcount64(bm::id64_t w)$/;"	f	namespace:bm
word_t	src/graphlab/extern/bitmagic/bmconst.h	/^typedef unsigned int   word_t;$/;"	t	namespace:bm
wordcmp	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename T> int wordcmp(T a, T b)$/;"	f	namespace:bm
wordcmp0	src/graphlab/extern/bitmagic/bmfunc.h	/^template<typename T> int wordcmp0(T w1, T w2)$/;"	f	namespace:bm
wordop_t	src/graphlab/extern/bitmagic/bmconst.h	/^typedef id64_t  wordop_t;$/;"	t	namespace:bm
wordop_t	src/graphlab/extern/bitmagic/bmconst.h	/^typedef word_t wordop_t;$/;"	t	namespace:bm
work	src/graphlab/schedulers/splash_scheduler.hpp	/^    size_t work(const vertex_id_t &v) const {$/;"	f	class:graphlab::splash_scheduler
worker	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    std::vector<scheduler_worker> worker;  \/\/\/ The worker running the schedule$/;"	m	class:graphlab::set_scheduler
worker	src/graphlab/util/optimal_termination.hpp	/^    optimal_termination_worker worker;$/;"	m	class:graphlab::optimal_termination
worker_works	src/graphlab/distributed/distributed_engine.hpp	/^    std::vector<size_t> worker_works;$/;"	m	class:graphlab::distributed_engine
worker_works	src/graphlab/distributed/pushy_distributed_engine.hpp	/^    std::vector<size_t> worker_works;$/;"	m	class:graphlab::pushy_distributed_engine
worker_works	src/graphlab/engine/sim_thread_engine.hpp	/^    std::vector<size_t> worker_works;$/;"	m	class:graphlab::sim_thread_engine
worker_works	src/graphlab/engine/threaded_engine.hpp	/^    std::vector<size_t> worker_works;$/;"	m	class:graphlab::threaded_engine
workerid	src/graphlab/distributed/distributed_engine.hpp	/^      size_t workerid;$/;"	m	class:graphlab::distributed_engine::task_worker
workerid	src/graphlab/distributed/pushy_distributed_engine.hpp	/^      size_t workerid;$/;"	m	class:graphlab::pushy_distributed_engine::task_worker
workerid	src/graphlab/engine/asynchronous_engine.hpp	/^      size_t workerid;$/;"	m	class:graphlab::asynchronous_engine::engine_thread
workerid	src/graphlab/engine/synchronous_engine.hpp	/^      size_t workerid;$/;"	m	class:graphlab::synchronous_engine::synchronous_worker
workerid	src/graphlab/engine/threaded_engine.hpp	/^      size_t workerid;$/;"	m	class:graphlab::threaded_engine::engine_thread
workspacedef	src/graphlab/extern/metis/libmetis/struct.h	/^struct workspacedef {$/;"	s
write	src/graphlab/parallel/pthread_tools.hpp	/^        unsigned char write;$/;"	m	struct:graphlab::spinrwlock::rwticket::__anon2
write	src/graphlab/util/binary_parser.hpp	/^    template<typename T> void write(T t) {$/;"	f	class:graphlab::binary_output_stream
write_vec	apps/gabp/gabp.cpp	/^void write_vec(FILE * f, int len, double * array){$/;"	f
writelock	src/graphlab/distributed/lock_manager.hpp	/^    inline void writelock() {$/;"	f	struct:graphlab::distributed_lock_manager::distrwlock
writelock	src/graphlab/parallel/pthread_tools.hpp	/^    inline void writelock() const {$/;"	f	class:graphlab::rwlock
writelock	src/graphlab/parallel/pthread_tools.hpp	/^    inline void writelock() const {$/;"	f	class:graphlab::spinrwlock
writelockqueue	src/graphlab/distributed/lock_manager.hpp	/^  std::vector<std::list<lock_descriptor*> > writelockqueue;$/;"	m	class:graphlab::distributed_lock_manager
writer	src/graphlab/distributed/lock_manager.hpp	/^    bool writer;$/;"	m	struct:graphlab::distributed_lock_manager::distrwlock
writing	src/graphlab/parallel/pthread_tools.hpp	/^    mutable bool writing;$/;"	m	class:graphlab::spinrwlock
wrunlock	src/graphlab/parallel/pthread_tools.hpp	/^    inline void wrunlock() const {$/;"	f	class:graphlab::rwlock
wrunlock	src/graphlab/parallel/pthread_tools.hpp	/^    inline void wrunlock() const{$/;"	f	class:graphlab::spinrwlock
wspace	src/graphlab/extern/metis/libmetis/struct.h	/^  WorkSpaceType wspace;		\/* Work Space Informations *\/$/;"	m	struct:controldef
x	apps/shooting/shooting.cpp	/^  float x;$/;"	m	struct:edge_data	file:
x	apps/svm/svm.cpp	/^  float x;$/;"	m	struct:edge_data	file:
x	src/graphlab/extern/metis/GKlib/gk_struct.h	/^	double    x;$/;"	m	struct:__anon12
xadj	src/graphlab/extern/metis/libmetis/struct.h	/^  idxtype *xadj;		\/* Pointers to the locally stored vertices *\/$/;"	m	struct:graphdef
xdispatcher	src/graphlab/distributed/distributed_control.hpp	/^typedef void (*xdispatcher)(distributed_control& dc, size_t source,$/;"	t	namespace:graphlab
xor_bit_block	src/graphlab/extern/bitmagic/bmfunc.h	/^inline void xor_bit_block(unsigned* dest, $/;"	f	namespace:bm
xor_op	src/graphlab/extern/bitmagic/bmfunc.h	/^inline unsigned xor_op(unsigned v1, unsigned v2)$/;"	f	namespace:bm
xor_swap	src/graphlab/extern/bitmagic/bmfunc.h	/^void xor_swap(W& x, W& y) $/;"	f	namespace:bm
xsdispatcher	src/graphlab/distributed/distributed_control.hpp	/^typedef void (*xsdispatcher)(distributed_control& dc, size_t source,$/;"	t	namespace:graphlab
y	apps/svm/svm.cpp	/^  char y;$/;"	m	struct:dat_vertex_data	file:
y	src/graphlab/extern/metis/GKlib/gk_struct.h	/^	double    y;$/;"	m	struct:__anon12
yresidual	apps/shooting/shooting.cpp	/^  float yresidual;$/;"	m	struct:vertex_data	file:
yvalue	apps/shooting/shooting.cpp	/^  float yvalue;$/;"	m	struct:vertex_data	file:
z	src/graphlab/extern/metis/GKlib/gk_struct.h	/^	double    z;$/;"	m	struct:__anon12
zero	src/graphlab/distributed/distributed_fullsweep_sdm.hpp	/^      any zero;$/;"	m	struct:graphlab::distributed_fullsweep_sdm::sync_task
zero	src/graphlab/distributed/distributed_shared_data.hpp	/^      any zero;$/;"	m	struct:graphlab::distributed_shared_data::sync_task
zero	src/graphlab/factors/table_factor.hpp	/^    void zero() { std::fill(_data.begin(), _data.end(), 0); }$/;"	f	class:graphlab::table_factor
zero	src/graphlab/shared_data/thread_shared_data.hpp	/^      any zero;$/;"	m	struct:graphlab::thread_shared_data::sync_task
zero	src/graphlab/util/fast_multinomial.hpp	/^    void zero(size_t asg) {$/;"	f	class:graphlab::fast_multinomial
zero_block	src/graphlab/extern/bitmagic/bmblocks.h	/^    bm::word_t* zero_block(unsigned nb)$/;"	f	class:bm::blocks_manager
~__any_placeholder	src/graphlab/util/generics/any.hpp	/^    virtual ~__any_placeholder() { }$/;"	f	class:graphlab::__any_placeholder
~any	src/graphlab/util/generics/any.hpp	/^    ~any() {$/;"	f	class:graphlab::any
~any_inedge_set	src/graphlab/schedulers/set_scheduler/any_inedge_set.hpp	/^    ~any_inedge_set() {};$/;"	f	class:graphlab::any_inedge_set
~any_lru_list	src/graphlab/distributed/distributed_hash_table.hpp	/^  ~any_lru_list() { }$/;"	f	class:graphlab::any_lru_list
~barrier	src/graphlab/parallel/pthread_tools.hpp	/^    ~barrier() { pthread_barrier_destroy(&m_barrier); }$/;"	f	class:graphlab::barrier
~barrier	src/graphlab/parallel/pthread_tools.hpp	/^    ~barrier() {}$/;"	f	class:graphlab::barrier
~binary_scheduler_callback	src/graphlab/schedulers/support/binary_scheduler_callback.hpp	/^    virtual ~binary_scheduler_callback() {}$/;"	f	class:graphlab::binary_scheduler_callback
~bit_block_guard	src/graphlab/extern/bitmagic/bmblocks.h	/^    ~bit_block_guard()$/;"	f	class:bm::bit_block_guard
~bit_out	src/graphlab/extern/bitmagic/encoding.h	/^    ~bit_out()$/;"	f	class:bm::bit_out
~blob	src/graphlab/util/generics/blob.hpp	/^    ~blob() { clear();  }$/;"	f	class:graphlab::blob
~blocking_queue	src/graphlab/util/blocking_queue.hpp	/^    ~blocking_queue() {$/;"	f	class:graphlab::blocking_queue
~blocks_manager	src/graphlab/extern/bitmagic/bmblocks.h	/^    ~blocks_manager()$/;"	f	class:bm::blocks_manager
~bvector_mini	src/graphlab/extern/bitmagic/bmvmin.h	/^    ~bvector_mini()$/;"	f	class:bm::bvector_mini
~clustered_priority_scheduler	src/graphlab/schedulers/clustered_priority_scheduler.hpp	/^    ~clustered_priority_scheduler() { }$/;"	f	class:graphlab::clustered_priority_scheduler
~conditional	src/graphlab/parallel/pthread_tools.hpp	/^    ~conditional() {$/;"	f	class:graphlab::conditional
~core	src/graphlab/core.hpp	/^    ~core() { destroy_engine(); } $/;"	f	class:graphlab::core
~dense_bitset	src/graphlab/util/dense_bitset.hpp	/^    ~dense_bitset() {free(array);}$/;"	f	class:graphlab::dense_bitset
~direct_callback	src/graphlab/schedulers/support/direct_callback.hpp	/^    ~direct_callback() { }$/;"	f	class:graphlab::direct_callback
~distributed_collaborative_scheduler_wrapper	src/graphlab/distributed/distributed_collaborative_scheduler_wrapper.hpp	/^    virtual ~distributed_collaborative_scheduler_wrapper() {};$/;"	f	class:graphlab::distributed_collaborative_scheduler_wrapper
~distributed_control	src/graphlab/distributed/distributed_control.cpp	/^distributed_control::~distributed_control() {$/;"	f	class:graphlab::distributed_control
~distributed_engine	src/graphlab/distributed/distributed_engine.hpp	/^    ~distributed_engine() {$/;"	f	class:graphlab::distributed_engine
~distributed_hash_table	src/graphlab/distributed/distributed_hash_table.cpp	/^distributed_hash_table::~distributed_hash_table() {$/;"	f	class:graphlab::distributed_hash_table
~distributed_phased_sweep_scheduler	src/graphlab/distributed/distributed_phased_sweep_scheduler.hpp	/^    ~distributed_phased_sweep_scheduler() { $/;"	f	class:graphlab::distributed_phased_sweep_scheduler
~distributed_round_robin_scheduler	src/graphlab/distributed/distributed_round_robin_scheduler.hpp	/^  ~distributed_round_robin_scheduler() { }$/;"	f	class:graphlab::distributed_round_robin_scheduler
~distributed_round_robin_scheduler2	src/graphlab/distributed/distributed_round_robin_scheduler2.hpp	/^  ~distributed_round_robin_scheduler2() { }$/;"	f	class:graphlab::distributed_round_robin_scheduler2
~distributed_scheduler_wrapper	src/graphlab/distributed/distributed_scheduler_wrapper.hpp	/^    virtual ~distributed_scheduler_wrapper() {};$/;"	f	class:graphlab::distributed_scheduler_wrapper
~distributed_scope	src/graphlab/distributed/distributed_scope.hpp	/^    ~distributed_scope() { }$/;"	f	class:graphlab::distributed_scope
~file_logger	src/graphlab/logger/logger.cpp	/^file_logger::~file_logger() {$/;"	f	class:file_logger
~fixed_dense_bitset	src/graphlab/util/dense_bitset.hpp	/^    ~fixed_dense_bitset() {}$/;"	f	class:graphlab::fixed_dense_bitset
~general_scope	src/graphlab/scope/general_scope.hpp	/^    ~general_scope() { }$/;"	f	class:graphlab::general_scope
~general_scope_factory	src/graphlab/scope/general_scope_factory.hpp	/^    ~general_scope_factory() { $/;"	f	class:graphlab::general_scope_factory
~graph_lock_manager	src/graphlab/distributed/graph_lock_manager.hpp	/^  ~graph_lock_manager() {$/;"	f	class:graphlab::graph_lock_manager
~hundredms_timer	src/graphlab/util/timer.cpp	/^    ~hundredms_timer() {  $/;"	f	class:graphlab::hundredms_timer
~icallback	src/graphlab/schedulers/icallback.hpp	/^    virtual ~icallback() {}$/;"	f	class:graphlab::icallback
~iengine	src/graphlab/engine/iengine.hpp	/^    virtual ~iengine() {};$/;"	f	class:graphlab::iengine
~ischeduler	src/graphlab/schedulers/ischeduler.hpp	/^    virtual ~ischeduler() {};$/;"	f	class:graphlab::ischeduler
~iscope	src/graphlab/scope/iscope.hpp	/^    virtual ~iscope() { }$/;"	f	class:graphlab::iscope
~iscope_factory	src/graphlab/scope/iscope_factory.hpp	/^    virtual ~iscope_factory() {}$/;"	f	class:graphlab::iscope_factory
~ivertex_set	src/graphlab/schedulers/set_scheduler/ivertex_set.hpp	/^    virtual ~ivertex_set() {};$/;"	f	class:graphlab::ivertex_set
~messageproc_thread	src/graphlab/distributed/dc_receive.cpp	/^distributed_control::messageproc_thread::~messageproc_thread() {$/;"	f	class:graphlab::distributed_control::messageproc_thread
~miniset	src/graphlab/extern/bitmagic/bmvmin.h	/^    ~miniset()$/;"	f	class:bm::miniset
~monitor_multiplexer	src/graphlab/monitoring/monitor_multiplexer.hpp	/^    ~monitor_multiplexer() {$/;"	f	class:graphlab::monitor_multiplexer
~multinomial_vertex_set	src/graphlab/schedulers/set_scheduler/multinomial_vertex_set.hpp	/^    ~multinomial_vertex_set() {$/;"	f	class:graphlab::multinomial_vertex_set
~multiqueue_fifo_scheduler	src/graphlab/schedulers/multiqueue_fifo_scheduler.hpp	/^    ~multiqueue_fifo_scheduler() {}$/;"	f	class:graphlab::multiqueue_fifo_scheduler
~multiqueue_priority_scheduler	src/graphlab/schedulers/multiqueue_priority_scheduler.hpp	/^    ~multiqueue_priority_scheduler() {}$/;"	f	class:graphlab::multiqueue_priority_scheduler
~mutex	src/graphlab/parallel/pthread_tools.hpp	/^    ~mutex(){$/;"	f	class:graphlab::mutex
~oarchive	src/graphlab/serialization/oarchive.hpp	/^    ~oarchive() {$/;"	f	class:graphlab::oarchive
~optimal_termination	src/graphlab/util/optimal_termination.hpp	/^    ~optimal_termination(){ $/;"	f	class:graphlab::optimal_termination
~pagerankapp	apps/pagerank/pagerankapp.cpp	/^pagerankapp::~pagerankapp() {$/;"	f	class:pagerankapp
~prioritized_multiqueue	src/graphlab/util/prioritized_multiqueue.hpp	/^    ~prioritized_multiqueue() { };$/;"	f	class:graphlab::prioritized_multiqueue
~priority_scheduler	src/graphlab/schedulers/priority_scheduler.hpp	/^    ~priority_scheduler() { }$/;"	f	class:graphlab::priority_scheduler
~random_subset	src/graphlab/extern/bitmagic/bmrandom.h	/^random_subset<BV>::~random_subset()$/;"	f	class:bm::random_subset
~restricted_vertex_set	src/graphlab/schedulers/set_scheduler/restricted_vertex_set.hpp	/^    ~restricted_vertex_set() {};$/;"	f	class:graphlab::restricted_vertex_set
~round_robin_scheduler	src/graphlab/schedulers/round_robin_scheduler.hpp	/^    ~round_robin_scheduler() { }$/;"	f	class:graphlab::round_robin_scheduler
~runnable	src/graphlab/parallel/pthread_tools.hpp	/^    virtual ~runnable() {};$/;"	f	class:graphlab::runnable
~rwlock	src/graphlab/parallel/pthread_tools.hpp	/^    ~rwlock() {$/;"	f	class:graphlab::rwlock
~sampling_tree	src/graphlab/util/sampling_tree.hpp	/^    ~sampling_tree(){}$/;"	f	class:graphlab::sampling_tree
~semaphore	src/graphlab/parallel/pthread_tools.hpp	/^    ~semaphore() {$/;"	f	class:graphlab::semaphore
~serializer	src/graphlab/extern/bitmagic/bmserial.h	/^serializer<BV>::~serializer()$/;"	f	class:bm::serializer
~set_scheduler	src/graphlab/schedulers/set_scheduler/set_scheduler.hpp	/^    ~set_scheduler() { $/;"	f	class:graphlab::set_scheduler
~shared_termination	src/graphlab/util/shared_termination.hpp	/^    ~shared_termination(){ }$/;"	f	class:graphlab::shared_termination
~spinlock	src/graphlab/parallel/pthread_tools.hpp	/^    ~spinlock(){$/;"	f	class:graphlab::spinlock
~sse_empty_guard	src/graphlab/extern/bitmagic/bmsse_util.h	/^    BMFORCEINLINE ~sse_empty_guard() $/;"	f	class:bm::sse_empty_guard
~sweep_scheduler	src/graphlab/schedulers/sweep_scheduler.hpp	/^    ~sweep_scheduler() { $/;"	f	class:graphlab::sweep_scheduler
~synchronized_circular_queue	src/graphlab/util/synchronized_circular_queue.hpp	/^    ~synchronized_circular_queue() {$/;"	f	class:graphlab::synchronized_circular_queue
~synchronized_multiqueue	src/graphlab/util/synchronized_multiqueue.hpp	/^    ~synchronized_multiqueue() { };$/;"	f	class:graphlab::synchronized_multiqueue
~synchronized_queue	src/graphlab/util/synchronized_queue.hpp	/^    ~synchronized_queue() { };$/;"	f	class:graphlab::synchronized_queue
~synchronous_scope	src/graphlab/scope/synchronous_scope.hpp	/^    ~synchronous_scope() { }$/;"	f	class:graphlab::synchronous_scope
~synchronous_scope_factory	src/graphlab/scope/synchronous_scope_factory.hpp	/^    ~synchronous_scope_factory() { }$/;"	f	class:graphlab::synchronous_scope_factory
~task_count_termination	src/graphlab/util/task_count_termination.hpp	/^    ~task_count_termination(){ }$/;"	f	class:graphlab::task_count_termination
~thread	src/graphlab/parallel/pthread_tools.hpp	/^    virtual ~thread() {  }$/;"	f	class:graphlab::thread
~thread_group	src/graphlab/parallel/pthread_tools.hpp	/^    ~thread_group(){ join(); }$/;"	f	class:graphlab::thread_group
~unused_scheduler_callback	src/graphlab/schedulers/support/unused_scheduler_callback.hpp	/^    virtual ~unused_scheduler_callback() {}$/;"	f	class:graphlab::unused_scheduler_callback
~update_task	src/graphlab/tasks/update_task.hpp	/^    ~update_task() {}$/;"	f	class:graphlab::update_task
~vertex_set	src/graphlab/schedulers/set_scheduler/vertex_set.hpp	/^    ~vertex_set() {};$/;"	f	class:graphlab::vertex_set
